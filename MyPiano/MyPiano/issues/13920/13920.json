{
  "WorkItem": {
    "AffectedComponent": {
      "Name": "",
      "DisplayName": ""
    },
    "ClosedComment": "use an IgnoreDispose stream as a workaround",
    "ClosedDate": "2012-09-26T06:10:14.277-07:00",
    "CommentCount": 1,
    "Custom": "",
    "Description": "For convenience, it would be useful if the WaveFileWriter had a constructor overload that would allow an option to not close the output stream when the WaveFileWriter is closed/disposed. This would simplify the create - playback scenario, where one could write waveform data into a memory stream, and then playback from the same memory stream.\n\nAt the moment, you have to:  write to a memory stream, capture the internal memory stream byte buffer before closing the WaveFileWriter, close the wave file writer, construct a new memory stream based on the byte buffer[], and pass the new memory stream to a WaveStream for playback etc.\n\nThis constructor overload could be as simple as:\n\npublic WaveFileWriter(Stream outStream, WaveFormat format, bool closeStream)\n\nAnd for backwards compatibility:\n\npublic WaveFileWriter(Stream outStream, WaveFormat format) : this(outStream, format, false) {}",
    "LastUpdatedDate": "2012-09-26T06:10:14.277-07:00",
    "PlannedForRelease": "",
    "ReleaseVisibleToPublic": false,
    "Priority": {
      "Name": "Low",
      "Severity": 50,
      "Id": 1
    },
    "ProjectName": "naudio",
    "ReportedDate": "2010-08-05T20:58:00.84-07:00",
    "Status": {
      "Name": "Closed",
      "Id": 4
    },
    "ReasonClosed": {
      "Name": "Unassigned"
    },
    "Summary": "Provide an option to WaveFileWriter to not close the output stream",
    "Type": {
      "Name": "Issue",
      "Id": 3
    },
    "VoteCount": 1,
    "Id": 13920
  },
  "FileAttachments": [],
  "Comments": [
    {
      "Message": "for this, I recommend creating your own \"IgnoreDispose\" stream, which inherits from Stream, and passes all method calls down into a source stream, except Dispose, which it simply ignores.",
      "PostedDate": "2012-09-26T06:09:59.51-07:00",
      "Id": 77782
    }
  ]
}