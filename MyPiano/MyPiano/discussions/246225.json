[
  {
    "Id": "566922",
    "ThreadId": "246225",
    "Html": "\r\n<p><span title=\"Здравствуйте!\" style=\"background-color:#ffffff\">Hello!<br>\r\n</span><span title=\"Прошу прощения за &#1084;ой английский, пишу через переводчик, я русский и английский знаю плохо(\" style=\"background-color:#ffffff\">I apologize for my English, I write through the translator (Google),\r\n<span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">I'm</span> <span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">\r\nRussian</span><span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">, and</span>\r\n<span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">English</span> <span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">\r\nis bad</span> <span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">I know=</span>(<br>\r\n</span><span title=\"Я пишу приложение для захвата звука с &#1084;икрофона и отправки по сети - аудио конференция, &#1084;не необходи&#1084;о чтобы несколько человек (около 20) &#1084;огли одновре&#1084;енно общаться друг с друго&#1084;.\" style=\"background-color:#ffffff\">I am writing an application\r\n to capture sound from the microphone and sending across the network - audio conference, I need to have a few people (about 20) can communicate simultaneously with each other.\r\n</span></p>\r\n<div><span title=\"Использую вот этот код:\">Use this code here:<br>\r\n</span></div>\r\n<p></p>\r\n<p><span title=\"Использую вот этот код:\"></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections;\r\n<span style=\"color:blue\">using</span> System.ComponentModel;\r\n<span style=\"color:blue\">using</span> System.Data;\r\n<span style=\"color:blue\">using</span> System.Drawing;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> System.Windows.Forms;\r\n\r\n<span style=\"color:blue\">using</span> System.Net.Sockets;\r\n<span style=\"color:blue\">using</span> System.Net;\r\n<span style=\"color:blue\">using</span> System.Threading;\r\n<span style=\"color:blue\">using</span> NAudio.Wave;\r\n<span style=\"color:blue\">using</span> NAudio.CoreAudioApi;\r\n<span style=\"color:blue\">using</span> System.IO;\r\n\r\n<span style=\"color:blue\">namespace</span> naudio_udp\r\n{\r\n  <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> Form1 : Form\r\n  {\r\n    <span style=\"color:blue\">private</span> Thread mListenThread;\r\n    <span style=\"color:blue\">private</span> IPEndPoint sIpEnd;\r\n    <span style=\"color:blue\">private</span> Socket server;\r\n    <span style=\"color:blue\">private</span> WaveIn wavein;\r\n    <span style=\"color:blue\">private</span> WaveOut waveout;\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">static</span> BufferedWaveProvider wavProv;\r\n\r\n    <span style=\"color:blue\">public</span> Form1()\r\n    {\r\n      InitializeComponent();\r\n\r\n      wavein = <span style=\"color:blue\">new</span> WaveIn();\r\n      wavein.WaveFormat = <span style=\"color:blue\">new</span> WaveFormat(8000, 16, 1);\r\n\r\n      wavein.DataAvailable &#43;= <span style=\"color:blue\">new</span> EventHandler&lt;WaveInEventArgs&gt;(Recorded);\r\n      waveout = <span style=\"color:blue\">new</span> WaveOut();\r\n      wavProv = <span style=\"color:blue\">new</span> BufferedWaveProvider(<span style=\"color:blue\">new</span> WaveFormat(8000, 16, 1));\r\n\r\n      waveout.Init(wavProv);\r\n\r\n      mListenThread = <span style=\"color:blue\">new</span> Thread(<span style=\"color:blue\">new</span> ParameterizedThreadStart(startListen));\r\n      mListenThread.Start();\r\n      server = <span style=\"color:blue\">new</span> Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);\r\n\r\n      wavein.StartRecording();\r\n    }\r\n\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Recorded(<span style=\"color:blue\">object</span> sender, WaveInEventArgs e)\r\n    {\r\n      <span style=\"color:blue\">try</span>\r\n      {\r\n        IPEndPoint cIpEnd = <span style=\"color:blue\">new</span> IPEndPoint(IPAddress.Parse(<span style=\"color:#a31515\">&quot;192.168.2.255&quot;</span>), 12131);\r\n        server.SendTo(e.Buffer, cIpEnd);\r\n      }\r\n      <span style=\"color:blue\">catch</span> { }\r\n    }\r\n\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> startListen(<span style=\"color:blue\">object</span> sender)\r\n    {\r\n      IPEndPoint sIpEnd = <span style=\"color:blue\">new</span> IPEndPoint(IPAddress.Any, 12131);\r\n      Socket sock = <span style=\"color:blue\">new</span> Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);\r\n      sock.Bind(sIpEnd);\r\n\r\n      IPEndPoint remoteIpEnd = <span style=\"color:blue\">new</span> IPEndPoint(IPAddress.Any, 0);\r\n      EndPoint Remote = (EndPoint)remoteIpEnd;\r\n\r\n      waveout.Play();\r\n      <span style=\"color:blue\">int</span> offset = 0;\r\n      <span style=\"color:blue\">while</span> (<span style=\"color:blue\">true</span>)\r\n      {\r\n        <span style=\"color:blue\">byte</span>[] data = <span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[65535];\r\n        <span style=\"color:blue\">int</span> recv = sock.ReceiveFrom(data, <span style=\"color:blue\">ref</span> Remote);\r\n        wavProv.AddSamples(data, offset, recv);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n</pre>\r\n</div>\r\n</span>\r\n<p></p>\r\n<p></p>\r\n<p><span title=\"Если в сети два клиента все за&#1084;ечательно работает, но если же подключается третий, то начинаются пробле&#1084;ы, один клиент вызвал ошибку, другого стало слышно с большой задержкой (около 10-15 секунд).\" style=\"background-color:#ffffff\">If two clients\r\n on the network all works fine, but if it connects the third, then the problem starts, one client called a mistake, another one could hear a long delay (about 10-15 seconds).\r\n</span><span title=\"Пробовал сделать для каждого клиента отдельный поток, со свои&#1084; WaveOut, но в это&#1084; случае воспроизведения звука нет, буфер переполняется, пос&#1084;отрел в отладке, очередь буфера заполняется, но считывания из него не происходит.\" style=\"background-color:#ffffff\">Trying\r\n to do for each client a separate thread, with its WaveOut, but in this case there is no sound, buffer overflows, and looked to debug queue buffer is filled, but the reading of it is not happening.<br>\r\n</span></p>\r\n<p></p>\r\n<p><span title=\"Пробовал сделать для каждого клиента отдельный поток, со свои&#1084; WaveOut, но в это&#1084; случае воспроизведения звука нет, буфер переполняется, пос&#1084;отрел в отладке, очередь буфера заполняется, но считывания из него не происходит.\" style=\"background-color:#ffffff\"></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> startListen(<span style=\"color:blue\">object</span> sender)\r\n{\r\n  IPEndPoint sIpEnd = <span style=\"color:blue\">new</span> IPEndPoint(IPAddress.Any, 12131);\r\n  Socket sock = <span style=\"color:blue\">new</span> Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);\r\n  sock.Bind(sIpEnd);\r\n\r\n  IPEndPoint remoteIpEnd = <span style=\"color:blue\">new</span> IPEndPoint(IPAddress.Any, 0);\r\n  EndPoint Remote = (EndPoint)remoteIpEnd;\r\n\r\n  waveout = <span style=\"color:blue\">new</span> WaveOut();\r\n  wavProv = <span style=\"color:blue\">new</span> BufferedWaveProvider(<span style=\"color:blue\">new</span> WaveFormat(8000, 16, 1));\r\n  waveout.Init(wavProv);\r\n  waveout.Play();\r\n  \r\n  <span style=\"color:blue\">int</span> offset = 0;\r\n  <span style=\"color:blue\">while</span> (<span style=\"color:blue\">true</span>)\r\n  {\r\n    <span style=\"color:blue\">byte</span>[] data = <span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[65535];\r\n    <span style=\"color:blue\">int</span> recv = sock.ReceiveFrom(data, <span style=\"color:blue\">ref</span> Remote);\r\n    wavProv.AddSamples(data, offset, recv);\r\n  }\r\n}\r\n</pre>\r\n</div>\r\n</span>\r\n<p></p>\r\n<p><span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">like this</span> <span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">\r\ndoes not</span> <span title=\"Наж&#1084;ите, чтобы увидеть альтернативный перевод\">work</span></p>\r\n<p><span title=\"Подскажите в че&#1084; &#1084;ожет быть пробле&#1084;а, и как сделать чтобы &#1084;ного клиентов &#1084;огли одновре&#1084;енно общаться.\" style=\"background-color:#ffffff\">Tell me what could be the problem and how to make that many customers could communicate simultaneously.</span></p>\r\n",
    "PostedDate": "2011-02-15T22:09:24.907-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "569511",
    "ThreadId": "246225",
    "Html": "<p>what code are you using to send the data across the network?</p>",
    "PostedDate": "2011-02-21T02:37:04.18-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "569584",
    "ThreadId": "246225",
    "Html": "<p><span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> Recorded(<span style=\"color: blue;\">object</span> sender, WaveInEventArgs e)<br />&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">try</span><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IPEndPoint cIpEnd = <span style=\"color: blue;\">new</span> IPEndPoint(IPAddress.Parse(<span style=\"color: #a31515;\">\"192.168.2.255\"</span>), 12131);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; server.SendTo(e.Buffer, cIpEnd);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: blue;\">catch</span> { }<br />&nbsp;&nbsp;&nbsp; }</p>\r\n<pre><span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> startListen(<span style=\"color: blue;\">object</span> sender)\r\n{\r\n  IPEndPoint sIpEnd = <span style=\"color: blue;\">new</span> IPEndPoint(IPAddress.Any, 12131);\r\n  Socket sock = <span style=\"color: blue;\">new</span> Socket(AddressFamily.InterNetwork, SocketType.Dgram, ProtocolType.Udp);\r\n  sock.Bind(sIpEnd);\r\n\r\n  IPEndPoint remoteIpEnd = <span style=\"color: blue;\">new</span> IPEndPoint(IPAddress.Any, 0);\r\n  EndPoint Remote = (EndPoint)remoteIpEnd;\r\n\r\n  waveout = <span style=\"color: blue;\">new</span> WaveOut();\r\n  wavProv = <span style=\"color: blue;\">new</span> BufferedWaveProvider(<span style=\"color: blue;\">new</span> WaveFormat(8000, 16, 1));\r\n  waveout.Init(wavProv);\r\n  waveout.Play();\r\n  \r\n  <span style=\"color: blue;\">int</span> offset = 0;\r\n  <span style=\"color: blue;\">while</span> (<span style=\"color: blue;\">true</span>)\r\n  {\r\n    <span style=\"color: blue;\">byte</span>[] data = <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">byte</span>[65535];\r\n    <span style=\"color: blue;\">int</span> recv = sock.ReceiveFrom(data, <span style=\"color: blue;\">ref</span> Remote);\r\n    wavProv.AddSamples(data, offset, recv);\r\n  }\r\n}\r\n</pre>",
    "PostedDate": "2011-02-21T05:37:36.973-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]