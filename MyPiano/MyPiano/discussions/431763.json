[
  {
    "Id": "995619",
    "ThreadId": "431763",
    "Html": "Hi,\r<br />\n<br />\nmy today's questions is how to detect digital silence (without noise, pure digital silence) in a (large) wave file and split it into pieces. \r<br />\n<br />\nAs an example (--- means digital silence):\r<br />\n<br />\nInput wave: ----ABCDEFG------HIJKLMN----OPQR---\r<br />\nOutput wave files:\r<br />\n1: ABCDEFG\r<br />\n2: HIJKLMN\r<br />\n3: OPQR\r<br />\n<br />\nThank you very much for your great work! <br />\n",
    "PostedDate": "2013-02-02T11:01:31.44-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "996015",
    "ThreadId": "431763",
    "Html": "You would need to examine each sample individually. A series of consecutive zero values would indicate a period of silence. Then you can copy bits between silence into new wave files using WaveFileWriter.<br />\n",
    "PostedDate": "2013-02-04T03:09:12.107-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "996064",
    "ThreadId": "431763",
    "Html": "Thank you Mark!\r<br />\n<br />\nCould you tell me where I can find an example on how to read a wave file sample by sample?\r<br />\n<br />\nAgain, thank you very much for your help.<br />\n",
    "PostedDate": "2013-02-04T05:01:05.083-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "999585",
    "ThreadId": "431763",
    "Html": "You have to use the BitConverter class to turn the raw bytes into samples. If you are using the very latest NAudio code, you can make use of ReadNextSampleFrame on the WaveFileReader class, which improves on TryReadFloat (which only worked on mono audio files), which simplifies getting samples as floating point values.<br />\n",
    "PostedDate": "2013-02-11T07:16:41.343-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]