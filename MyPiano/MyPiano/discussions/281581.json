[
  {
    "Id": "706358",
    "ThreadId": "281581",
    "Html": "\r\n<p>We are using NAudio to play sound through a USB device and have a problem where the Stop or Dispose methods for out WaveOut object hangs. It seems the problem only happens if the user undocks the USB device while WaveOut is playing a wav file. We are getting\r\n no exceptions being throw for us to catch and handle this event.</p>\r\n<p>We have simplified our threading model, but this has not solved anything and still find that NAudio deadlocks on us, with the callback method holding onto a lock. It seems to hold onto the lock because its call to the winmm.dll waveOutWrite method call hangs,\r\n or never returns, or throws an exception because the device is not there anymore.</p>\r\n<p>Any suggestions would be appreciated.</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2011-12-02T02:36:48.14-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "706360",
    "ThreadId": "281581",
    "Html": "<p>are you using function callbacks? and are you using the very latest NAudio (build from source)?</p>\r\n<p>I fixed a deadlock with function callbacks a while back, and there is also WaveOutEvent which is the preferred option going forwards instead of function callbacks</p>\r\n<p>&nbsp;</p>\r\n<p>Mark</p>",
    "PostedDate": "2011-12-02T02:39:58.533-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "706371",
    "ThreadId": "281581",
    "Html": "<p>Mark,</p>\r\n<p>&nbsp;</p>\r\n<p>We have a version on the DLL of 1.5.3.0 and the following code causes the problem we have...</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: x-small;\"><span style=\"font-size: x-small;\">\r\n<p>&nbsp;</p>\r\n</span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">ManualResetEvent</span></span><span style=\"font-size: x-small;\"> stopped = </span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">new</span></span><span style=\"font-size: x-small;\"> </span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">ManualResetEvent</span></span><span style=\"font-size: x-small;\">(</span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">false</span></span><span style=\"font-size: x-small;\">);</span></span><span style=\"font-size: x-small;\"> <span style=\"font-size: x-small;\"><span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>&nbsp;</p>\r\n</font><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">private</span></span><span style=\"font-size: x-small;\"> </span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">void</span></span><span style=\"font-size: x-small;\"> playsound(</span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">string</span></span><span style=\"font-size: x-small;\"> fileName)</span></span><span style=\"font-size: x-small;\"> </span></span></span>\r\n<p><span style=\"font-size: x-small;\">{<span style=\"font-size: x-small;\">&nbsp;<span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>&nbsp;</p>\r\n</font><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">&nbsp; using</span></span><span style=\"font-size: x-small;\"> (</span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">WaveOut</span></span><span style=\"font-size: x-small;\"> waveOut = </span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">new</span></span><span style=\"font-size: x-small;\"> </span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">WaveOut</span></span><span style=\"font-size: x-small;\">(</span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">WaveCallbackInfo</span></span><span style=\"font-size: x-small;\">.FunctionCallback()))</span><a></a></span><span style=\"font-size: x-small;\"> </span></span></span><span style=\"font-size: x-small;\">\r\n<p>&nbsp; {</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: x-small;\">\r\n<p>&nbsp; waveOut.PlaybackStopped += <span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">new</span></span><span style=\"font-size: x-small;\"> </span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">EventHandler</span></span><span style=\"font-size: x-small;\">(waveOut_PlaybackHasStopped);</span></p>\r\n</span></p>\r\n<p>\r\n<p><span style=\"font-size: x-small;\"> </span></p>\r\n<p>&nbsp; waveOut.DeviceNumber = 0;</p>\r\n<p>&nbsp; waveOut.DesiredLatency = 200;</p>\r\n<p>&nbsp; waveOut.Init(inputStream);</p>\r\n</p>\r\n<p>&nbsp; waveOut.Play();<span style=\"font-size: x-small;\">&nbsp;</span></p>\r\n<p>\r\n<p>\r\n<p><span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>\r\n<p>&nbsp;</p>\r\n</p>\r\n</font></span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">&nbsp; for</span></span><span style=\"font-size: x-small;\"> (; ; )</span></p>\r\n</p>\r\n<p><span style=\"font-size: x-small;\"> </span><span style=\"font-size: x-small;\"><span style=\"font-size: x-small;\">&nbsp;<span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: x-small;\"><font size=\"2\"> </font></span></p>\r\n</p>\r\n</font><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; break</span></span><span style=\"font-size: x-small;\">;</span></span></span></span><span style=\"font-size: x-small;\"><span style=\"font-size: x-small;\">\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;<span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">if</span></span><span style=\"font-size: x-small;\"> (maxPlaySeconds &gt; 0 &amp;&amp; </span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">DateTime</span></span><span style=\"font-size: x-small;\">.Now.CompareTo(quitTime) &gt;= 0)</span></p>\r\n</span></span>\r\n<p>\r\n<p><span style=\"font-size: x-small;\"> </span>\r\n<p>\r\n<p><span style=\"font-size: x-small;\"> </span></p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>&nbsp; }</p>\r\n</font><span style=\"color: #008000; font-size: x-small;\"><span style=\"color: #008000; font-size: x-small;\">// DeadLock at this point.</span></span><span style=\"color: #008000; font-size: x-small;\">&nbsp;</span></span></p>\r\n<p><span style=\"font-size: x-small;\"> </span></p>\r\n</p>\r\n<p>}<span style=\"font-size: x-small;\">&nbsp;</span></p>\r\n<p>\r\n<p>\r\n<p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>\r\n<p>\r\n<p>\r\n<p>&nbsp;</p>\r\n</p>\r\n</p>\r\n</p>\r\n</font></span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">private</span></span><span style=\"font-size: x-small;\"> </span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">void</span></span><span style=\"font-size: x-small;\"> waveOut_PlaybackHasStopped(</span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">object</span></span><span style=\"font-size: x-small;\"> sender, </span><span style=\"color: #2b91af; font-size: x-small;\"><span style=\"color: #2b91af; font-size: x-small;\">EventArgs</span></span><span style=\"font-size: x-small;\"> e)</span></p>\r\n</p>\r\n</p>\r\n<p><span style=\"font-size: x-small;\"> </span></p>\r\n<p>{</p>\r\n<p>&nbsp; stop.Set();</p>\r\n<p>}</p>\r\n<p><span style=\"font-size: x-small;\"><span style=\"font-size: x-small;\">&nbsp;</span></span></p>\r\n<p><span style=\"font-size: x-small;\"><span style=\"font-size: x-small;\">&nbsp;</span></span>-mjl</p>\r\n</p>\r\n</p>\r\n<p>&nbsp;&nbsp;&nbsp; {</p>\r\n</p>\r\n<p><span style=\"font-size: x-small;\">\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">break</span></span><span style=\"font-size: x-small;\">;</span></p>\r\n</span></p>\r\n</p>\r\n</p>\r\n<p>&nbsp; {<span style=\"font-size: x-small;\">&nbsp;</span></p>\r\n<p>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p><span style=\"font-size: x-small;\"><font size=\"2\">\r\n<p>\r\n<p>\r\n<p>\r\n<p>&nbsp;</p>\r\n</p>\r\n</p>\r\n</p>\r\n</font></span><span style=\"color: #0000ff; font-size: x-small;\"><span style=\"color: #0000ff; font-size: x-small;\">&nbsp;&nbsp;&nbsp; if</span></span><span style=\"font-size: x-small;\">(stop.WaitOne(100))</span></p>\r\n</span></p>\r\n</p>",
    "PostedDate": "2011-12-02T03:03:33.017-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "706464",
    "ThreadId": "281581",
    "Html": "<p>I got my solution to work. Changed from the WaveOut class to the WaveOutEvent class, in the WaveOutEvent class the call to the WinMM.Dll waveOutWrite method would throw and exception instead of deadlocking. I ammended the code for WaveOutEvent to catch the MMException being thrown, this catch is in the PlaybackThread method and the handler has the following</p>\r\n<p>catch(MmException ex)</p>\r\n<p>{</p>\r\n<p>buffer = null;</p>\r\n<p>playbackState = PlaybackState.Stopped;</p>\r\n<p>System.Diagnostics.Debug.WrtieLine(ex); // so a debugger can view this is happend and to be able to log using trace listeners.</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>If I did not catch the exception there I would get an unhandled error which is not caught by the application general exception error and my appliation would crash and be unloaded from memory.</p>\r\n<p>&nbsp;</p>\r\n<p>Mark</p>",
    "PostedDate": "2011-12-02T06:59:02.983-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "737425",
    "ThreadId": "281581",
    "Html": "<p>Just wanted to post in case it is useful to other users. &nbsp;Replacing WaveOut with WaveOutEvent in one of our classes fixed a similar deadlock situation we were experiencing when playing a wav file repeatedly in the same run of the application. &nbsp;The first play would be successful then subsequent attempts would lock the application. &nbsp;Quite literally all we had to do was swap the classes and the problem cleared. &nbsp;Thanks Mr. Heath, extraordinarily useful project!</p>",
    "PostedDate": "2012-02-02T14:28:15.043-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "743056",
    "ThreadId": "281581",
    "Html": "<p>glad you got it working in the end. the function callbacks have been nothing but trouble and I may even depracate them in the future</p>",
    "PostedDate": "2012-02-06T05:53:34.997-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "891413",
    "ThreadId": "281581",
    "Html": "<p>Thanks for this post folks.</p>\r\n<p>I ran into a similiar problem this evening.&nbsp; I noticed whenever I unplugged my headphones my waveout device would stop reading the input stream.&nbsp; I put in a timeout that would throw an exception and try to dispose of the waveout device.&nbsp; The dispose method would hang.</p>\r\n<p>I switched to the WaveOutEvent class and everything is happy again.</p>",
    "PostedDate": "2012-07-25T17:56:27.67-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]