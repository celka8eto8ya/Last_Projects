[
  {
    "Id": "1345236",
    "ThreadId": "578402",
    "Html": "Hi,\r<br />\nWe have a simple command line app making use of NAUDIO.wave.\r<br />\nMe and my colleague, have laptops with 64 bit windows 8.1.\r<br />\nThe app executes without issues and plays audio file on his laptop.\r<br />\nHowever, on my laptop it throws  exception: <em>Unhandled Exception: NAudio.MmException: UnspecifiedError calling waveOutOpen</em>\r<br />\nIt doesn't matter where it gets compiled. Same exe runs on one laptop and not on other.\r<br />\nAny ideas?<br />\n",
    "PostedDate": "2015-01-22T15:49:27.87-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1354991",
    "ThreadId": "578402",
    "Html": "That error is usually related to the soundcard driver. What sound device is it using? What WaveFormat are you trying to open with?<br />\n",
    "PostedDate": "2015-02-23T12:04:39.437-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1422838",
    "ThreadId": "578402",
    "Html": "I have a similar error occurring, with details as noted:\r<br />\n<br />\nI have an application using Naudio 1.7.3 (or 1.7.2 with the same result) that runs fine on a laptop running Windows 7, but does not run on Windows 8.1 desktop machine using the Realtek High Definition Audio driver, quitting with the error &quot;NAudio.MmException UnspecifiedError calling waveOutOpen&quot;\r<br />\n<br />\nBoth the laptop and the desktop use Realtek High Definition Audio.  The laptop also has ATI HDMI Audio, and the Desktop also has NVIDIA High Definition Audio, and the Desktop also has Virtual Audio Cable.  But both machines are using the Realtek Drivers with the application, and the other audio devices are not being used.  I still get the same error if I disable the NVIDIA devices and the Virtual Audio Cable Devices.\r<br />\n<br />\nIf I plug into the Windows 8.1 Desktop a 3 - Media USB Audio Device and make that my default device instead of the Realtek device, and if I use that device with the app instead of the Realtek device, then the code runs fine on the Windows 8.1 machine with no error and perfect audio.\r<br />\n<br />\nMy question is, why does the Realtek device not work with my code, and what can be done about it?\r<br />\n<br />\nI have the latest drivers for all devices.\r<br />\n<br />\nThe problematic code is:<br />\n<pre><code>            public static BufferedWaveProvider receiveProvider2;  //this buffers receive audio to prevent clicks/dropouts\n        public static MixingWaveProvider32 mixer;  //this mixes receive audio and sidetone audio into common waveOut stream\n            public static Wave16ToFloatProvider receiveIEEE; //this converts PCM16 receive audio to IEEE floating point needed by mixer\n            public static SineWaveProvider32 sineWaveProvider; //this is CW sidetone generator\n\n        sineWaveProvider = new SineWaveProvider32();\n                    sineWaveProvider.SetWaveFormat(48000, 1); //48kHz mono\n                    sineWaveProvider.Frequency = 1000;\n                    sineWaveProvider.Amplitude = 0.0f;\n                    sidetonevol = (float)VolumeTrackBar.Value / (float)VolumeTrackBar.Maximum;\n\n                    mixer = new MixingWaveProvider32();\n                    receiveProvider2 = new BufferedWaveProvider(new WaveFormat(48000, 16, 1));\n                    receiveProvider2.DiscardOnBufferOverflow = true;\n                    receiveProvider2.BufferDuration = TimeSpan.FromSeconds(0.25);\n                    receiveIEEE = new Wave16ToFloatProvider(receiveProvider2);\n\n                    mixer.AddInputStream(receiveIEEE);\n                    mixer.AddInputStream(sineWaveProvider);\n                    waveOut1 = new WaveOut() { DesiredLatency = 100 };\n                    waveOut1.Init(mixer);\n                    waveOut1.Play();\n</code></pre>\n\nThe error, as noted occurs at the waveOut1.Play() statement.\r<br />\n<br />\nAn alternate, simpler form of the code does run on BOTH machines without error:<br />\n<pre><code>            public static BufferedWaveProvider receiveProvider2;\n        receiveProvider2 = new BufferedWaveProvider(new WaveFormat(48000,16,1));\n                    receiveProvider2.DiscardOnBufferOverflow = true;\n                    receiveProvider2.BufferDuration = TimeSpan.FromSeconds(20);\n                    waveOut1 = new WaveOut(){DesiredLatency = 100};\n                    waveOut1.Init(receiveProvider2);\n                    waveOut1.Play();\n</code></pre>\n\nThanks in advance for your thoughts,\r<br />\n<br />\nRoger\r<br />\nW3SZ\r<br />\n<br />\nThe detailed error message is:\r<br />\n<br />\nNAudio.MmException was unhandled\r<br />\n  _HResult=-2146233088\r<br />\n  _message=UnspecifiedError calling waveOutOpen\r<br />\n  HResult=-2146233088\r<br />\n  IsTransient=false\r<br />\n  Message=UnspecifiedError calling waveOutOpen\r<br />\n  Source=NAudio\r<br />\n  StackTrace:<br />\n<pre><code>   at NAudio.MmException.Try(MmResult result, String function)\n   at NAudio.Wave.WaveOut.Init(IWaveProvider waveProvider)\n   at KISS_Konsole.Form1.OnOffButton_Click(Object sender, EventArgs e) in f:\\HPSDR_KISS_CONSOLE_Server_NEWEST\\Latest - Copy\\Unified\\Form1.cs:line 4696\n   at System.Windows.Forms.Control.OnClick(EventArgs e)\n   at System.Windows.Forms.Button.OnClick(EventArgs e)\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\n   at System.Windows.Forms.Control.WmMouseUp(Message&amp; m, MouseButtons button, Int32 clicks)\n   at System.Windows.Forms.Control.WndProc(Message&amp; m)\n   at System.Windows.Forms.ButtonBase.WndProc(Message&amp; m)\n   at System.Windows.Forms.Button.WndProc(Message&amp; m)\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message&amp; m)\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)\n   at System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)\n   at System.Windows.Forms.UnsafeNativeMethods.DispatchMessageW(MSG&amp; msg)\n   at System.Windows.Forms.Application.ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop(IntPtr dwComponentID, Int32 reason, Int32 pvLoopData)\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Int32 reason, ApplicationContext context)\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Int32 reason, ApplicationContext context)\n   at System.Windows.Forms.Application.Run(Form mainForm)\n   at KISS_Konsole.Program.Main(String[] args) in f:\\HPSDR_KISS_CONSOLE_Server_NEWEST\\Latest - Copy\\Unified\\Program.cs:line 33\n   at System.AppDomain._nExecuteAssembly(RuntimeAssembly assembly, String[] args)\n   at System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)\n   at Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()\n   at System.Threading.ThreadHelper.ThreadStart_Context(Object state)\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)\n   at System.Threading.ThreadHelper.ThreadStart()</code></pre>\n\nInnerException: <br />\n",
    "PostedDate": "2015-05-04T14:55:28.24-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]