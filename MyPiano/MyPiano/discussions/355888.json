[
  {
    "Id": "836814",
    "ThreadId": "355888",
    "Html": "\r\n<p>Hi there,</p>\r\n<p>I'm new to NAudio and have problems while trying to play an a-law encoded network stream. My approach&nbsp;goes like this:</p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">RawSourceWaveStream myALawStream =\r\n<span style=\"color:blue\">new</span> RawSourceWaveStream(networkStream, WaveFormat.CreateALawFormat(8000, 1));<br>\r\n</span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">WaveStream pcmStream = WaveFormatConversionStream.CreatePcmStream(myALawStream);<br>\r\n</span></span><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">WaveOut myWaveOut =\r\n<span style=\"color:blue\">new</span> WaveOut();<br>\r\nmyWaveOut.Init(pcmStream);<br>\r\nmyWaveOut.Play();<br>\r\n</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\"></p>\r\n<p><br>\r\nThe WaveOut should play while data is available and be silent when not. But how is the networkStream to be created? I want to fill it with A-law encoded bytes&nbsp;as they come in from the network. Do I have to implement a new class that derives from WaveStream\r\n or am I missing something.</p>\r\n</span></span>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">Thanks,</span></span></p>\r\n<p><span style=\"font-family:Consolas; font-size:x-small\"><span style=\"font-family:Consolas; font-size:x-small\">Norbert</span></span></p>\r\n",
    "PostedDate": "2012-05-15T10:32:55.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "837082",
    "ThreadId": "355888",
    "Html": "<p>there is an example of playing a-law from the network in the NAudio source-code. Look at the network streaming demo in the NAudioDemo project. The basic solution is to use a BufferedWaveProvider, and insert audio data into the buffer as it become available from the network</p>",
    "PostedDate": "2012-05-16T01:55:42.6-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "837582",
    "ThreadId": "355888",
    "Html": "<p>Hi Mark,</p>\r\n<p>inspired by&nbsp;the network streaming demo (NetworkChatPanel.cs)&nbsp;I&nbsp;simplified&nbsp;the code like this:</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>BufferedWaveProvider myBufferedWaveProvider = <span style=\"color: blue;\">new</span> BufferedWaveProvider(WaveFormat.CreateALawFormat(8000, 1));\r\nWaveOut myWaveOut = <span style=\"color: blue;\">new</span> WaveOut();\r\nmyWaveOut.Init(myBufferedWaveProvider);\r\nmyWaveOut.Play();</pre>\r\n</div>\r\n<p>Now an MMException&nbsp;(WaveBadFormat calling waveOutOpen)&nbsp;is thrown in myWaveOut.Init(). I'm wondering about the WaveBadFormat, because at this time the buffer does contain no samples at all.</p>\r\n<p>Any idea?</p>\r\n<p>Norbert</p>",
    "PostedDate": "2012-05-17T02:03:03.703-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "837864",
    "ThreadId": "355888",
    "Html": "<p>You can't directly play A-law audio. At some point it must be converted to PCM with a WaveFormatConversionStream. You can do that either before you put it into the BufferedWaveProvider, or convert it afterwards.</p>",
    "PostedDate": "2012-05-17T13:28:02.95-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]