[
  {
    "Id": "678552",
    "ThreadId": "274351",
    "Html": "\r\n<p>Hi guys, i'm trying to develop an hardware-independent sound system which can record (using wasapi maybe) audio from soundcard using wasapi loopback (successful) and microphone always from wasapi driver, and mixing them to produce a single wave file. I'm\r\n in trouble with microphone recording using wasapi (using WaveIn it works perfectly).</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">private</span> AudioClient             wasapiSpeakersClient;\r\n        <span style=\"color:blue\">private</span> AudioClient             wasapiMicrophoneClient;<br></pre>\r\n</div>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">        private</span> NAudio.Wave.WaveFormat  micWaveFormat = <span style=\"color:blue\">new</span> NAudio.Wave.WaveFormat(44100, 32, 1);\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>        <span style=\"color:blue\">public</span> MMDevice GetSpeakers()\r\n        {\r\n            MMDeviceEnumerator devices = <span style=\"color:blue\">new</span> MMDeviceEnumerator();\r\n            MMDeviceCollection coll = devices.EnumerateAudioEndPoints(DataFlow.Render, DeviceState.Active);\r\n            <span style=\"color:blue\">if</span> (coll.Count &gt; 0)\r\n            {\r\n                <span style=\"color:blue\">return</span> coll[0];\r\n            }\r\n            <span style=\"color:blue\">else</span>\r\n            {\r\n                <span style=\"color:blue\">return</span> <span style=\"color:blue\">null</span>;\r\n            }\r\n        }\r\n        \r\n        <span style=\"color:blue\">public</span> MMDevice GetMicrophone()\r\n        {\r\n            MMDeviceEnumerator devices = <span style=\"color:blue\">new</span> MMDeviceEnumerator();\r\n            MMDeviceCollection coll = devices.EnumerateAudioEndPoints(DataFlow.Capture, DeviceState.Active);\r\n            <span style=\"color:blue\">if</span> (coll.Count &gt; 0)\r\n            {                \r\n                <span style=\"color:blue\">return</span> coll[0];\r\n            }\r\n            <span style=\"color:blue\">else</span>\r\n            {\r\n                <span style=\"color:blue\">return</span> <span style=\"color:blue\">null</span>;\r\n            }            \r\n        }<br>\r\n</pre>\r\n</div>\r\n<pre>        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> SetupAudioWasapiLoopback()\r\n        {\r\n            <span style=\"color:blue\">long</span> requestedDuration = REFTIMES_PER_MILLISEC * 100;\r\n\r\n            <span style=\"color:blue\">this</span>.wasapiSpeakersClient = GetSpeakers().AudioClient;\r\n            <span style=\"color:blue\">this</span>.wasapiMicrophoneClient = GetMicrophone().AudioClient;\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                <span style=\"color:blue\">this</span>.wasapiSpeakersClient.Initialize(AudioClientShareMode.Shared,\r\n                                AudioClientStreamFlags.Loopback,\r\n                                requestedDuration,\r\n                                0,\r\n                                <span style=\"color:blue\">this</span>.wasapiSpeakersClient.MixFormat,\r\n                                Guid.Empty);\r\n                <span style=\"color:blue\">this</span>.IsSpeakersReady = <span style=\"color:blue\">true</span>;\r\n            }\r\n            <span style=\"color:blue\">catch</span>(Exception e)\r\n            {\r\n                <span style=\"color:blue\">this</span>.IsSpeakersReady = <span style=\"color:blue\">false</span>;\r\n                Utils.LogException(<span style=\"color:#a31515\">&quot;wasapiSpeakersClient.Initialize()&quot;</span>, e);\r\n            }\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                <span style=\"color:blue\">this</span>.wasapiMicrophoneClient.Initialize(AudioClientShareMode.Shared,\r\n                                AudioClientStreamFlags.None,\r\n                                requestedDuration,\r\n                                0,\r\n                                micWaveFormat,<span style=\"color:green\">//wasapiMicrophoneClient this.wasapiSpeakersClient.MixFormat,</span>\r\n                                Guid.Empty);\r\n                <span style=\"color:blue\">this</span>.IsMicReady = <span style=\"color:blue\">true</span>;\r\n            }\r\n            <span style=\"color:blue\">catch</span>(Exception e)\r\n            {<br>               &nbsp;<span style=\"color:blue\">this</span>.IsMicReady = <span style=\"color:blue\">false</span>;\r\n                Utils.LogException(<span style=\"color:#a31515\">&quot;wasapiMicrophoneClient.Initialize()&quot;</span>, e);\r\n            }\r\n\r\n</pre>\r\n<p>&nbsp;</p>\r\n<p>This code throws the exception on wasapiMicrophoneClient.Initialize()... everytime on any soundcard. Why ?</p>\r\n<p>The microphone is successfully retrieved as &quot;Volume Mic&quot; by GetMicrophone(), but it fails when initializing. I'm missing some piece of code ? Please help me!</p>\r\n",
    "PostedDate": "2011-09-30T02:15:39.11-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "685808",
    "ThreadId": "274351",
    "Html": "<p>I imagine it is your recording wave format. It must match exactly what WASAPI wants to give you, which is probably not 32 bit integer recording.</p>",
    "PostedDate": "2011-10-18T07:59:56.63-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "686225",
    "ThreadId": "274351",
    "Html": "<p>Hi Mark, i've resolved some weeks ago.</p>\r\n<p>Under Win7/Vista i get audio speakers with WASAPI and mic with WaveIn.</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>      <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> WaveIn_DataAvailable(<span style=\"color: blue;\">object</span> sender, WaveInEventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">byte</span>[] SpeakersBuffer = <span style=\"color: blue;\">null</span>;\r\n            <span style=\"color: blue;\">int</span> SpeakersOffset = 0;\r\n\r\n            <span style=\"color: blue;\">if</span> (!<span style=\"color: blue;\">this</span>.isSpeaking)\r\n            {\r\n                <span style=\"color: blue;\">this</span>.isSpeaking = VoiceActivityDetection(e.Buffer);\r\n            }\r\n            <span style=\"color: blue;\">else</span>\r\n            {\r\n                <span style=\"color: blue;\">if</span> (<span style=\"color: blue;\">this</span>.isWasapiDriver)\r\n                {\r\n                    SpeakersBuffer = ReadNextSpeakersPacket(<span style=\"color: blue;\">this</span>.wasapiSpeakersClient.AudioCaptureClient, <span style=\"color: blue;\">ref</span> SpeakersOffset);\r\n                    Mix(SpeakersBuffer, SpeakersOffset, e.Buffer, e.BytesRecorded);\r\n                    Thread.Sleep(sleepMilliseconds);\r\n                }\r\n                <span style=\"color: blue;\">else</span>\r\n                {\r\n                    EncodeMicrophoneOnly(e.Buffer);\r\n                }\r\n            }\r\n        }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>All streams (mic and speakers) are 44.1 Khz, 16 bit stereo. So i mix them byte by byte with following code (may be useful for other people):</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">int</span> BufferSize = 35280;\r\n            \r\n            <span style=\"color: green;\">//BufferSize = (SpeakersBufferOffset &gt; MicrophoneBufferOffset) ? SpeakersBufferOffset : MicrophoneBufferOffset;</span>\r\n            <span style=\"color: blue;\">byte</span>[] spkBufferMono = <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">byte</span>[BufferSize / 2];\r\n            <span style=\"color: blue;\">byte</span>[] micBufferMono = <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">byte</span>[BufferSize / 2];\r\n            <span style=\"color: blue;\">byte</span>[] sample32bit = <span style=\"color: blue;\">new</span> <span style=\"color: blue;\">byte</span>[4];\r\n\r\n            <span style=\"color: green;\">// Convert to mono</span>\r\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0, j = 0; i &lt; BufferSize; i += 8, j += 4)\r\n            {\r\n                Array.Copy(SpeakersBuffer, i, spkBufferMono, j, 4);\r\n                Array.Copy(MicrophoneBuffer, i, micBufferMono, j, 4);\r\n            }\r\n\r\n            <span style=\"color: green;\">//Downgrade to 16 bit            </span>\r\n            <span style=\"color: blue;\">for</span> (<span style=\"color: blue;\">int</span> i = 0, j = 0; i &lt; BufferSize / 2; i += 4, j+=2)\r\n            {                \r\n                Array.Copy(spkBufferMono, i, sample32bit, 0, 4);\r\n                <span style=\"color: blue;\">float</span> f_Speakers = BitConverter.ToSingle(sample32bit, 0);\r\n\r\n                Array.Copy(micBufferMono, i, sample32bit, 0, 4);\r\n                <span style=\"color: blue;\">float</span> f_Mic = BitConverter.ToSingle(sample32bit, 0);\r\n\r\n                Equalize(<span style=\"color: blue;\">ref</span> f_Speakers, <span style=\"color: blue;\">ref</span> f_Mic);\r\n\r\n                <span style=\"color: blue;\">short</span> short_Speakers;\r\n                <span style=\"color: blue;\">short</span> short_Mic;\r\n                SampleConverter.Convert(f_Speakers, <span style=\"color: blue;\">out</span> short_Speakers);\r\n                SampleConverter.Convert(f_Mic, <span style=\"color: blue;\">out</span> short_Mic);\r\n\r\n                <span style=\"color: green;\">// Mixing</span>\r\n                <span style=\"color: blue;\">short</span> snd1 = Convert.ToInt16((~short_Speakers | 1));\r\n                <span style=\"color: blue;\">short</span> snd2 = Convert.ToInt16((~short_Mic | 1));\r\n                <span style=\"color: blue;\">short</span> o = 0;\r\n\r\n                <span style=\"color: green;\">// ensure the value is within range of signed short</span>\r\n                <span style=\"color: blue;\">if</span> ((snd1 + snd2) &gt;= -32768 &amp;&amp; (snd1 + snd2) &lt;= 32767)\r\n                {\r\n                    o = Convert.ToInt16(snd1 + snd2);\r\n                }\r\n\r\n                <span style=\"color: blue;\">byte</span>[] b = SignedToComplement(o);\r\n\r\n                <span style=\"color: blue;\">try</span>\r\n                {\r\n                    <span style=\"color: blue;\">this</span>.encoderMP3.Write(b);\r\n                }\r\n                <span style=\"color: blue;\">catch</span>\r\n                {\r\n                }\r\n            }\r\n</pre>\r\n</div>\r\n</p>\r\n<p>But under Windows XP i don't understand how to get audio speakers. Can you tell me how to get speakers audio without WASAPI ?</p>",
    "PostedDate": "2011-10-19T01:41:06.857-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "686226",
    "ThreadId": "274351",
    "Html": "<p>Unfortunately, it's not possible on Windows XP unless the soundcard driver explicitly supports a \"What you hear\" mode</p>\r\n<p>Mark</p>",
    "PostedDate": "2011-10-19T01:42:54.14-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "686328",
    "ThreadId": "274351",
    "Html": "<p><span id=\"result_box\" lang=\"en\"><span class=\"hps\">Ok, I</span> <span class=\"hps\">figured</span> <span class=\"hps\">this,</span> <span class=\"hps\">but I was expecting</span> <span class=\"hps\">a</span> <span class=\"hps\">confirmation of</span> <span class=\"hps\">your.</span></span></p>\r\n<p><span lang=\"en\"><span class=\"hps\">Thank you again.<br /></span></span></p>",
    "PostedDate": "2011-10-19T06:13:49.143-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]