[
  {
    "Id": "631170",
    "ThreadId": "262352",
    "Html": "\r\n<p>I'm having some major problems trying to get the file duration and current time.&nbsp; The problem comes when trying to create the reader in order to obtain the data.&nbsp; Here is how I create the readers.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">private</span> IWavePlayer waveOutDevice;\r\n<span style=\"color:blue\">private</span> WaveStream mainOutputStream;\r\n<span style=\"color:blue\">private</span> WaveFileReader mainWAVReader;\r\n<span style=\"color:blue\">private</span> Mp3FileReader mainMP3Reader;\r\nwaveOutDevice = <span style=\"color:blue\">new</span> WaveOut();\r\nmainOutputStream= CreateInputStream(fileName);\r\n<span style=\"color:blue\">if</span> (FileType == SoundFileType.WAV)\r\n{\r\n    <span style=\"color:blue\">try</span>\r\n    {\r\n        mainWAVReader = <span style=\"color:blue\">new</span> WaveFileReader(mainOutputStream);\r\n    }\r\n    <span style=\"color:blue\">catch</span> (Exception ex)\r\n    {\r\n        ErrorLoadingSound(ex.Message); <span style=\"color:green\">// User-defined event</span>\r\n        <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>;\r\n    }\r\n}\r\n<span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (FileType == SoundFileType.MP3)\r\n{\r\n    <span style=\"color:blue\">try</span>\r\n    {\r\n        mainMP3Reader = <span style=\"color:blue\">new</span> Mp3FileReader(mainOutputStream);\r\n    }\r\n    <span style=\"color:blue\">catch</span> (Exception ex)\r\n    {\r\n        ErrorLoadingSound(ex.Message);  <span style=\"color:green\">// User-defined event</span>\r\n        <span style=\"color:blue\">return</span> <span style=\"color:blue\">false</span>;\r\n     }\r\n}\r\n</pre>\r\n</div>\r\n</div>\r\n<div style=\"color:black; background-color:white\">The wave and mp3 files I'm using for this test play FINE if I comment out the creation of the WaveFileReader and the Mp3FileReader.&nbsp; Here is what happens on the statement to create the respective file readers.</div>\r\n<p>wav file: When it tries to create a new WaveFileReader, it throws an exception: &quot;<em>Not a WAVE file - no RIFF header</em>.&quot;</p>\r\n<p>mp3 file: When it tries to create a new Mp3FileReader, it hangs for a long time and I get a message in the Output window: &quot;<em>A first chance exception of type 'System.FormatException' occurred in NAudio.dll</em>&quot;.&nbsp; Eventually, if I wait long enough,\r\n I get a popup box titled &quot;<em>ContextSwitchDeadlock was detected</em>&quot; with the following message:</p>\r\n<p><em>&quot;The CLR has been unable to transition from COM context 0x2b8c10 to COM context 0x2b8d80 for 60 seconds. The thread that owns the destination context/apartment is most likely either doing a non pumping wait or processing a very long running operation\r\n without pumping Windows messages. This situation generally has a negative performance impact and may even lead to the application becoming non responsive or memory usage accumulating continually over time. To avoid this problem, all single threaded apartment\r\n (STA) threads should use pumping wait primitives (such as CoWaitForMultipleHandles) and routinely pump messages during long running operations.&quot;</em></p>\r\n<p>I'm sorry, but if the file plays fine using NAudio, shouldn't I also be able to get the duration and current time?&nbsp; Or am I doing something wrong, here?</p>\r\n<p>It never actually GETS to the functions to get the current time and the duration, because the errors occur when trying to create the reader, but here is the code I have that should get me this data.</p>\r\n<p><span style=\"color:blue\">public</span> TimeSpan GetCurrentTime()<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; TimeSpan duration = <span style=\"color:blue\">new</span> TimeSpan(0);<br>\r\n&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">if</span> (IsLoaded() &amp;&amp; IsPlaying())<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">if</span> (FileType == SoundFileType.WAV &amp;&amp; mainWAVReader !=\r\n<span style=\"color:blue\">null</span>)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; duration = mainWAVReader.CurrentTime;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">else</span> <span style=\"color:blue\">\r\nif</span> (FileType == SoundFileType.MP3 &amp;&amp; mainMP3Reader != <span style=\"color:blue\">\r\nnull</span>)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; duration = mainMP3Reader.CurrentTime;<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">return</span> duration;<br>\r\n}<br>\r\n<span style=\"color:blue\">public</span> TimeSpan GetDuration()<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; TimeSpan duration= <span style=\"color:blue\">new</span> TimeSpan(0);<br>\r\n&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">if</span> (IsLoaded())<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">if</span> (FileType == SoundFileType.WAV &amp;&amp; mainWAVReader !=\r\n<span style=\"color:blue\">null</span>)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; duration = mainWAVReader.TotalTime;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">else</span> <span style=\"color:blue\">\r\nif</span> (FileType == SoundFileType.WAV &amp;&amp; mainMP3Reader != <span style=\"color:blue\">\r\nnull</span>)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; duration = mainMP3Reader.TotalTime;<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; <span style=\"color:blue\">return</span> duration;<br>\r\n}</p>\r\n<p>So, am I doing something wrong, here?&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-06-22T08:11:21.333-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "631469",
    "ThreadId": "262352",
    "Html": "<p>what does CreateInputStream do?</p>",
    "PostedDate": "2011-06-22T14:46:53.613-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "631504",
    "ThreadId": "262352",
    "Html": "<p>That was pulled from one of the tutorials on your site, and it works quite well to play the wav and mp3 files I've been using so far. &nbsp;The code is as follows:</p>\n<p>&nbsp;</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">private</span> WaveStream CreateInputStream(<span style=\"color: blue;\">string</span> fileName)\n{\n    WaveChannel32 inputStream = <span style=\"color: blue;\">null</span>;\n    <span style=\"color: blue;\">try</span>\n    {\n        FileType = SoundFileType.None;\n<span style=\"color: blue;\">        </span><span style=\"color: blue;\">if</span> (fileName.EndsWith(<span style=\"color: #a31515;\">\".wav\"</span>))\n        {\n            FileType = SoundFileType.WAV;\n            WaveStream readerStream = <span style=\"color: blue;\">new</span> WaveFileReader(fileName);\n            <span style=\"color: blue;\">if</span> (readerStream.WaveFormat.Encoding != WaveFormatEncoding.Pcm)\n            {\n                readerStream = WaveFormatConversionStream.CreatePcmStream(readerStream);\n                readerStream = <span style=\"color: blue;\">new</span> BlockAlignReductionStream(readerStream);\n            }\n\n<span style=\"color: blue;\">            </span><span style=\"color: blue;\">if</span> (readerStream.WaveFormat.BitsPerSample == 16)\n            {\n<span style=\"color: blue;\">                </span><span style=\"color: blue;\">var</span> format = <span style=\"color: blue;\">new</span> WaveFormat(readerStream.WaveFormat.SampleRate, 16, readerStream.WaveFormat.Channels);\n                readerStream = <span style=\"color: blue;\">new</span> WaveFormatConversionStream(format, readerStream);\n            }\n            inputStream = <span style=\"color: blue;\">new</span> WaveChannel32(readerStream);\n        }\n<span style=\"color: blue;\">        </span><span style=\"color: blue;\">else</span> <span style=\"color: blue;\">if</span> (fileName.EndsWith(<span style=\"color: #a31515;\">\".mp3\"</span>))\n        {\n            FileType = SoundFileType.MP3;\n            WaveStream mp3Reader = <span style=\"color: blue;\">new</span> Mp3FileReader(fileName);\n            inputStream = <span style=\"color: blue;\">new</span> WaveChannel32(mp3Reader);\n        }\n<span style=\"color: blue;\">        </span><span style=\"color: blue;\">else</span>\n        {\n<span style=\"color: blue;\">            </span><span style=\"color: blue;\">throw</span> <span style=\"color: blue;\">new</span> InvalidOperationException(<span style=\"color: #a31515;\">\"Unsupported extension\"</span>);\n        }\n    }\n<span style=\"color: blue;\">    </span><span style=\"color: blue;\">catch</span> (Exception ex)\n    {\n<span style=\"color: green;\">        </span><span style=\"color: green;\">//MessageBox.Show(String.Format(\"{0}\", driverCreateException.Message));</span>\n        LastErrorMessage = ex.Message;  // Class variable that holds the last error generated by the codee\n<span style=\"color: green;\">        </span><span style=\"color: green;\">//return;</span>\n    }\n\n<span style=\"color: blue;\">    </span><span style=\"color: blue;\">return</span> inputStream;\n}\n<br /></pre>\n<pre>I'm open to any suggestions on how to fix this...\n\n</pre>\n</div>",
    "PostedDate": "2011-06-22T15:49:39.253-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "631644",
    "ThreadId": "262352",
    "Html": "<p>Use mainOutputStream.TotalTime and mainOutputStream.CurrentTime instead. Don't wrap it in another Mp3FileReader or WaveFileReader.</p>\r\n<p>Mark</p>",
    "PostedDate": "2011-06-22T23:45:24.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "632038",
    "ThreadId": "262352",
    "Html": "<p>Yup, that worked fine.&nbsp; Thanks, Mark.</p>\r\n<p>So far, the NAudio library is doing everything I wanted it to.&nbsp; I'm sure it has limitations that I'll need to work around, but I haven't any significant ones, yet.</p>",
    "PostedDate": "2011-06-23T11:48:18.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]