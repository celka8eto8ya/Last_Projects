[
  {
    "Id": "1456894",
    "ThreadId": "649177",
    "Html": "Hi friends,\r<br />\n<br />\n<br />\nI could not find a proper forum which I why I am asking here. I use the library in WPF without issues, but after porting to Universal Apps I get stutters in the audio. I've been fiddling with some of the parameters but I don't really know much about how this works. \r<br />\n<br />\nHope you can help. Thanks a lot<br />\n<pre><code>    public void Play(string uri)\n        {\n            HttpWebRequest request = (HttpWebRequest)WebRequest.Create(uri);\n            request.BeginGetResponse(new AsyncCallback(GetResponseCallback), request);\n\n        }\n        private void GetResponseCallback(IAsyncResult asynchronousResult)\n        {\n            HttpWebRequest request = (HttpWebRequest)asynchronousResult.AsyncState;\n            HttpWebResponse response = (HttpWebResponse)request.EndGetResponse(asynchronousResult);\n            Stream responseStream = response.GetResponseStream();\n            StreamReader streamRead = new StreamReader(responseStream);\n\n            var waveFormat = new WaveFormat(8000, 16, 1);\n            var bufferedWaveProvider = new BufferedWaveProvider(waveFormat);\n            bufferedWaveProvider.BufferDuration = TimeSpan.FromMilliseconds(200);\n\n            var waveOut = new WasapiOutRT(AudioClientShareMode.Shared, 100);\n            waveOut.Init(() =&gt; bufferedWaveProvider);\n            waveOut.Play();\n\n            byte[] buffer = new byte[800];\n            while (true)\n            {\n                var sizeRead = streamRead.BaseStream.Read(buffer, 0, buffer.Length);\n                if (sizeRead &gt; 0 &amp;&amp; bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes &gt; sizeRead)\n                {\n                    bufferedWaveProvider.AddSamples(buffer, 0, sizeRead);\n                }\n            }\n        }</code></pre>\n\n",
    "PostedDate": "2015-12-22T13:09:01.05-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1456895",
    "ThreadId": "649177",
    "Html": "Just for comparison, here's the code I use in WPF.<br />\n<pre><code>var webRequest = WebRequest.Create(uri);\n\n                using (var webResponse = (HttpWebResponse)webRequest.GetResponse())\n                {\n                    using (var responseStream = new StreamReader(webResponse.GetResponseStream()))\n                    {\n                        var waveFormat = new WaveFormat(8000, 16, 1);\n\n                        var bufferedWaveProvider = new BufferedWaveProvider(waveFormat);\n                        bufferedWaveProvider.BufferDuration = TimeSpan.FromMilliseconds(200);\n\n                        var waveOut = new WaveOutEvent();\n                        waveOut.DesiredLatency = 100;\n                        waveOut.Init(bufferedWaveProvider);\n                        waveOut.Play();\n\n                        byte[] buffer = new byte[800];\n                        while (true)\n                        {\n                            if (bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes &gt; buffer.Length)\n                            {\n                                if (responseStream.Peek() &gt; -1 &amp;&amp; responseStream.BaseStream.Read(buffer, 0, buffer.Length) &gt; 0)\n                                {\n                                    bufferedWaveProvider.AddSamples(buffer, 0, buffer.Length);\n                                    await Task.Delay(1, cancellationToken.Token);\n                                }\n                            }\n\n                        }\n                    }\n                }</code></pre>\n\n",
    "PostedDate": "2015-12-22T13:09:47.693-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1456906",
    "ThreadId": "649177",
    "Html": "Solved!<br />\n<br />\n<br />\nAfter much fiddling I decided to try to play a wave file (16bit 8000hz PCM stream) from disk. The file played correctly but at twice the speed, then I changed the waveFormat to 4000hz on the WaveOut and it worked! <br />\n<br />\nHere's the code. <br />\n<pre><code>            HttpWebRequest request = (HttpWebRequest)asynchronousResult.AsyncState;\n            HttpWebResponse response = (HttpWebResponse)request.EndGetResponse(asynchronousResult);\n            Stream responseStream = response.GetResponseStream();\n            StreamReader streamRead = new StreamReader(responseStream);\n\n            var waveFormat = new WaveFormat(4000, 16, 1);\n            var bufferedWaveProvider = new BufferedWaveProvider(waveFormat);\n            bufferedWaveProvider.BufferDuration = TimeSpan.FromMilliseconds(1000);\n\n            var waveOut = new WasapiOutRT(AudioClientShareMode.Shared, 100);\n            waveOut.Init(() =&gt; bufferedWaveProvider);\n            waveOut.Play();\n\n            byte[] buffer = new byte[800];\n            while (true)\n            {\n                if (bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes &gt; buffer.Length)\n                {\n                    var bufferSize = streamRead.BaseStream.Read(buffer, 0, buffer.Length);\n                    if (bufferSize &gt; 0 &amp;&amp; bufferedWaveProvider.BufferLength - bufferedWaveProvider.BufferedBytes &gt; bufferSize)\n                        bufferedWaveProvider.AddSamples(buffer, 0, bufferSize);\n                }\n            }</code></pre>\n\nPlease note that this provided correct audio for a 8000hz audio stream from disk and also a 8000hz network audio stream. If you have suggestions on improving this code, by all means. Thanks!<br />\n",
    "PostedDate": "2015-12-22T15:29:31.523-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": "2015-12-22T15:29:34.68-08:00"
  },
  {
    "Id": "1456967",
    "ThreadId": "649177",
    "Html": "More likely the correct WaveFormat should have been 8000,8,1 or maybe 8000,16,2, but glad to hear you got something working<br />\n",
    "PostedDate": "2015-12-23T07:25:02.09-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1456999",
    "ThreadId": "649177",
    "Html": "hi Mark,\r<br />\n<br />\n<br />\nI have just tried both and they don't work. I've also tried them in WPF with similar results. It strikes me as odd that the code is nearly identical now with regard to NAudio and I could only get it to work using 4kHz. \r<br />\n<br />\nSince I am a simple library consumer I don't really care though. Would you like me to prepare a case using a RAW wav and two example projects? One for WPF and one for Universal Apps? <br />\n",
    "PostedDate": "2015-12-23T10:52:28.623-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]