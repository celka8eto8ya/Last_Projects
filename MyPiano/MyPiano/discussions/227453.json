[
  {
    "Id": "494410",
    "ThreadId": "227453",
    "Html": "<p>I can't convert GSM to PCM format properly.</p>\r\n<p>The output data contains only noise and process has finish without any exception.&nbsp; The same code used for ALAW-&gt;PCM convertion works fine. From the other side, I've implemented ACM conversion from GSM-&gt;PCM using native c++ (with the same PCM/GSM parameters) and all there work great.</p>\r\n<p>As you can see bellow I process raw audio data:</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black;background-color:white\">\r\n<pre>FileStream inFileStream = <span style=\"color:blue\">new</span> FileStream(<span style=\"color:#a31515\">@&quot;D:\\gsm.raw&quot;</span>, FileMode.Open);\r\n<span style=\"color:blue\">var</span> inFormat = <span style=\"color:blue\">new</span> WaveFormatGsm610(8000, 1);\r\n\r\nXWaveStream gsmStr = <span style=\"color:blue\">new</span> XWaveStream(inFormat, inFileStream);\r\n\r\n\r\n<span style=\"color:blue\">var</span> transFormat = AcmStream.SuggestPcmFormat(gsmStr.WaveFormat); <span style=\"color:green\">//PCM, 8000kHz 16bit, mono</span>\r\n\r\n\r\n<span style=\"color:blue\">var</span> outStream = <span style=\"color:blue\">new</span> WaveFormatConversionStream(transFormat, gsmStr);\r\n\r\n<span style=\"color:blue\">var</span> buff = <span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[outStream.Length];\r\noutStream.Read(buff, 0, buff.Length);\r\n\r\n<span style=\"color:blue\">var</span> outFileStream = <span style=\"color:blue\">new</span> FileStream(<span style=\"color:#a31515\">@&quot;d:\\out.raw&quot;</span>, FileMode.Create);\r\noutFileStream.Write(buff, 0, buff.Length);\r\noutFileStream.Dispose();\r\ninFileStream.Dispose();\r\n\r\n<br>and helper classes:<br><br>[StructLayout(LayoutKind.Sequential, Pack = 2)]\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> WaveFormatGsm610 : WaveFormat\r\n    {\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> samplerate</span>\r\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">short</span> samplesPerBlock;\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">short</span> SamplesPerBlock\r\n        {\r\n            <span style=\"color:blue\">get</span>\r\n            {\r\n                <span style=\"color:blue\">return</span> samplesPerBlock;\r\n            }\r\n        }\r\n\r\n       \r\n        WaveFormatGsm610()\r\n            : <span style=\"color:blue\">this</span>(8000, 1)\r\n        {\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> WaveFormatGsm610(<span style=\"color:blue\">int</span> sampleRate, <span style=\"color:blue\">int</span> channels) : <span style=\"color:blue\">base</span>()\r\n        {\r\n            <span style=\"color:blue\">this</span>.waveFormatTag = WaveFormatEncoding.Gsm610;  \r\n            <span style=\"color:blue\">this</span>.sampleRate = sampleRate;\r\n            <span style=\"color:blue\">this</span>.channels = (<span style=\"color:blue\">short</span>)channels;\r\n            <span style=\"color:blue\">this</span>.bitsPerSample = (<span style=\"color:blue\">short</span>)0;\r\n            <span style=\"color:blue\">this</span>.extraSize = 2;\r\n            <span style=\"color:blue\">this</span>.blockAlign = 65;\r\n            <span style=\"color:blue\">this</span>.averageBytesPerSecond = 1625; \r\n            <span style=\"color:blue\">this</span>.samplesPerBlock = 320; \r\n        }\r\n    }<br><br><br><pre><span style=\"color:blue\">&nbsp;&nbsp;&nbsp; class</span> XWaveStream : WaveStream\r\n    {\r\n        <span style=\"color:blue\">private</span> WaveFormat format;\r\n        Stream str;\r\n        <span style=\"color:blue\">public</span> XWaveStream(WaveFormat fmt, Stream str)\r\n        {\r\n            format = fmt;\r\n            <span style=\"color:blue\">this</span>.str = str;\r\n        }\r\n\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> WaveFormat WaveFormat\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> format; }\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">long</span> Length\r\n        {\r\n            <span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> str.Length; }\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">long</span> Position\r\n        {\r\n            <span style=\"color:blue\">get</span>\r\n            {\r\n                <span style=\"color:blue\">return</span> str.Position;\r\n            }\r\n            <span style=\"color:blue\">set</span>\r\n            {\r\n                str.Position = value;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">int</span> Read(<span style=\"color:blue\">byte</span>[] buffer, <span style=\"color:blue\">int</span> offset, <span style=\"color:blue\">int</span> count)\r\n        {\r\n            <span style=\"color:blue\">return</span> str.Read(buffer, offset, count);\r\n        }\r\n    }\r\n</pre>\r\n<br><br></pre>\r\n</div>\r\n<p>Any ideas?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-16T05:16:51.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "495835",
    "ThreadId": "227453",
    "Html": "<p>I tried to decode ETSI GSM 06.10 stream which is not compatibile with Microsof GSM encoding :)</p>",
    "PostedDate": "2010-09-20T00:54:54.477-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]