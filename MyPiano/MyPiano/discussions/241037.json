[
  {
    "Id": "546232",
    "ThreadId": "241037",
    "Html": "\r\n<p>Hi,</p>\r\n<p>i want to use an acm driver to decode audio to pcm.</p>\r\n<p>I have found the WaveFormatConversionStream, which can be used for this but is there any</p>\r\n<p>possebility to use directly a byte buffer as source and as target for decoding?</p>\r\n<p>Thanks</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-09T08:11:10.81-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "546632",
    "ThreadId": "241037",
    "Html": "\r\n<p>make your own class inheriting from WaveStream. In its Read method, just return the next bytes from your byte array.</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2011-01-10T05:39:43.657-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "546651",
    "ThreadId": "241037",
    "Html": "\r\n<p>Thanks Mark,</p>\r\n<p>&nbsp;</p>\r\n<p>i already solved it but i want to know another thing:</p>\r\n<p>&nbsp;</p>\r\n<p>I try to decompress truespeech to pcm but it does not work.</p>\r\n<p>Here ist my code:</p>\r\n<p>&nbsp;</p>\r\n<p>//Helper Class for the compressed stream</p>\r\n<p>private class ACMCodecCompressedStream : WaveStream<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; private byte[] cAudioData;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; private WaveFormat SourceWaveFormat;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; public override WaveFormat WaveFormat<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; get<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; return SourceWaveFormat;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; public override long Length<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; get<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; return cAudioData.Length;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; public override long Position { get; set; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; public ACMCodecCompressedStream(MyWaveFormat SourceWaveFormat, byte[] cSourceData)<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; cAudioData = cSourceData;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; this.SourceWaveFormat = SourceWaveFormat;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; public override int Read(byte[] buffer, int offset, int count)<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; Array.Copy(cAudioData, 0, buffer, offset, cAudioData.Length);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return cAudioData.Length;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n<p>// Helper class for the Truespeech-WaveFormat structure (it has 32 bytes extra)</p>\r\n<p>// the Extra bytes are 0x00f00001</p>\r\n<p>&nbsp;&nbsp;&nbsp; [StructLayout(LayoutKind.Sequential)]<br>\r\n&nbsp;&nbsp;&nbsp; public class MyWaveFormat : WaveFormat<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp; protected byte[] cExtraData;<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public MyWaveFormat(WaveFormatEncoding WaveFormatTag, short BitsPerSample, short Channels, int AverageBytesPerSecond, short BlockAlign, int SampleRate, short ExtraSize, byte[] cExtraData)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.extraSize = ExtraSize;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.averageBytesPerSecond = AverageBytesPerSecond;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.bitsPerSample = BitsPerSample;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.blockAlign = BlockAlign;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.channels = Channels;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.sampleRate = SampleRate;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; base.waveFormatTag = WaveFormatTag;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; if (ExtraSize &gt; 0)<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; this.cExtraData = new byte[ExtraSize];<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; Array.Copy(cExtraData, this.cExtraData, cExtraData.Length);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }</p>\r\n<p>// Decompression code...</p>\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; ACMCodecCompressedStream TrueSpeechStream = null;<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; WaveFormatConversionStream OutputStream = null;</p>\r\n<p>&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; TrueSpeechStream = new ACMCodecCompressedStream(new MyWaveFormat(WaveFormatEncoding.DspGroupTruespeech, 8000, 1, 1067, 32, 1, 32, cExtraData), cCompressedAudioBuffer);<br>\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp; OutputStream = new WaveFormatConversionStream(new WaveFormat(8000,16,1),TrueSpeechStream);</p>\r\n<p>When this line is called &quot;OutputStream = new WaveFormatConversionStream(new WaveFormat(8000,16,1),TrueSpeechStream);&quot;</p>\r\n<p>i get this Exception: AcmNotPossible calling acmStreamOpen</p>\r\n<p>&nbsp;</p>\r\n<p>The Truespeech codec is installed.</p>\r\n<p>I don't know why it does not work.</p>\r\n<p>Can you give me a hint?</p>\r\n<p>&nbsp;</p>\r\n<p>Tobias</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2011-01-10T05:55:18.297-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "546744",
    "ThreadId": "241037",
    "Html": "\r\n<p>AcmNotPossible means that the ACM codec reports that it can't convert the incoming WaveFormat to outgoing. You can use the NAudio demo app to query all the supported input formats of each codec. Then you will need to byte by byte compare those with the ones\r\n you have made to work out the difference.</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2011-01-10T07:38:23.36-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]