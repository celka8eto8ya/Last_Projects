[
  {
    "Id": "1373610",
    "ThreadId": "593303",
    "Html": "I'm trying to take the sound from one AsioOut Input and put it to an output. My first try was to save it in a wave file, that's no problem.\r<br />\nWhen i pass the bytes from the input into the BufferedWaveProvider which is passed to the AsioOut output object at initialisation i get a very high distortion on my audio signal. \r<br />\nPoorly i can't figure out whats wrong while playing the signal, because the signal in the recorded wave file is ok.\r<br />\n<br />\nThat's my initialisation of all objects<br />\n<pre><code>int nSource = int.Parse(txtSourceChannel.Text);\n            int nDest = int.Parse(txtDestChannel.Text);\n\n            buffer = new BufferedWaveProvider(wFormat);\n            buffer.DiscardOnBufferOverflow = true;\n\n            input = new AsioOut(cmbAsioDrivers.SelectedItem.ToString());\n            input.InputChannelOffset = nSource;\n            input.InitRecordAndPlayback(buffer, 1, 44100);\n            input.AudioAvailable += asioOut_AudioAvailable;\n            input.PlaybackStopped += input_PlaybackStopped;\n            \n            output = new AsioOut(cmbAsioDrivers.SelectedItem.ToString());\n            output.ChannelOffset = 1;\n            output.Init(buffer);\n\n            this.wavWriter = new WaveFileWriter(@&quot;D:\\test.wav&quot;, new WaveFormat(44100, 24, 1));\n\n            input.Play();\n            output.Play();</code></pre>\n\nThats the data available event handler of the asioOut input object<br />\n<pre><code>private readonly byte[] value24 = new byte[3];\n        void asioOut_AudioAvailable(object sender, AsioAudioAvailableEventArgs e)\n        {\n            float[] samples = new float[e.SamplesPerBuffer];\n            \n            byte[] buf = new byte[e.SamplesPerBuffer];\n\n            for (int i = 0; i &lt; e.InputBuffers.Length; i++)\n            {\n                Marshal.Copy(e.InputBuffers[i], buf, 0, e.SamplesPerBuffer);\n                Marshal.Copy(buf, 0, e.OutputBuffers[i], e.SamplesPerBuffer);\n            }\n\n            int count = e.GetAsInterleavedSamples(samples);\n\n            //wavWriter.WriteSamples(samples, 0, samples.Length);       //works, result is ok\n\n            for (int s = 0; s &lt; count; s++)\n            {\n                byte[] bytes = BitConverter.GetBytes((Int32)(Int32.MaxValue * samples[s]));\n                //Array.Copy(buf, s * 4, bytes, 0, 4);\n                buffer.AddSamples(bytes, 0, 4);\n\n                value24[0] = bytes[1];\n                value24[1] = bytes[2];\n                value24[2] = bytes[3];\n                wavWriter.Write(value24, 0, 3);\n            }\n\n            //buffer.AddSamples(buf, 0, buf.Length);\n\n            e.WrittenToOutputBuffers = true; \n        }</code></pre>\n\nWhen i try to copy the input buffer to the output buffer of the same asioOut input object i can hear the signal very low and there is some distortion on the signal to (like a flanger effect).\r<br />\n<br />\nP.S. when i try to play a mp3 or wave file with the AudioFileReader and pass the reader ti the asioOut output object instead of BufferedWaveProvider there are no problems while playing.<br />\n",
    "PostedDate": "2015-03-22T08:53:30.423-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]