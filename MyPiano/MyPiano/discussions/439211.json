[
  {
    "Id": "1025965",
    "ThreadId": "439211",
    "Html": "Hey,<br />\n<br />\nA while ago I've posted on your blog (Sound Code), but I'm having a rather similar issue after having read one of your FFT articles.<br />\n<br />\nBasically, what I need to do is calculate the frequency of the microphone input. I'm using IWaveProvider for this and its implemented Read(). The buffer always has a size of 8820 elements and something seems to be going wrong with the conversion from byte array to float array as well (the .FloatBuffer property part).<br />\n<br />\nHere are some of the important bits...<br />\n<br />\nThis is where I start my recording:<br />\n<pre><code>private void InitializeSoundRecording()\n        {\n            WaveIn waveIn = new WaveIn();\n            waveIn.DeviceNumber = 0;   \n            waveIn.DataAvailable += (s, e) =&gt; this.waveIn_DataAvailable(s, e); \n            waveIn.RecordingStopped += (s, e) =&gt; this.waveIn_RecordingStopped(s, e);\n            waveIn.WaveFormat = new WaveFormat(44100, 1);\n            waveIn.StartRecording();\n        }</code></pre>\n\nWhen the DataAvailable event handler is called, the following is executed:<br />\n<pre><code>private void waveIn_DataAvailable(object sender, WaveInEventArgs e)\n        {\n            WaveBuffer wb = new WaveBuffer(e.Buffer.Length);\n\n            IWaveProvider iWaveProvider = new PitchDetector(new WaveInProvider(sender as WaveIn), new WaveBuffer(e.Buffer));\n            iWaveProvider.Read(wb, 0, e.Buffer.Length);\n\n            PitchDetector pd = iWaveProvider as PitchDetector;\n            \n            this.ShowPitch(pd.Pitch);\n        }</code></pre>\n\nAnd lastly, this is the &quot;actual&quot; important bit:<br />\n<pre><code>private const int FLOAT_BUFFER_SIZE = 8820;\n        private IWaveProvider source;\n        private WaveBuffer waveBuffer;\n        private int sampleRate;\n        private float[] fftBuffer;\n        private float[] prevBuffer;\n        public float Pitch { get; private set; }\n\n        public WaveFormat WaveFormat { get { return this.source.WaveFormat; } }\n\n        internal PitchDetector(IWaveProvider waveProvider, WaveBuffer waveBuffer = null)\n        {\n            this.source = waveProvider;\n            this.sampleRate = waveProvider.WaveFormat.SampleRate;\n            this.waveBuffer = waveBuffer;\n        }\n\n        /// &lt;summary&gt;\n        /// UNSAFE METHOD! Do not edit unless you know what to do\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;input&quot;&gt;&lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        private unsafe float[] ByteArrayToFloatArray(byte[] input)\n        {\n            float[] fb = new float[FLOAT_BUFFER_SIZE];\n            unsafe\n            {\n                fixed (byte* ptrBuffer = input)\n                {\n                    float* ptrFloatBuffer = (float*)ptrBuffer;\n                    for (int i = 0; i &lt; FLOAT_BUFFER_SIZE; i++)\n                    {\n                        fb[i] = *ptrFloatBuffer;\n                        ptrFloatBuffer++;\n                    }\n                }\n            }\n            return fb;\n        }\n\n        public int Read(byte[] buffer, int offset = 0, int count = 0)\n        {\n            if (this.waveBuffer == null || this.waveBuffer.MaxSize &lt; count)\n                this.waveBuffer = new WaveBuffer(count);\n\n            int readBytes = this.source.Read(this.waveBuffer, 0, count);\n\n            if (readBytes &gt; 0) readBytes = count;\n\n            int frames = readBytes / sizeof(float);\n\n            this.Pitch = this.DeterminePitch(this.waveBuffer.FloatBuffer, frames);\n\n            return frames * 4;\n        }</code></pre>\n\n<h1></h1>\nStrangely enough, when it enters the constructor, waveBuffer contains some data (255, 1, 0, etc.), but when I check the &quot;buffer&quot; parameter of Read(), it's entirely 0. Every element.<br />\n<br />\nOut of curiosity also, why does Read() have a buffer parameter, but isn't actually used in the method at all (I got that piece of code from one of your articles)?<br />\n<br />\nAny help to resolve this issue would be greatly appreciated! I've been at this for quite a while already, but can make no sense out of it.<br />\n<br />\n<br />\nThanks, <br />\nAlain<br />\n",
    "PostedDate": "2013-04-05T02:58:24.803-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]