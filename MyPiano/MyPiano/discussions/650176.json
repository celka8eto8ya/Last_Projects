[
  {
    "Id": "1459692",
    "ThreadId": "650176",
    "Html": "Hi All,\r<br />\n<br />\nI'm a hobbyist coder, learning what I can as I trundle along.\r<br />\n<br />\nI been trying to code a music player for some time now and keep hitting this impasse and restarting the project through frustration.\r<br />\n<br />\nI want to display a zoomed in scrolling waveform as an audio file plays. I have tried a few options but only one seems the right way to do it but I can't code it. In my minds eye I need to get a portion of the samples that would be displayed on the screen and draw the lines to show the peaks. I have tried this in a DispatcherTimer and try and grab a number of samples based on the current position in the MediaFoundationReader and the size of the container.\r<br />\n<br />\nThis does do something but the audio drops out every time the timer fires and the image doesn't draw completely. I think it has something to do with the fact I am reading in the whole file every time.\r<br />\n<br />\nAny help would be very much appreciated.\r<br />\n<br />\nHere is the timer code.<br />\n<pre><code>        string TrackFileName;\n        DispatcherTimer timer = new DispatcherTimer();\n        MediaFoundationReader NewAudioreader;\n        WaveOut NewWaveOut;\n        WriteableBitmap FullWaveForm;\n        WriteableBitmap ZoomWaveForm;\n        void timer_Tick(object sender, EventArgs e)\n        {\n\n            \n            ZoomWaveForm.Clear();\n\n            long samplesRequired = (long)(NewAudioreader.Length / FullWaveForm.Width);\n            long trackStartPos = NewAudioreader.Position;\n\n            //*** I think this is my problem as I read the whole file into the reader.***\n            using (var reader = new AudioFileReader(TrackFileName))\n            {\n                reader.Position = trackStartPos;\n                var samples = samplesRequired / (reader.WaveFormat.Channels * reader.WaveFormat.BitsPerSample);\n                var samplesPerPixel = (int)(samplesRequired / ZoomWaveForm.Width);\n                var max = 0.0f;\n                var batch = (int)samplesPerPixel;\n                var mid = ZoomWaveForm.Height / 2;\n                var yScale = ZoomWaveForm.Height / 2;\n                float[] buffer = new float[samplesPerPixel];\n                int read;\n                var xPos = 0;\n                while ((read = reader.Read(buffer, 0, batch)) == batch)\n                {\n                    for (int n = 0; n &lt; read; n = n + 2)\n                    {\n                        max = Math.Max(Math.Abs(buffer[n]), max);\n                    }\n                    ZoomWaveForm.DrawLineAa(xPos, (int)(mid + (max * yScale)), xPos, (int)(mid - (max * yScale)), Colors.Orange, 1);\n                    max = 0;\n                    xPos++;\n                    if (reader.Position &gt;= (NewAudioreader.Position) + samplesRequired)\n                    {\n                        break;\n                    }\n                }\n            }\n\n           // WPF &lt;Image&gt; container\n            imgZoomWaveForm.Source = ZoomWaveForm;\n        }</code></pre>\n\n",
    "PostedDate": "2016-01-18T11:10:29.693-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]