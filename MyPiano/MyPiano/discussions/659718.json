[
  {
    "Id": "1488799",
    "ThreadId": "659718",
    "Html": "I was using the following routine to trim (grab pieces of) MP3 files. Not sure when it stopped working, but now I find that no matter how many ReadNextFrames I issue the reader.CurrentTime and reader.Position remain 0. I'm running on Windows 10 Prof, and using Visual Studio 2013. I've tried the code with Naudio 1.7, 1.7.2, and 1.7.3 - same result. Any ideas as to where I'm going wrong would be appreciated. Here's the code ...<br />\n<pre><code> public static void TrimMp3File(string inputPath, string outputPath, TimeSpan? begin, TimeSpan? end)\n        {\n            //  This routine trims an MP3 file\n            //     Ref: http://stackoverflow.com/questions/7932951/trimming-mp3-files-using-naudio\n            //             original code from Mark Heath (Naudio creator)\n\n            // ********************** DEBUG: Start ************************* \n            TimeSpan Zero = new TimeSpan(0,0,0);  \n            TimeSpan CurrentTime;\n            TimeSpan CalculatedCurrentTime, CalculatedCurrentTimeBasedOnBytesRead;\n            bool ProbePoint; \n            long BytesRead = 0;\n            // **********************  DEBUG: End  *************************                                             \n\n            if (begin.HasValue &amp;&amp; end.HasValue &amp;&amp; begin &gt; end)\n                throw new ArgumentOutOfRangeException(&quot;end&quot;, &quot;end should be greater than begin&quot;);\n\n            using (var reader = new Mp3FileReader(inputPath))\n            {\n                using (var writer = File.Create(outputPath))\n                {\n                    Mp3Frame frame;\n                    while ((frame = reader.ReadNextFrame()) != null)\n                    {\n                        // ********************** DEBUG: Start **************************\n                        //  BUG: reader.Position and reader.CurrentTime are never updated\n                        // ************************************************************** \n                        CurrentTime = reader.CurrentTime;  \n                        CalculatedCurrentTime = TimeSpan.FromSeconds((double)reader.Position / reader.WaveFormat.AverageBytesPerSecond); \n                        BytesRead += frame.RawData.Length;\n                        CalculatedCurrentTimeBasedOnBytesRead = TimeSpan.FromSeconds((double)BytesRead / reader.WaveFormat.AverageBytesPerSecond); ;\n                        if (CurrentTime != Zero) \n                        {\n                           ProbePoint = true ;\n                        }  \n                        // **********************  DEBUG: End  *************************\n\n                        if (reader.CurrentTime &gt;= begin || !begin.HasValue)\n                        {\n                            if (reader.CurrentTime &lt;= end || !end.HasValue)\n                                writer.Write(frame.RawData, 0, frame.RawData.Length);\n                            else break;\n                        }\n\n                    }\n\n                }\n            }\n            \n        }</code></pre>\n\n",
    "PostedDate": "2016-11-25T17:57:55.863-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1488820",
    "ThreadId": "659718",
    "Html": "<pre><code>As a work around, I altered the program to calculate it's own CurrentTime rather than relying on reader.CurrentTime as follows.\nI'm back in business ...\n\npublic static void TrimMp3File(string inputPath, string outputPath, TimeSpan? begin, TimeSpan? end)\n        {\n            //  This routine trims an MP3 file\n            //     Ref: http://stackoverflow.com/questions/7932951/trimming-mp3-files-using-naudio\n            //            * original code from Mark Heath (Naudio creator)\n            //          http://stackoverflow.com/questions/6220660/calculating-the-length-of-mp3-frames-in-milliseconds\n            //            * frame length in ms formula: lucianolev\n\n            double currentSecond = 0.0D; //                                         2016-11-26: Start - fix: replaced reliance on reader.CurrentTime (which is not being updated)\n            double beginSecond = 0.0D;   //                                                                  with the calculated currentSecond.\n            double endSecond = 9999.0D;                                                             \n            TimeSpan totalDuration = new TimeSpan(0, 0, 0); //                      2016-11-26: End\n           \n            if (begin.HasValue &amp;&amp; end.HasValue &amp;&amp; begin &gt; end)\n                throw new ArgumentOutOfRangeException(&quot;end&quot;, &quot;end should be greater than begin&quot;);\n\n            using (var reader = new Mp3FileReader(inputPath)) {\n                totalDuration = reader.TotalTime; //                                2016-11-26: Start\n                if (begin.HasValue) beginSecond = ((TimeSpan)begin).TotalSeconds;\n                if (end.HasValue) endSecond = ((TimeSpan)end).TotalSeconds;\n                else endSecond = totalDuration.TotalSeconds; //                     2016-11-26: End\n                \n                using (var writer = File.Create(outputPath)) {\n                    Mp3Frame frame;\n                    while ((frame = reader.ReadNextFrame()) != null) {\n                         currentSecond += ((double)frame.SampleCount / (double)frame.SampleRate); //    2016-11-26\n                         if (currentSecond &gt;= beginSecond) { //                                         2016-11-26                                                    \n                            if (currentSecond &lt;= endSecond)  //                                         2016-11-26\n                                writer.Write(frame.RawData, 0, frame.RawData.Length);\n                            else break;\n                        }\n                    }\n                }\n            }\n        }</code></pre>\n\n",
    "PostedDate": "2016-11-26T14:45:21.06-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]