[
  {
    "Id": "528353",
    "ThreadId": "236410",
    "Html": "\r\n<p>Mark,</p>\r\n<p>&nbsp;I believe I discovered 2 bugs when compiling under &ldquo;x86&rdquo; and &ldquo;Any CPU&rdquo; as a DLL. I am using your NAudio to perform 2 functions:</p>\r\n<ul>\r\n<li>Detect a file&rsquo;s sound format </li><li>Convert the file to mu-law 8-bit, 8000K, mono </li></ul>\r\n<p>&nbsp;My environment:</p>\r\n<ul>\r\n<li>Microsoft Windows 7, 64-bit </li><li>Microsoft Visual Studio 2005 project in Visual Basic </li><li>Referencing NAudio.dll </li></ul>\r\n<p>&nbsp;The situation:</p>\r\n<ul>\r\n<li>File Detection\r\n<ul>\r\n<li>If I compile as &ldquo;x86&rdquo;, link the NAudio.dll to the Visual Studio 2005 project, then attempt to detect a sound file format I get an error: Could not load file or assembly 'NAudio, Version=1.3.8.0, Culture=neutral, PublicKeyToken=null' or one of\r\n its dependencies. An attempt was made to load a program with an incorrect format.\r\n</li><li>If I compile as &ldquo;Any CPU&rdquo;, link the NAudio.dll to the Visual Studio 2005 project, then attempt to detect a sound file format I get no error.\r\n</li></ul>\r\n</li><li>File Conversion\r\n<ul>\r\n<li>If I compile as &ldquo;Any CPU&rdquo;, link the NAudio.dll to the Visual Studio 2005 project, then attempt to convert a PCM file to mu-law I get an error: InvalidParameter calling acmStreamPrepareHeader\r\n</li><li>If I compile as &ldquo;x86&rdquo;, link the NAudio.dll to the Visual Studio 2005 project, then attempt to convert a PCM file to mu-law I get an error: Could not load file or assembly 'NAudio, Version=1.3.8.0, Culture=neutral, PublicKeyToken=null' or one\r\n of its dependencies. An attempt was made to load a program with an incorrect format.\r\n</li></ul>\r\n</li><li>The Situation\r\n<ul>\r\n<li>Your notes say to use &ldquo;x86&rdquo; for 64-bit processing but I get 2 errors.\r\n</li><li>Under &ldquo;Any CPU&rdquo; I get 1 error. </li></ul>\r\n</li></ul>\r\n",
    "PostedDate": "2010-11-29T09:00:52.713-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528357",
    "ThreadId": "236410",
    "Html": "\r\n<p>you probably need to get a newer build of NAudio, as various improvements have been made for x64 support. Are you able to get the latest code out and build it (sln file is VS2010)</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2010-11-29T09:03:07.89-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528412",
    "ThreadId": "236410",
    "Html": "\r\n<p>Okay,</p>\r\n<p>I have downloaded and am using the VS2010 codebase, and have set all of the builds to &quot;Any CPU&quot;.&nbsp; When attempting to convert PCM files to mu-law, I get mixed results:</p>\r\n<ul>\r\n<li>Successful conversion to mu-law:\r\n<ul>\r\n<li>PCM 8000 Sample Rate, 16000 Bytes per second, 16 Bits per sample, 1 channel, 2 block align\r\n</li></ul>\r\n</li><li>Failed conversion to mu-law:\r\n<ul>\r\n<li>PCM 16000 Sample Rate, 32000 Bytes per second, 16 Bits per sample, 1 channel, 2 block align\r\n</li><li>PCM 48000 Sample Rate, 96000 Bytes per second, 16 Bits per sample, 1 channel, 2 block align\r\n</li></ul>\r\n</li><li>Error:&nbsp; AcmNotPossible calling acmStreamOpen.&nbsp; StackTrace:&nbsp; at NAudio.MmException.Try(MmResult result, String function) in C:\\DataTest\\Sound\\NAudio64\\NAudio\\Wave\\MmeInterop\\MmException.cs:line 40 at NAudio.Wave.Compression.AcmStream..ctor(WaveFormat\r\n sourceFormat, WaveFormat destFormat) in C:\\DataTest\\Sound\\NAudio64\\NAudio\\Wave\\Compression\\AcmStream.cs:line 44 at NAudio.Wave.WaveFormatConversionStream..ctor(WaveFormat targetFormat, WaveStream sourceStream) in C:\\DataTest\\Sound\\NAudio64\\NAudio\\Wave\\WaveStreams\\WaveFormatConversionStream.cs:line\r\n 43 at CallCommand.Utilities.SharedFunctions.App.Media.Naudios.Functions.ConvertWaveToMulaw(String InputFile, String OutputFile) in C:\\DataSubversion\\Utilities\\SharedFunctions\\clsMediaNaudio.vb:line 165\r\n</li><li>Code being used to convert to mu-law:\r\n<ul>\r\n<li>NAudio.Wave.WaveStream stream = new NAudio.Wave.WaveFileReader(InputFile); </li><li>NAudio.Wave.WaveFormat TargetFormat = NAudio.Wave.WaveFormat.CreateMuLawFormat(8000, 1);\r\n</li><li>using (NAudio.Wave.WaveStream ConvertedStream = new NAudio.Wave.WaveFormatConversionStream(TargetFormat, stream))\r\n</li><li>{ </li><li>NAudio.Wave.WaveFileWriter.CreateWaveFile(OutputFile, ConvertedStream); </li><li>} </li></ul>\r\n</li></ul>\r\n",
    "PostedDate": "2010-11-29T11:06:11.87-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528464",
    "ThreadId": "236410",
    "Html": "\r\n<p>the ACM mu-law codec can't do sample rate conversion. you have to do that as a separate step. One WaveFormatConversionStream to go to 8kHz 16 bit mono, then a second to convert to mu law</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2010-11-29T12:47:08.15-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528482",
    "ThreadId": "236410",
    "Html": "\r\n<p>Thanks Mark.&nbsp; Would you be able to provide me that code piece (or something close) to get from a higher PCM format to the lower PCM format?&nbsp; I am still learning your codebase.</p>\r\n<p>John</p>\r\n",
    "PostedDate": "2010-11-29T13:31:53.9-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "528493",
    "ThreadId": "236410",
    "Html": "\r\n<p>it's very similar to what you have already got, just an extra initial step (obviously you don't need it when the input stream is already 8kHz)</p>\r\n<p>&nbsp;</p>\r\n<p>WaveFormat downsampled = new WaveFormat(8000, 1);</p>\r\n<p>using (WaveStream ConvertedStream = new WaveFormatConversionStream(downsampled, stream)</p>\r\n<p>Mark</p>\r\n<ul>\r\n</ul>\r\n",
    "PostedDate": "2010-11-29T13:49:14.083-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "592041",
    "ThreadId": "236410",
    "Html": "<p>Can you provide a sample of your Visual Basic code? I am trying to use VS2010 for development. Thanks!</p>",
    "PostedDate": "2011-04-05T07:17:28.163-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "593530",
    "ThreadId": "236410",
    "Html": "\r\n<div>I had to write in C#, do you still want it?<br>\r\n<br>\r\n<br>\r\n</div>\r\n<div><br>\r\nOn Apr 5, 2011, at 10:17 AM, &quot;webideas&quot;&lt;<a href=\"mailto:notifications@codeplex.com\">notifications@codeplex.com</a>&gt; wrote:<br>\r\n<br>\r\n</div>\r\n<div></div>\r\n<blockquote type=\"cite\">\r\n<div>\r\n<p>From: webideas</p>\r\n<div id=\"x_x_ThreadNotificationPostBody\">\r\n<p>Can you provide a sample of your Visual Basic code? I am trying to use VS2010 for development. Thanks!</p>\r\n</div>\r\n</div>\r\n</blockquote>\r\n",
    "PostedDate": "2011-04-07T07:16:41.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "593560",
    "ThreadId": "236410",
    "Html": "<p>Yes, if you do not mind sharing it.</p>\r\n<p>What was the reason for changing the project from Visual Basic to C#?</p>\r\n<p>Thanks!</p>",
    "PostedDate": "2011-04-07T08:10:30.36-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "595899",
    "ThreadId": "236410",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">I was directed to migrate to the C# codebase. This is the core library to detect and convert and merge what we use so far. There are more audio formats I would like to add as time permits.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">using</span><span style=\"font-size:8.0pt; font-family:\"> System;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">using</span><span style=\"font-size:8.0pt; font-family:\"> System.Collections;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">using</span><span style=\"font-size:8.0pt; font-family:\"> System.Collections.Generic;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">using</span><span style=\"font-size:8.0pt; font-family:\"> System.Data;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">using</span><span style=\"font-size:8.0pt; font-family:\"> System.Diagnostics;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">namespace</span><span style=\"font-size:8.0pt; font-family:\"> CallCommand.Messaging.Voice.Audio</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">class</span> <span style=\"color:#2B91AF\">Formats</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">enum</span> <span style=\"color:#2B91AF\">enumSoundFileFormat</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Mu-law 8-bit 8000k 1 channel</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">esft_MuLaw8000k8bitMono</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">class</span> <span style=\"color:#2B91AF\">Functions</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> System.<span style=\"color:#2B91AF\">Boolean</span> IsFileValidMuLawFormatForVoiceCalling(</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> sFileAndPath)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span>\r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate file exists</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (System.IO.<span style=\"color:#2B91AF\">File</span>.Exists(sFileAndPath) ==\r\n<span style=\"color:blue\">false</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:blue\">false</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate file format, and validate file length &gt; 0</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span> objFile =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span>(sFileAndPath))\r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (objFile.WaveFormat.Encoding == NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatEncoding</span>.MuLaw</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.SampleRate == 8000\r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.AverageBytesPerSecond == 8000</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.BitsPerSample == 8</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.Channels == 1</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.BlockAlign == 1</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.Length &gt; 0)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:blue\">true</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----default</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:blue\">false</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:blue\">false</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> System.Data.<span style=\"color:#2B91AF\">DataTable</span> GetAudioPropertiesLongFormat(</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> sFileAndPath)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (System.Data.<span style=\"color:#2B91AF\">DataTable</span> dtResult =\r\n<span style=\"color:blue\">new</span> System.Data.<span style=\"color:#2B91AF\">DataTable</span>())</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----build return data structure</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.FileName,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.ValidDialing,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingLabel,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingID,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.SampleRate,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.BytesPerSecond,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.BitsPerSample,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.Channels,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.BlockAlign,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Columns.Add(<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength,\r\n<span style=\"color:blue\">typeof</span>(<span style=\"color:blue\">string</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----create row</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.Data.<span style=\"color:#2B91AF\">DataRow</span> drNewRow = dtResult.NewRow();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.FileName] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(sFileAndPath &#43; <span style=\"color:#A31515\">\r\n&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----process file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span> objFile =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span>(sFileAndPath))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----add data</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (objFile.WaveFormat.Encoding == NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatEncoding</span>.MuLaw</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.SampleRate == 8000</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.AverageBytesPerSecond == 8000</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.BitsPerSample == 8</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.Channels == 1</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.WaveFormat.BlockAlign == 1</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& objFile.Length &gt; 0)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.ValidDialing] =\r\n<span style=\"color:#A31515\">&quot;True&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">else</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.ValidDialing] =\r\n<span style=\"color:#A31515\">&quot;False&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingLabel] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(objFile.WaveFormat.Encoding.ToString() &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingID] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(<span style=\"color:#2B91AF\">Convert</span>.ToInt32(objFile.WaveFormat.Encoding));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.SampleRate] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(objFile.WaveFormat.SampleRate &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.BytesPerSecond] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(objFile.WaveFormat.AverageBytesPerSecond &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.BitsPerSample] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(objFile.WaveFormat.BitsPerSample &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.Channels] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(objFile.WaveFormat.Channels &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.BlockAlign] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(objFile.WaveFormat.BlockAlign &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----convert from milliseconds to seconds</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength] =\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(<span style=\"color:#2B91AF\">Convert</span>.ToInt32(objFile.Length / 1000) &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> {}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">} </span>\r\n</p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.ValidDialing] =\r\n<span style=\"color:#A31515\">&quot;False&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">finally</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----set default Encoding label, if needed</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (<span style=\"color:blue\">string</span>.IsNullOrEmpty(<span style=\"color:#2B91AF\">Convert</span>.ToString(drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingLabel]\r\n &#43; <span style=\"color:#A31515\">&quot;&quot;</span>)))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingLabel] =\r\n<span style=\"color:#A31515\">&quot;(Unknown)&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> {}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----attempt to calculate file length off of framework library call instead of sound library</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (<span style=\"color:#2B91AF\">Parse</span>.IsNumeric(drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength]) ==\r\n<span style=\"color:blue\">false</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">FileInfo</span> objFileInfo =\r\n<span style=\"color:blue\">new</span> System.IO.<span style=\"color:#2B91AF\">FileInfo</span>(sFileAndPath);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">drNewRow[<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength] = objFileInfo.Length;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> {}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----add row to datatable</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.Rows.Add(drNewRow);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----save data</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">dtResult.AcceptChanges();</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----return data</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span> dtResult;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Error in &quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().ReflectedType.ToString() &#43;\r\n<span style=\"color:#A31515\">&quot;.&quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().Name &#43;\r\n<span style=\"color:#A31515\">&quot;: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> System.<span style=\"color:#2B91AF\">String</span> GetAudioPropertiesShortFormat(</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> sFileAndPath)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Build short format from long format</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (System.Data.<span style=\"color:#2B91AF\">DataTable</span> dtFile = CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.GetAudioPropertiesLongFormat(sFileAndPath))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingLabel] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>) </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#A31515\">\r\n&quot;/&quot;</span> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#2B91AF\">\r\nConvert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.SampleRate] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>) </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#A31515\">\r\n&quot;/&quot;</span> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#2B91AF\">\r\nConvert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.BytesPerSecond] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>) </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#A31515\">\r\n&quot;/&quot;</span> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#2B91AF\">\r\nConvert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.BitsPerSample] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>) </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#A31515\">\r\n&quot;/&quot;</span> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#2B91AF\">\r\nConvert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.Channels] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>) </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#A31515\">\r\n&quot;/&quot;</span> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&#43; <span style=\"color:#2B91AF\">\r\nConvert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.BlockAlign] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Error in &quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().ReflectedType.ToString() &#43;\r\n<span style=\"color:#A31515\">&quot;.&quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().Name &#43;\r\n<span style=\"color:#A31515\">&quot;: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> System.<span style=\"color:#2B91AF\">Int32</span> GetAudioPropertyAudioLength(</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> sFileAndPath)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Use NAudio reference to pull file properties</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.Data.<span style=\"color:#2B91AF\">DataTable</span> dtProperties = CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.GetAudioPropertiesLongFormat(sFileAndPath);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Determine if successful</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (dtProperties.Rows.Count &gt; 0\r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">&& <span style=\"color:#2B91AF\">\r\nParse</span>.IsNumeric(dtProperties.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----set initial value</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:#2B91AF\">Convert</span>.ToInt32(dtProperties.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength]);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">else</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----unsuccessful, return default</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span> -1;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Error in &quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().ReflectedType.ToString() &#43;\r\n<span style=\"color:#A31515\">&quot;.&quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().Name &#43;\r\n<span style=\"color:#A31515\">&quot;: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> ConvertWaveToMulaw(</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> inputFile,</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> outputFile)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----temp file, sometimes needed</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> tempConvertFile1 = inputFile &#43;\r\n<span style=\"color:#A31515\">&quot;.tempConvert1.wav&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> tempOutputFile2 = outputFile &#43;\r\n<span style=\"color:#A31515\">&quot;.tempOutput2.wav&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----capture original file paths</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> origInputFile = inputFile;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> origOutputFile = outputFile;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----check if file already in proper format</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.IsFileValidMuLawFormatForVoiceCalling(inputFile))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----file is already in correct format</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----determine if output file is same destination as input file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (inputFile.ToUpper() == outputFile.ToUpper())</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----same file, nothing more to do</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">else</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----simply copy input file to output file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Copy(inputFile, outputFile,\r\n<span style=\"color:blue\">true</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----exit</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----get file properties</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (System.Data.<span style=\"color:#2B91AF\">DataTable</span> dtFile = CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.GetAudioPropertiesLongFormat(inputFile))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate current file state</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (dtFile.Rows.Count == 0)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Unable to get file sound properties for file: &quot;</span> &#43; inputFile);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate file length</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (<span style=\"color:#2B91AF\">Parse</span>.IsNumeric(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength]) ==\r\n<span style=\"color:blue\">false</span> </span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">|| <span style=\"color:#2B91AF\">\r\nConvert</span>.ToInt32(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.FileLength]) == 0) {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;File is empty.&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate Encoding ID</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (<span style=\"color:#2B91AF\">Parse</span>.IsNumeric(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingID]) ==\r\n<span style=\"color:blue\">false</span>) {</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Unknown Encoding ID for this record: &quot;</span> &#43;\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingID] &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----check if input file and output file (overlay)</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (inputFile.ToUpper() == outputFile.ToUpper())</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----must capture separate temp file for output data</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">outputFile = tempOutputFile2;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----get the Encoding ID enum</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatEncoding</span> iEncodingId = (NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatEncoding</span>)<span style=\"color:#2B91AF\">Enum</span>.Parse(<span style=\"color:blue\">typeof</span>(NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatEncoding</span>),\r\n<span style=\"color:#2B91AF\">Convert</span>.ToString(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.EncodingID]));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----determine encoding type</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">switch</span> (iEncodingId)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">case</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatEncoding</span>.Pcm:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----determine if sample rate higher than 8000</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (<span style=\"color:#2B91AF\">Convert</span>.ToInt32(dtFile.Rows[0][<span style=\"color:#2B91AF\">ColumnLabel</span>.SampleRate]) &gt; 8000)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----must first convert to lower level before converting to mu-law</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----convert from higher PCM to lower PCM</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveStream</span> waveStream =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span>(inputFile))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormat</span> targetFormat =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormat</span>(8000, 1);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveStream</span> ConvertedStream =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatConversionStream</span>(targetFormat, waveStream))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileWriter</span>.CreateWaveFile(tempConvertFile1, ConvertedStream);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----point the new input file as the temp file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">inputFile = tempConvertFile1;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----now we can convert from lower PCM to Mu-Law</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveStream</span> waveStream =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span>(inputFile))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormat</span> targetFormat = NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormat</span>.CreateMuLawFormat(8000, 1);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveStream</span> ConvertedStream =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormatConversionStream</span>(targetFormat, waveStream))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileWriter</span>.CreateWaveFile(outputFile, ConvertedStream);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">break</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">default</span>:</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;This function is not yet coded to convert this file format.&quot;</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.Threading.<span style=\"color:#2B91AF\">Thread</span>.Sleep(0);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----confirm conversion took place</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.IsFileValidMuLawFormatForVoiceCalling(outputFile) ==\r\n<span style=\"color:blue\">false</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Input File not properly converted: &quot;</span> &#43; inputFile);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----determine if temp2 file needs to be copied as final output file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (System.IO.<span style=\"color:#2B91AF\">File</span>.Exists(tempOutputFile2))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Copy(tempOutputFile2, origOutputFile,\r\n<span style=\"color:blue\">true</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Error in &quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().ReflectedType.ToString() &#43;\r\n<span style=\"color:#A31515\">&quot;.&quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().Name &#43;\r\n<span style=\"color:#A31515\">&quot;: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">finally</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----delete temp file, if exists</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Delete(tempConvertFile1);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> {}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----delete temp file, if exists</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Delete(tempOutputFile2);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> {}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">void</span> CombineTwoFilesToMulaw(</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> inputFile1,</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> inputFile2,</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> outputFile)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate both files to merge exist</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (!System.IO.<span style=\"color:#2B91AF\">File</span>.Exists(inputFile1))\r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Parameter InputFile1 not found: &quot;</span> &#43; inputFile1);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (!System.IO.<span style=\"color:#2B91AF\">File</span>.Exists(inputFile2))\r\n</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Parameter InputFile2 not found: &quot;</span> &#43; inputFile2);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate Input File 1 is Mu-Law format</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.IsFileValidMuLawFormatForVoiceCalling(inputFile1) ==\r\n<span style=\"color:blue\">false</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Parameter InputFile1 is not the proper sound format to combine: &quot;</span> &#43; inputFile1);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----validate Input File 2 is Mu-Law format</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.IsFileValidMuLawFormatForVoiceCalling(inputFile2) ==\r\n<span style=\"color:blue\">false</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Parameter InputFile2 is not the proper sound format to combine: &quot;</span> &#43; inputFile2);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----create temp output file to store the work</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">string</span> tempOutputFile = outputFile &#43;\r\n<span style=\"color:#A31515\">&quot;.temp.wav&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----delete previous temp file, if exists</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (System.IO.<span style=\"color:#2B91AF\">File</span>.Exists(tempOutputFile))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Delete(tempOutputFile);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Unable to delete previous tempOutputFile: &quot;</span> &#43; tempOutputFile &#43;\r\n<span style=\"color:#A31515\">&quot; : &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Combine</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">int</span> buffSize = 1024;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">byte</span>[] buffer =\r\n<span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[buffSize];</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Build mu-Law output file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileWriter</span> waveFileWriter =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileWriter</span>(tempOutputFile, NAudio.Wave.<span style=\"color:#2B91AF\">WaveFormat</span>.CreateMuLawFormat(8000, 1)))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Append Input File 1</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span> reader =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span>(inputFile1))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----first read</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">int</span> read = reader.Read(buffer, 0, buffer.Length);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">while</span> (read &gt; 0)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----write</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">waveFileWriter.WriteData(buffer, 0, read);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----next read</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">read = reader.Read(buffer, 0, buffer.Length);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Append Input File 2</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">using</span> (NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span> reader =\r\n<span style=\"color:blue\">new</span> NAudio.Wave.<span style=\"color:#2B91AF\">WaveFileReader</span>(inputFile2))</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----first read</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">int</span> read = reader.Read(buffer, 0, buffer.Length);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">while</span> (read &gt; 0)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----write</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">waveFileWriter.WriteData(buffer, 0, read);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----next read</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">read = reader.Read(buffer, 0, buffer.Length);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----Confirm outputfile was built properly</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">if</span> (CallCommand.Messaging.Voice.Audio.<span style=\"color:#2B91AF\">Functions</span>.IsFileValidMuLawFormatForVoiceCalling(tempOutputFile) ==\r\n<span style=\"color:blue\">false</span>)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Variable tempOutputFileInputFile2 was not created in the proper sound format: &quot;</span> &#43; tempOutputFile);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----copy temp output to final output file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Copy(tempOutputFile, outputFile,\r\n<span style=\"color:blue\">true</span>);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Unable to copy tempOutputFile as the final outputFile: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:green\">//-----delete temp output file</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.IO.<span style=\"color:#2B91AF\">File</span>.Delete(tempOutputFile);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Unable to delete tempOutputFile: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span> (<span style=\"color:#2B91AF\">Exception</span> ex)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">throw</span>\r\n<span style=\"color:blue\">new</span> <span style=\"color:#2B91AF\">Exception</span>(<span style=\"color:#A31515\">&quot;Error in &quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().ReflectedType.ToString() &#43;\r\n<span style=\"color:#A31515\">&quot;.&quot;</span> &#43; System.Reflection.<span style=\"color:#2B91AF\">MethodInfo</span>.GetCurrentMethod().Name &#43;\r\n<span style=\"color:#A31515\">&quot;: &quot;</span> &#43; ex.Message);</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">class</span> <span style=\"color:#2B91AF\">ColumnLabel</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> FileName =\r\n<span style=\"color:#A31515\">&quot;FileName&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> ValidDialing =\r\n<span style=\"color:#A31515\">&quot;ValidDialing&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> EncodingLabel =\r\n<span style=\"color:#A31515\">&quot;EncodingLabel&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> EncodingID =\r\n<span style=\"color:#A31515\">&quot;EncodingID&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> SampleRate =\r\n<span style=\"color:#A31515\">&quot;SampleRate&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> BytesPerSecond =\r\n<span style=\"color:#A31515\">&quot;BytesPerSecond&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> BitsPerSample =\r\n<span style=\"color:#A31515\">&quot;BitsPerSample&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> Channels =\r\n<span style=\"color:#A31515\">&quot;Channels&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> BlockAlign =\r\n<span style=\"color:#A31515\">&quot;BlockAlign&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">string</span> FileLength =\r\n<span style=\"color:#A31515\">&quot;FileLength&quot;</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">class</span> <span style=\"color:#2B91AF\">Parse</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">public</span>\r\n<span style=\"color:blue\">static</span> <span style=\"color:blue\">bool</span> IsNumeric(<span style=\"color:blue\">object</span> data)</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">try</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">System.<span style=\"color:#2B91AF\">Double</span>.Parse(<span style=\"color:#2B91AF\">Convert</span>.ToString(data &#43;\r\n<span style=\"color:#A31515\">&quot;&quot;</span>));</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:blue\">true</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">catch</span></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">{</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"><span style=\"color:blue\">return</span>\r\n<span style=\"color:blue\">false</span>;</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\"></span></p>\r\n<p style=\"text-autospace:none\"><span style=\"font-size:8.0pt; font-family:\">}</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #B5C4DF 1.0pt; padding:3.0pt 0in 0in 0in\">\r\n<p><b><span style=\"font-size:10.0pt; font-family:\">From:</span></b><span style=\"font-size:10.0pt; font-family:\"> webideas [email removed]\r\n<br>\r\n<b>Sent:</b> Thursday, April 07, 2011 11:11 AM<br>\r\n<b>To:</b> john_schellenberger@hotmail.com<br>\r\n<b>Subject:</b> Re: Error converting file using VS 2005 project to VS 2008 NAudio.dll [naudio:236410]</span></p>\r\n</div>\r\n</div>\r\n<p></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">From: webideas</span></p>\r\n<div id=\"x_x_ThreadNotificationPostBody\" style=\"margin-bottom:24.0pt\">\r\n<p><span style=\"font-size:9.0pt; font-family:\">Yes, if you do not mind sharing it.</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">What was the reason for changing the project from Visual Basic to C#?</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Thanks!</span></p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2011-04-12T05:43:09.96-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "609547",
    "ThreadId": "236410",
    "Html": "<p>Could not get it to work. Can you upload the whole VS 2010 project here and not just the code snippet?</p>\r\n<p>Thanks!</p>",
    "PostedDate": "2011-05-09T07:11:31.037-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "609592",
    "ThreadId": "236410",
    "Html": "\r\n<div>\r\n<p><span style=\"font-size:11.0pt; font-family:\">The entire project would need to be zipped, and I don’t see where a zip attachment would post to this blog site.</span></p>\r\n<p><span style=\"font-size:11.0pt; font-family:\"></span></p>\r\n<div>\r\n<div style=\"border:none; border-top:solid #B5C4DF 1.0pt; padding:3.0pt 0in 0in 0in\">\r\n<p><b><span style=\"font-size:10.0pt; font-family:\">From:</span></b><span style=\"font-size:10.0pt; font-family:\"> webideas [email removed]\r\n<br>\r\n<b>Sent:</b> Monday, May 09, 2011 10:12 AM<br>\r\n<b>To:</b> john_schellenberger@hotmail.com<br>\r\n<b>Subject:</b> Re: Error converting file using VS 2005 project to VS 2008 NAudio.dll [naudio:236410]</span></p>\r\n</div>\r\n</div>\r\n<p></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">From: webideas</span></p>\r\n<div id=\"ThreadNotificationPostBody\" style=\"margin-bottom:24.0pt\">\r\n<p><span style=\"font-size:9.0pt; font-family:\">Could not get it to work. Can you upload the whole VS 2010 project here and not just the code snippet?</span></p>\r\n<p><span style=\"font-size:9.0pt; font-family:\">Thanks!</span></p>\r\n</div>\r\n</div>\r\n",
    "PostedDate": "2011-05-09T08:22:29.8-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "609676",
    "ThreadId": "236410",
    "Html": "<p>Please e-mail it to me.</p>\n<p>Thanks!</p>",
    "PostedDate": "2011-05-09T10:57:21.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "609679",
    "ThreadId": "236410",
    "Html": "I did, and it was rejected.<br>\r\n<br>\r\n<hr id=\"stopSpelling\">\r\nFrom: [email removed]<br>\r\nTo: [email removed]<br>\r\nDate: Mon, 9 May 2011 10:57:29 -0700<br>\r\nSubject: Re: Error converting file using VS 2005 project to VS 2008 NAudio.dll [naudio:236410]<br>\r\n<br>\r\nFrom: webideas<br>\r\n<div id=\"ecxThreadNotificationPostBody\">Please e-mail it to me: webideas (at) gmail.com\r\n<br>\r\nThanks!<br>\r\n</div>\r\n<div id=\"ecxThreadNotificationFooter\">Read the <a target=\"_blank\">full discussion online</a>.<br>\r\nTo add a post to this discussion, reply to this email (<a target=\"_blank\">naudio@discussions.codeplex.com</a>)<br>\r\nTo start a new discussion for this project, email <a target=\"_blank\">naudio@discussions.codeplex.com</a><br>\r\nYou are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a target=\"_blank\">unsubscribe</a> on CodePlex.com.<br>\r\nPlease note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at CodePlex.com<br>\r\n</div>\r\n",
    "PostedDate": "2011-05-09T10:58:39.773-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]