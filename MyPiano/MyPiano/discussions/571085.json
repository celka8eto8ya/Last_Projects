[
  {
    "Id": "1318311",
    "ThreadId": "571085",
    "Html": "so sometime when i play a note I get static noise\r<br />\nand do not know why...\r<br />\ni would said 6 out of 14 times which is high...\r<br />\nhow so I troubleshot that ?\r<br />\n<br />\nthis s my code:<br />\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing NAudio.Wave;\n\nnamespace Music\n{\n    class Guitar : WaveStream\n    {\n        public Guitar()\n        {\n            Frequency = 0;\n            n2 = 0;\n            n3 = 0;\n            n4 = 0;\n            rnd1 = new System.Random();\n            t = 0;\n        }\n        public double Frequency { get; set; }\n        public double Amplitude { get; set; }\n        static int n2;\n        static int n3;\n        static int n4;\n        public long Bufferlength { get; set; }\n        private long position;\n        float[] X;\n        float[] temp;\n        public override long Length { get { return Bufferlength; } }\n        public override WaveFormat WaveFormat { get { return WaveFormat.CreateIeeeFloatWaveFormat(44100, 2); } }\n        Random rnd1;\n        static int t;\n        public override long Position\n        {\n            get\n            {\n                // we'll just return the number of bytes read so far\n                return position;\n            }\n            set\n            {\n                position = value;\n            }\n        }\n\n        // buffer size is 52920 and so is sampleCount\n        // oddset is 0\n        public override int Read(byte[] buffer, int offset, int sampleCount)\n        {\n            // Bufferlength set to the min I want the sound to play for\n\n            int N = (int)(44100D / Frequency); // size of buffer for the karplus-strong algorithm\n            float sum;// temp holding place\n            // below only happens once \n            // it make the karplus-strong algorithm buffer\n            if (n2 == 0) // flag\n            {\n                X = new float[N];\n                temp = new float[N + 1];\n                for (int i = 0; i &lt; N; i++)\n                {\n                    X[i] = (float)(rnd1.Next(-5, 5)) + (float)(0.5 * Math.Sin(i * Frequency * Math.PI / 44100D));// random number from -0.5 - 0.5\n                  //  X[i] = (float)(0.5 * Math.Sin(i * Frequency * Math.PI / 44100D));\n                }\n                n2 = 1; // flag  \n            }\n            // karplus-strong algorithm low pass filer\n            for (int r = 0; r &lt; sampleCount / 4; r++)\n            {\n                if (t &gt;= (N - 1))\n                {\n                    t = 0;\n                    n4 = 1;\n                }\n                if (n3 &gt;= Bufferlength &amp;&amp; t == 0)\n                {\n                    Dispose(); // stop playing\n                    return 0; // stop playing\n                }\n                if (n4 == 0)\n                {\n                    sum = X[t];\n                    temp[t] = sum;\n                }\n                else\n                {\n                    sum = (float)(X[t] + ((temp[t] + temp[t + 1])*0.5* 0.998));// low pass filter and decay factor of 0,996\n                    temp[t] = sum;\n\n                }\n                t++; // counter this is a  static  counter\n             \n                // send sum to the butter that so it can be played later\n                byte[] bytes = BitConverter.GetBytes(sum);\n                buffer[r * 4 + 0] = bytes[0];\n                buffer[r * 4 + 1] = bytes[1];\n                buffer[r * 4 + 2] = bytes[2];\n                buffer[r * 4 + 3] = bytes[3];\n                n3++;\n            }\n            return sampleCount;// end of Read sound start playing now\n        }\n\n    }\n}\n...\n   private void button13_Click(object sender, EventArgs e)\n        {\n            guitar = new Guitar();\n            guitar.Frequency = 130.8;\n            guitar.Bufferlength = 44100 * 2;\n            waveout = new WaveOut();\n            WaveChannel32 temp = new WaveChannel32(guitar);\n            temp.PadWithZeroes = false;\n            waveout.Init(guitar);\n            waveout.Play();\n        }\n...</code></pre>\n\n",
    "PostedDate": "2014-11-01T21:44:45.09-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1320958",
    "ThreadId": "571085",
    "Html": "best way to trouble-shoot this type of code is not to play the audio, but write a few seconds of audio to a WAV file, then look at the results in an audio editor like Audacity<br />\n",
    "PostedDate": "2014-11-11T08:53:43.083-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]