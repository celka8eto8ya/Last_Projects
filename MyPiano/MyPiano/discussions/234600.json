[
  {
    "Id": "521576",
    "ThreadId": "234600",
    "Html": "\r\n<p>Hello,</p>\r\n<p>I've just discovered NAudio, read some tutorials and now I got a few questions. I am developing a client-server chat for fun, which is working good, and I am now looking to extend it with VOIP.</p>\r\n<p>1. Network-side: Currently I am using a TCP connection between server and client for chat room and alike. Is it impossible to use TCP for voice chat? I basically want ventrilo/teamchat/skype latency, of course a little more that isnt noticable is fine. How\r\n much does TCP delay the voice chating?</p>\r\n<p>If TCP isn't usable, I guess UDP is the choice then? (I've read about RTC but hell I can't find any resources on it, does it really make that big difference?)</p>\r\n<p>&nbsp;</p>\r\n<p>2. I'm basically at the part where I got stuff like this;</p>\r\n<p>// Recording<br>\r\n&nbsp;&nbsp;&nbsp; private IWaveIn waveIn;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp; private WaveFileWriter writer;</p>\r\n<p>.............</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.waveIn = new WasapiCapture();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.writer = new WaveFileWriter(&quot;pimpz.wav&quot;, waveIn.WaveFormat);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.waveIn.DataAvailable &#43;= new EventHandler&lt;WaveInEventArgs&gt;(waveIn_DataAvailable);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.button_stopRec.Enabled = false;</p>\r\n<p>..............</p>\r\n<p>private void startRec_Click(object sender, EventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.waveIn.StartRecording();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.button_startRec.Enabled = false;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.button_stopRec.Enabled = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void stopRec_Click(object sender, EventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.waveIn.StopRecording();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.waveIn = null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.writer.Close();<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.writer = null;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.button_stopRec.Enabled = false;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.button_startRec.Enabled = true;<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; private void waveIn_DataAvailable(object sender, WaveInEventArgs e)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; this.writer.WriteData(e.Buffer, 0, e.BytesRecorded);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>&nbsp;</p>\r\n<p>.....so I'm just recording to a file. What is the best way to extend this so you send it over a network? In my program I send convert data into byte[] and send the byte[]. Does it work this, that you simply instead of write to a file, write to a byte[] buffer\r\n and then simply send it?</p>\r\n<p>&nbsp;</p>\r\n<p>3. Since stuff gets pretty big when recording (judging how quick the typical recorded files become) I've read about some encoding methods, NSpeex being one. In short, how does it work? As I imagine, I got this byte[] buffer from recording, do I pass it to\r\n a encoder before sending it over the network? And then decode on the other side? Are there any other steps involved?</p>\r\n<p>&nbsp;</p>\r\n<p>4. Is it possible to only record audio from the microphone and nothing else? For example, total silence from the user shouldn't generate any event to send data. I've read about mixers in some tutorial (which I guess handles this), but exactly where do they\r\n come in? For example, in my code above. Where would the mixer-class fit in?</p>\r\n<p>&nbsp;</p>\r\n<p>5.&nbsp; The waveIn.DataAvailable triggers an event to read data from the audiobuffer. Basically how often does this get triggered, how many bytes get read? For example if I want to store the stuff read into a byte[], I want to know the size of what can\r\n be recorded so I can adjust my buffer size accordingly.</p>\r\n<p>&nbsp;</p>\r\n<p>6. Whats the difference between Wasapicapture and WaveIn when recording?</p>\r\n<p>&nbsp;</p>\r\n<p>Cheers!</p>\r\n",
    "PostedDate": "2010-11-13T12:27:14.747-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "525438",
    "ThreadId": "234600",
    "Html": "\r\n<p>bump!</p>\r\n",
    "PostedDate": "2010-11-22T11:11:12.797-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "526442",
    "ThreadId": "234600",
    "Html": "\r\n<p>thats a lot of questions you have there</p>\r\n<p>1. getting low latency network streaming is hard. NAudio doesn't solve this problem for you - you would need to write your own code. You also need to specify low buffer sizes for WaveIn and WaveOut</p>\r\n<p>2. yes, although you might want to compress the data in some way before it goes over the network</p>\r\n<p>3. yes, you need an encoder on one side and a decoder on the other</p>\r\n<p>4. you would need to detect that the input from the microphone is silence. in reality, most microphones will pick up some background noise, so you would need a noise threshold</p>\r\n<p>5. how often it gets triggered completely depends on the buffer sizes you set up with WaveIn</p>\r\n<p>6. Wasapicapture will work on Vista/Win7 only and is less flexible about the sample rate you capture at. I suggest using WaveIn instead</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2010-11-24T07:06:03.227-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]