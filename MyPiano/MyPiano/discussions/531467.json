[
  {
    "Id": "1207182",
    "ThreadId": "531467",
    "Html": "Hi Guys,\r<br />\n<br />\nWe are using Naudio to enumerate through connected audio devices. We had this requirement to detect device connection and removal. I knew NAudio provided IMMNotificationClient interface. But there is very little documentation available.  Found we can make use to IMMNotificationClient only through an object of IMMDeviceEnumerator only to find   <strong>RegisterEndpointNotificationCallback &amp; UnRegisterEndpointNotificationCallback</strong> are not in implemented in the below mentioned class<br />\n<pre><code>public class MMDeviceEnumerator\n    {\n        private IMMDeviceEnumerator _realEnumerator;\n\n        /// &lt;summary&gt;\n        /// Enumerate Audio Endpoints\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;dataFlow&quot;&gt;Desired DataFlow&lt;/param&gt;\n        /// &lt;param name=&quot;dwStateMask&quot;&gt;State Mask&lt;/param&gt;\n        /// &lt;returns&gt;Device Collection&lt;/returns&gt;\n        public MMDeviceCollection EnumerateAudioEndPoints(DataFlow dataFlow, DeviceState dwStateMask)\n        {\n            IMMDeviceCollection result;\n            Marshal.ThrowExceptionForHR(_realEnumerator.EnumAudioEndpoints(dataFlow, dwStateMask, out result));\n            return new MMDeviceCollection(result);\n        }\n\n        /// &lt;summary&gt;\n        /// Get Default Endpoint\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;dataFlow&quot;&gt;Data Flow&lt;/param&gt;\n        /// &lt;param name=&quot;role&quot;&gt;Role&lt;/param&gt;\n        /// &lt;returns&gt;Device&lt;/returns&gt;\n        public MMDevice GetDefaultAudioEndpoint(DataFlow dataFlow, Role role)\n        {\n            IMMDevice _Device = null;\n            Marshal.ThrowExceptionForHR(((IMMDeviceEnumerator)_realEnumerator).GetDefaultAudioEndpoint(dataFlow, role, out _Device));\n            return new MMDevice(_Device);\n        }\n\n        /// &lt;summary&gt;\n        /// Get device by ID\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;ID&quot;&gt;Device ID&lt;/param&gt;\n        /// &lt;returns&gt;Device&lt;/returns&gt;\n        public MMDevice GetDevice(string ID)\n        {\n            IMMDevice _Device = null;\n            Marshal.ThrowExceptionForHR(((IMMDeviceEnumerator)_realEnumerator).GetDevice(ID, out _Device));\n            return new MMDevice(_Device);\n        }\n\n        /// &lt;summary&gt;\n        /// Creates a new MM Device Enumerator\n        /// &lt;/summary&gt;\n        public MMDeviceEnumerator()\n        {\n#if !NETFX_CORE\n            if (System.Environment.OSVersion.Version.Major &lt; 6)\n            {\n                throw new NotSupportedException(&quot;This functionality is only supported on Windows Vista or newer.&quot;);\n            }\n#endif\n            _realEnumerator = new MMDeviceEnumeratorComObject() as IMMDeviceEnumerator;\n        }\n    }</code></pre>\n\nI request you to add these implementations.\r<br />\n<br />\nI added these implementations for our project as below<br />\n<pre><code>/// &lt;summary&gt;\n       /// Registers a call back for Device Events\n       /// &lt;/summary&gt;\n        /// &lt;param name=&quot;client&quot;&gt;Object implementing IMMNotificationClient type casted as IMMNotificationClient interface&lt;/param&gt;\n       /// &lt;returns&gt;&lt;/returns&gt;\n        public int RegisterEndpointNotificationCallback([In] [MarshalAs(UnmanagedType.Interface)] IMMNotificationClient client)\n        {\n            return _realEnumerator.RegisterEndpointNotificationCallback(client);\n\n        }\n\n        /// &lt;summary&gt;\n        /// UnRegisters a call back for Device Events\n        /// &lt;/summary&gt;\n        /// &lt;param name=&quot;client&quot;&gt;Object implementing IMMNotificationClient type casted as IMMNotificationClient interface &lt;/param&gt;\n        /// &lt;returns&gt;&lt;/returns&gt;\n        public int UnRegisterEndpointNotificationCallback([In] [MarshalAs(UnmanagedType.Interface)] IMMNotificationClient client)\n        {\n            return _realEnumerator.UnregisterEndpointNotificationCallback(client);\n\n        }</code></pre>\n\nPlease correct me if there is an error in my code.\r<br />\n<br />\nThanks.<br />\n",
    "PostedDate": "2014-02-12T01:03:40.667-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]