[
  {
    "Id": "840361",
    "ThreadId": "356979",
    "Html": "\r\n<p>hello,</p>\r\n<p>I want to change the frequency of sin curse with a trackbar and play the sound with the frequnce in real time.</p>\r\n<p>here is my code for the change of the trackbar:</p>\r\n<p>private void tbFrequenz_Scroll(object sender, EventArgs e)<br>\r\n{<br>\r\nint freq = tbFrequenz.Value;<br>\r\nlblFrequenz.Text = &quot;Frequenz : &quot; &#43; freq.ToString();<br>\r\nWaveTone tone = new WaveTone(freq, 0.25f);<br>\r\nstream = new BlockAlignReductionStream(tone);<br>\r\n<br>\r\noutput = new DirectSoundOut();<br>\r\noutput.Stop();<br>\r\noutput.Init(stream);<br>\r\noutput.Play();<br>\r\n}</p>\r\n<p>thanks for the help</p>\r\n",
    "PostedDate": "2012-05-24T04:41:16.267-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "840827",
    "ThreadId": "356979",
    "Html": "<p>I don't know what your WaveTone class does, but I would suggest you switch to using a WaveTable approach to sine wave generation. Create a sine wave in an array, and then adjust the delta for indexing that table in real-time. This also allows you to introduce portamento to glide between frequencies smoothly.</p>",
    "PostedDate": "2012-05-25T02:11:48.133-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "841015",
    "ThreadId": "356979",
    "Html": "<p>Here is the code of the wavetone class:</p>\r\n<p>&nbsp;    public class WaveTone : WaveStream<br /> {<br /> private double frequency;<br /> private double amplitude;<br /> private double time;<br /><br /> public WaveTone(double f, double a)<br /> {<br /> this.time = 0;<br /> this.frequency = f;<br /> this.amplitude = a;<br /> }<br /><br /> public override long Position<br /> {<br /> get;<br /> set;<br /> }<br /><br /> public override long Length<br /> {<br /> get { return long.MaxValue; }<br /> }<br /><br /> public override WaveFormat WaveFormat<br /> {<br /> get { return new WaveFormat(44100, 16, 1); }<br /> }<br /><br /> public override int Read(byte[] buffer, int offset, int count)<br /> {<br /> int samples = count / 2;<br /> for (int i = 0; i &lt; samples; i++)<br /> {<br /> double sine = amplitude * Math.Sin(Math.PI * 2 * frequency * time);<br /> time += 1.0 / 44100;<br /> short truncated = (short)Math.Round(sine * (Math.Pow(2, 15) - 1));<br /> buffer[i * 2] = (byte)(truncated &amp; 0x00ff);<br /> buffer[i * 2 + 1] = (byte)((truncated &amp; 0xff00) &gt;&gt; 8);<br /> }<br /><br /> return count;<br /> }<br /> }</p>",
    "PostedDate": "2012-05-25T10:18:57.303-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "841211",
    "ThreadId": "356979",
    "Html": "<p>just create a property that changes the field frequency. Thats all.</p>",
    "PostedDate": "2012-05-26T09:13:42.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]