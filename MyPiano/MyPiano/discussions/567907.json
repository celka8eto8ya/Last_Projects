[
  {
    "Id": "1306483",
    "ThreadId": "567907",
    "Html": "Hi guys, I have been the last days trying to record both: Speakers and Mic.\r<br />\n<br />\nBut they have different formats, one records in 4 channels and the other in one. And also if i write both to the same file it sounds slow.\r<br />\n<br />\nIs there any way I can &quot;convert&quot; before write one, to have both the same Format?\r<br />\n<br />\nSorry for my english.<br />\n<pre><code>Public Class Form1\n\n    Private WithEvents waveOut As IWaveIn\n    Private WithEvents waveIn As IWaveIn\n    Private waveFormat As WaveFormat\n    'Private writerOut As WaveFileWriter\n    'Private writerIn As WaveFileWriter\n    Private writer As WaveFileWriter\n    Private outputFolder As String\n\n    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\n        'outputFolder = Path.Combine(Path.GetTempPath(), &quot;NAudioDemo&quot;)\n        outputFolder = Path.Combine(&quot;C:\\Users\\Usuario\\Desktop&quot;, &quot;NAudioDemo&quot;)\n        Directory.CreateDirectory(outputFolder)\n        Try\n            waveOut = New WasapiLoopbackCapture\n        Catch ex As Exception\n\n        End Try\n        Try\n            Dim deviceEnum As MMDeviceEnumerator = New MMDeviceEnumerator()\n            waveIn = New WasapiCapture(deviceEnum.GetDefaultAudioEndpoint(DataFlow.Capture, Role.Multimedia))\n        Catch ex As Exception\n\n        End Try\n    End Sub\n\n    Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click\n        If Not waveOut Is Nothing Then waveOut.StartRecording()\n        If Not waveIn Is Nothing Then waveIn.StartRecording()\n        writer = New WaveFileWriter(Path.Combine(outputFolder, &quot;MERGED.wav&quot;), waveOut.WaveFormat)\n    End Sub\n\n    Private Sub Button2_Click(sender As Object, e As EventArgs) Handles Button2.Click\n        If Not waveOut Is Nothing Then waveOut.StopRecording()\n        If Not waveIn Is Nothing Then waveIn.StopRecording()\n    End Sub\n\n    Private Sub waveOut_DataAvailable(sender As Object, e As WaveInEventArgs) Handles waveOut.DataAvailable\n        If Not writer Is Nothing And writer.CanWrite Then writer.Write(e.Buffer, 0, e.BytesRecorded)\n    End Sub\n\n    Private Sub waveIn_DataAvailable(sender As Object, e As WaveInEventArgs) Handles waveIn.DataAvailable\n        If Not writer Is Nothing And writer.CanWrite Then writer.Write(e.Buffer, 0, e.BytesRecorded)\n    End Sub\n\n    Private Sub waveOut_RecordingStopped(sender As Object, e As StoppedEventArgs) Handles waveOut.RecordingStopped\n        If Not waveOut Is Nothing Then waveOut.Dispose()\n        If Not writer Is Nothing Then writer.Close()\n    End Sub\n\n    Private Sub waveIn_RecordingStopped(sender As Object, e As StoppedEventArgs) Handles waveIn.RecordingStopped\n        If Not waveIn Is Nothing Then waveIn.Dispose()\n        If Not writer Is Nothing Then writer.Close()\n    End Sub\n\nEnd Class</code></pre>\n\n",
    "PostedDate": "2014-09-19T14:21:51.05-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]