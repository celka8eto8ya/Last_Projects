[
  {
    "Id": "949411",
    "ThreadId": "405124",
    "Html": "\r\n<p>hello,<br>\r\n(between two business trips) I created a class ResamplerTransform(based on dmo.resamplermediaobject)<br>\r\nI wonder if this basis is correct</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> From wmcodecsdp.h</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> Implements:</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> - IMediaObject </span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> - IMFTransform (Media foundation - we will leave this for now as there is loads of MF stuff)</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> - IPropertyStore </span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> - IWMResamplerProps </span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> Can resample PCM or IEEE</span>\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n\t[ComImport, Guid(<span style=\"color:#a31515\">&quot;f447b69e-1884-4a7e-8055-346f74d6edb3&quot;</span>)]\r\n\t<span style=\"color:blue\">class</span> CLSID_CResamplerMediaObject\r\n\t{\r\n\t\t<span style=\"color:green\">// SAME DMO ResamplerMediaObjects, but rename :-)</span>\r\n\t}\r\n\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n\t<span style=\"color:gray\">///</span><span style=\"color:green\"> Resampler (base Dmo.ResamplerMediaObjects)</span>\r\n\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> ResamplerTranform : IDisposable\r\n\t{\r\n\t\t<span style=\"color:green\">/*\r\n\t\t * \r\n\t\t * TODO implante channelConversionMatrix\r\n\t\t * TODO implante Quality properties ????\r\n\t\t * \r\n\t\t */</span>\r\n\r\n\t\tNAudio.Dmo.IWMResamplerProps resamplerPropsInterface;\r\n\t\tIMFTransform resamplerTransformInterface;\r\n\r\n\t\tCLSID_CResamplerMediaObject mediaComObject;\r\n\r\n\r\n\t\t<span style=\"color:blue\">public</span> ResamplerTranform()\r\n\t\t\t: <span style=\"color:blue\">this</span>(60)\r\n\t\t{\r\n\t\t}\r\n\r\n\t\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n\t\t<span style=\"color:gray\">///</span><span style=\"color:green\"> Creates a new Resampler based on the DMO Resampler</span>\r\n\t\t<span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n\t\t<span style=\"color:blue\">public</span> ResamplerTranform(<span style=\"color:blue\">int</span> outputQuality)\r\n\t\t{\r\n\t\t\t\r\n\t\t\tmediaComObject = <span style=\"color:blue\">new</span> CLSID_CResamplerMediaObject();\r\n\r\n\t\t\tresamplerPropsInterface = (NAudio.Dmo.IWMResamplerProps)mediaComObject;\r\n\r\n\t\t\t<span style=\"color:green\">// Quality</span>\r\n\t\t\tresamplerPropsInterface.SetHalfFilterLength(outputQuality);\r\n\r\n\t\t\t<span style=\"color:green\">// Channels</span>\r\n\t\t<span style=\"color:green\">//\tresamplerPropsInterface.SetUserChannelMtx(channelConversionMatrix);</span>\r\n\r\n\t\t\tresamplerTransformInterface = (IMFTransform)mediaComObject;\r\n\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">public</span> IMFTransform Transform\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> resamplerTransformInterface; }\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">public</span> NAudio.Dmo.IWMResamplerProps ResamplerProps\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">get</span> { <span style=\"color:blue\">return</span> resamplerPropsInterface; }\r\n\t\t}\r\n\r\n\t\t\r\n\r\n\t\t<span style=\"color:blue\">#region</span> IDisposable Members\r\n\r\n\t\t\r\n\t\t<span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> Dispose()\r\n\t\t{\r\n\t\t\t<span style=\"color:blue\">if</span> (resamplerPropsInterface != <span style=\"color:blue\">null</span>)\r\n\t\t\t{\r\n\t\t\t\tMarshal.ReleaseComObject(resamplerPropsInterface);\r\n\t\t\t\tresamplerPropsInterface = <span style=\"color:blue\">null</span>;\r\n\t\t\t}\r\n\t\t\t<span style=\"color:blue\">if</span> (resamplerTransformInterface != <span style=\"color:blue\">null</span>)\r\n\t\t\t{\r\n\t\t\t\tMarshal.ReleaseComObject(resamplerTransformInterface);\r\n\t\t\t\tresamplerTransformInterface = <span style=\"color:blue\">null</span>;\r\n\t\t\t}\r\n\t\t\t<span style=\"color:blue\">if</span> (mediaComObject != <span style=\"color:blue\">null</span>)\r\n\t\t\t{\r\n\t\t\t\tMarshal.ReleaseComObject(mediaComObject);\r\n\t\t\t\tmediaComObject = <span style=\"color:blue\">null</span>;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t<span style=\"color:blue\">#endregion</span>\r\n\t}\r\n</pre>\r\n</div>\r\n<p></p>\r\n",
    "PostedDate": "2012-11-30T01:43:23.61-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949426",
    "ThreadId": "405124",
    "Html": "\r\n<p>Yes, this is very similar to how we do it for DMO (although I didn't know there was quality property). The main challenge is learning how to use the IMediaTransform interface to efficiently pass byte arrays in and out, and also getting it to flush its buffers\r\n on a reposition.</p>\r\n<p>On a different note, I got encoding to AAC from a byte array working last night, and some of your interop definitions proved very helpful so thanks very much.</p>\r\n<p>Mark</p>\r\n",
    "PostedDate": "2012-11-30T02:19:59.513-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949434",
    "ThreadId": "405124",
    "Html": "\r\n<p>I still continued my example (http://code.google.com/p/bitspersampleconv2/wiki/HowToUseResamplerMFT) integrated Mediafoundationreader the moment and to learn.</p>\r\n<p>I saw your approach Encoder and use of buffers, I think it will be very useful for my procedure.</p>\r\n<p>&nbsp;</p>\r\n<p>Incidentally&nbsp;I found a book for you</p>\r\n<p>http://books.google.fr/books?id=w4EkIF_O7F8C&pg=PT507&lpg=PT507&dq=f447b69e-1884-4a7e-8055-346f74d6edb3&source=bl&ots=pOpwYyqMGZ&sig=RYVpx1puLD0S8X9cOCE6qx8dm0M&hl=fr&sa=X&ei=RIi4UJ6pK4WRhQeqrIDYDw&ved=0CFsQ6AEwBg<br>\r\n<br>\r\ncan be a gift idea for Christmas;-) ok this is not funny :-)</p>\r\n",
    "PostedDate": "2012-11-30T02:33:13.533-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949534",
    "ThreadId": "405124",
    "Html": "\r\n<p>So, I need your help.</p>\r\n<p>I created this procedure from a c &#43; &#43; example<br>\r\nI came across an error (HResult): The calledno longer accept additional input. (HR =&nbsp;&nbsp;0xC00D35B5 )<br>\r\nYou know of this error?</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre style=\"color:black\">IMFSourceReader retSourceReader = <span style=\"color:blue\">null</span>;</pre>\r\n<pre style=\"color:black\"><span style=\"color:blue\">int</span> hr = 0;\n\n<span style=\"color:green\">// ADD Constant</span>\nGuid  MF_MT_ALL_SAMPLES_INDEPENDENT = <span style=\"color:blue\">new</span> Guid(<span style=\"color:#a31515\">&quot;c9173739-5e56-461c-b713-46fb995cb95f&quot;</span>);\n\n<span style=\"color:green\">// see MFErreur</span>\n<span style=\"color:blue\">const</span> <span style=\"color:blue\">int</span> MF_E_TRANSFORM_NEED_MORE_INPUT = <span style=\"color:blue\">unchecked</span>((<span style=\"color:blue\">int</span>)0xC00D6D72);\n\n<span style=\"color:green\">// FOR TEST HERE :: Audio Format Output (todo properties)</span>\nWaveFormat wfOutput = <span style=\"color:blue\">new</span> WaveFormat(44100, 2);\n\t\t\t\n\t<span style=\"color:green\">/* 1 Initialization */</span>\n\t\t\t\nMediaFoundationInterop.MFStartup(MediaFoundationInterop.MF_VERSION);\n\n\t<span style=\"color:green\">/* 2. Create Resampler MFT Object\n\t\tCComPtr&lt;IUnknown&gt; spTransformUnk;\n\t\tIMFTransform *pTransform = NULL; //&lt; this is Resampler MFT\n\n\t\thr = CoCreateInstance(CLSID_CResamplerMediaObject, NULL, CLSCTX_INPROC_SERVER,\n\t\t\t\t\t\t\tIID_IUnknown, (void**)&amp;spTransformUnk);\n\n\t\t\t\n\t\t\t*/</span>\n\t\t\t\nCLSID_CResamplerMediaObject mediaComObject;\nmediaComObject = <span style=\"color:blue\">new</span> CLSID_CResamplerMediaObject();\n\n<span style=\"color:green\">//hr = spTransformUnk-&gt;QueryInterface(IID_PPV_ARGS(&amp;pTransform));</span>\nIMFTransform pTransform = <span style=\"color:blue\">null</span>;\npTransform = (IMFTransform)mediaComObject; <span style=\"color:green\">//rsampler.Transform;</span>\n\n\n<span style=\"color:green\"><span style=\"white-space:pre\">\t</span>/* 3. Specify input/output PCM format to Resampler MFT */</span>\n\nIMFMediaType mediaType = <span style=\"color:blue\">null</span>;\n\n<span style=\"color:green\">// Create MediaType</span>\nMediaFoundationInterop.MFCreateMediaType(<span style=\"color:blue\">out</span> mediaType);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetGUID(MF_MT_MAJOR_TYPE, MFMediaType_Audio));</span>\nmediaType.SetGUID(MediaFoundationAttributes.MF_MT_MAJOR_TYPE, NAudio.MediaFoundation.MediaTypes.MFMediaType_Audio);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetGUID(MF_MT_SUBTYPE,   (fmt.sampleFormat == MyBitFormatInt) ? MFAudioFormat_PCM : MFAudioFormat_Float);</span>\n<span style=\"color:blue\">if</span> (wfOutput.Encoding == WaveFormatEncoding.Pcm)\n\tmediaType.SetGUID(MediaFoundationAttributes.MF_MT_SUBTYPE, AudioSubtypes.MFAudioFormat_PCM);\n<span style=\"color:blue\">else</span>\n\tmediaType.SetGUID(MediaFoundationAttributes.MF_MT_SUBTYPE, AudioSubtypes.MFAudioFormat_Float);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_NUM_CHANNELS,         fmt.nChannels);</span>\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_NUM_CHANNELS, wfOutput.Channels);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_SAMPLES_PER_SECOND,   fmt.sampleRate);</span>\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_SAMPLES_PER_SECOND, wfOutput.SampleRate);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_BLOCK_ALIGNMENT,      fmt.FrameBytes());</span>\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_BLOCK_ALIGNMENT, wfOutput.BlockAlign);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_AVG_BYTES_PER_SECOND, fmt.BytesPerSec());</span>\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_AVG_BYTES_PER_SECOND, wfOutput.AverageBytesPerSecond);\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_BITS_PER_SAMPLE,      fmt.bits);</span>\n<span style=\"color:green\">//mediaType.SetUINT32(MediaFoundationInterop.MF_MT_AUDIO_BITS_PER_SAMPLE, wfOutput.BitsPerSample);</span>\n\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_ALL_SAMPLES_INDEPENDENT,    TRUE);</span>\nmediaType.SetUINT32(MF_MT_ALL_SAMPLES_INDEPENDENT, -1);\n<span style=\"color:green\"><br></span></pre>\r\n<pre><span style=\"color:green\">/* \n* if (0 != fmt.dwChannelMask) {\n* hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_CHANNEL_MASK, fmt.dwChannelMask);\n* }\n*/</span>\n\n<span style=\"color:blue\">if</span> (wfOutput.Encoding == WaveFormatEncoding.Pcm)\n{\n\t<span style=\"color:green\">/*\tif (fmt.bits != fmt.validBitsPerSample) {\n\t\thr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_VALID_BITS_PER_SAMPLE, fmt.validBitsPerSample);\n\t\t}\n\t */</span>\n\tmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_BITS_PER_SAMPLE, wfOutput.BitsPerSample);\n\n}\n\n<span style=\"color:green\">// pTransform-&gt;SetInputType(0, spOutputType, 0);</span>\npTransform.SetInputType(0, mediaType, 0);\n\n\t\t\n\n\t<span style=\"color:green\">/* 4. Send stream start message to Resampler MFT */</span>\n\n<span style=\"color:green\">//\thr = pTransform-&gt;ProcessMessage(MFT_MESSAGE_COMMAND_FLUSH, NULL);</span>\npTransform.ProcessMessage(MFT_MESSAGE_TYPE.MFT_MESSAGE_COMMAND_FLUSH, IntPtr.Zero);\n\n<span style=\"color:green\">//\thr = pTransform-&gt;ProcessMessage(MFT_MESSAGE_NOTIFY_BEGIN_STREAMING, NULL);</span>\n<span style=\"color:green\">// Erreur ????????????</span>\n<span style=\"color:green\">//pTransform.ProcessMessage(MFT_MESSAGE_TYPE.MFT_MESSAGE_NOTIFY_BEGIN_STREAMING, IntPtr.Zero);</span>\n\n<span style=\"color:green\">//\thr = pTransform-&gt;ProcessMessage(MFT_MESSAGE_NOTIFY_START_OF_STREAM, NULL);</span>\npTransform.ProcessMessage(MFT_MESSAGE_TYPE.MFT_MESSAGE_NOTIFY_START_OF_STREAM, IntPtr.Zero);\n\n\t<span style=\"color:green\">/* 5. Create IMFSample from uncompressed PCM input data */</span>\n\n<span style=\"color:green\">/*\nBYTE  *data = ...; //&lt; input PCM data \nDWORD bytes = ...; //&lt; bytes need to be smaller than approx. 1Mbytes\n\nIMFMediaBuffer *pBuffer = NULL;\nhr = MFCreateMemoryBuffer(bytes , &amp;pBuffer);\n*/</span>\n\t\t\t\n<span style=\"color:green\">// IMFMediaBuffer *pBuffer = NULL;</span>\nIMFMediaBuffer pBuffer = <span style=\"color:blue\">null</span>;\n\n<span style=\"color:green\">// hr = MFCreateMemoryBuffer(bytes , &amp;pBuffer); </span>\nMFCreateMemoryBuffer(wfOutput.AverageBytesPerSecond*4, <span style=\"color:blue\">out</span> pBuffer);\n\n<span style=\"color:green\">// BYTE  *pByteBufferTo = NULL;</span>\n<span style=\"color:green\">// hr = pBuffer-&gt;Lock(&amp;pByteBufferTo, NULL, NULL);</span>\nIntPtr pByteBufferTo;\n<span style=\"color:blue\">int</span> maxLength;\n<span style=\"color:blue\">int</span> currentLength;\npBuffer.Lock(<span style=\"color:blue\">out</span> pByteBufferTo, <span style=\"color:blue\">out</span> maxLength, <span style=\"color:blue\">out</span> currentLength);\n\n<span style=\"color:green\">//memcpy(pByteBufferTo, data, bytes);</span>\n<span style=\"color:blue\">byte</span>[] data = <span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[maxLength];\n\n\nMarshal.Copy(pByteBufferTo,data,0,  maxLength);\n\n<span style=\"color:green\">//\tpBuffer-&gt;Unlock();</span>\npBuffer.Unlock();\n\n<span style=\"color:green\">// pByteBufferTo = NULL;</span>\npByteBufferTo = IntPtr.Zero;\n\t\t\t\t\t\t\n<span style=\"color:green\">//hr = pBuffer-&gt;SetCurrentLength(bytes);</span>\npBuffer.SetCurrentLength(maxLength);\t\t\t\t\t\n\n<span style=\"color:green\">//IMFSample *pSample = NULL;</span>\nIMFSample pSample = <span style=\"color:blue\">null</span>;\n\n<span style=\"color:green\">//hr = MFCreateSample(&amp;pSample);</span>\nMediaFoundationInterop.MFCreateSample(<span style=\"color:blue\">out</span> pSample);\n\t\t\t\n<span style=\"color:green\">//hr = pSample-&gt;AddBuffer(pBuffer);</span>\npSample.AddBuffer(pBuffer);\n\n<span style=\"color:green\">// SafeRelease(&amp;pBuffer);</span>\nMarshal.ReleaseComObject(pBuffer);\n\t\t\t\n\n\t<span style=\"color:green\">/* 6. Set input data to Resampler MFT */</span>\n\n<span style=\"color:green\">// hr = pTransform-&gt;ProcessInput(0, pSample, 0);</span>\n\t</pre>\r\n<pre>hr = pTransform.ProcessInput(0, pSample, 0);     // &lt;- ERREUR !!!!!\nMFError.ThrowExceptionForHR(hr);\n\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-11-30T06:46:58.267-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949541",
    "ThreadId": "405124",
    "Html": "you probably need to send the stream start message. Also, don't realease the buffer until you've processed the sample.<br>\r\n<div><br>\r\n<br>\r\n<div>On 30 November 2012 14:47, ManuN <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\" target=\"_blank\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<p>From: ManuN</p>\r\n<div>\r\n<p>So, I need your help.</p>\r\n<p>I created this procedure from a c &#43; &#43; example<br>\r\nI came across an error (HResult): The called 0xC00D35B5 no longer accept additional input.<br>\r\nYou know of this error?</p>\r\n<p></p>\r\n<div style=\"\">\r\n<pre style=\"\">IMFSourceReader retSourceReader = <span style=\"color:blue\">null</span>;</pre>\r\n<pre style=\"\"><span style=\"color:blue\">int</span> hr = 0;\r\n\r\n<span style=\"color:green\">// ADD Constant</span>\r\nGuid  MF_MT_ALL_SAMPLES_INDEPENDENT = <span style=\"color:blue\">new</span> Guid(<span style=\"color:#a31515\">&quot;c9173739-5e56-461c-b713-46fb995cb95f&quot;</span>);\r\n\r\n<span style=\"color:green\">// see MFErreur</span>\r\n<span style=\"color:blue\">const</span> <span style=\"color:blue\">int</span> MF_E_TRANSFORM_NEED_MORE_INPUT = <span style=\"color:blue\">unchecked</span>((<span style=\"color:blue\">int</span>)0xC00D6D72);\r\n\r\n<span style=\"color:green\">// FOR TEST HERE :: Audio Format Output (todo properties)</span>\r\nWaveFormat wfOutput = <span style=\"color:blue\">new</span> WaveFormat(44100, 2);\r\n\t\t\t\r\n\t<span style=\"color:green\">/* 1 Initialization */</span>\r\n\t\t\t\r\nMediaFoundationInterop.MFStartup(MediaFoundationInterop.MF_VERSION);\r\n\r\n\t<span style=\"color:green\">/* 2. Create Resampler MFT Object\r\n\t\tCComPtr&lt;IUnknown&gt; spTransformUnk;\r\n\t\tIMFTransform *pTransform = NULL; //&lt; this is Resampler MFT\r\n\r\n\t\thr = CoCreateInstance(CLSID_CResamplerMediaObject, NULL, CLSCTX_INPROC_SERVER,\r\n\t\t\t\t\t\t\tIID_IUnknown, (void**)&spTransformUnk);\r\n\r\n\t\t\t\r\n\t\t\t*/</span>\r\n\t\t\t\r\nCLSID_CResamplerMediaObject mediaComObject;\r\nmediaComObject = <span style=\"color:blue\">new</span> CLSID_CResamplerMediaObject();\r\n\r\n<span style=\"color:green\">//hr = spTransformUnk-&gt;QueryInterface(IID_PPV_ARGS(&pTransform));</span>\r\nIMFTransform pTransform = <span style=\"color:blue\">null</span>;\r\npTransform = (IMFTransform)mediaComObject; <span style=\"color:green\">//rsampler.Transform;</span>\r\n\r\n\r\n<span style=\"color:green\"><span style=\"white-space:pre-wrap\">\t</span>/* 3. Specify input/output PCM format to Resampler MFT */</span>\r\n\r\nIMFMediaType mediaType = <span style=\"color:blue\">null</span>;\r\n\r\n<span style=\"color:green\">// Create MediaType</span>\r\nMediaFoundationInterop.MFCreateMediaType(<span style=\"color:blue\">out</span> mediaType);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetGUID(MF_MT_MAJOR_TYPE, MFMediaType_Audio));</span>\r\nmediaType.SetGUID(MediaFoundationAttributes.MF_MT_MAJOR_TYPE, NAudio.MediaFoundation.MediaTypes.MFMediaType_Audio);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetGUID(MF_MT_SUBTYPE,   (fmt.sampleFormat == MyBitFormatInt) ? MFAudioFormat_PCM : MFAudioFormat_Float);</span>\r\n<span style=\"color:blue\">if</span> (wfOutput.Encoding == WaveFormatEncoding.Pcm)\r\n\tmediaType.SetGUID(MediaFoundationAttributes.MF_MT_SUBTYPE, AudioSubtypes.MFAudioFormat_PCM);\r\n<span style=\"color:blue\">else</span>\r\n\tmediaType.SetGUID(MediaFoundationAttributes.MF_MT_SUBTYPE, AudioSubtypes.MFAudioFormat_Float);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_NUM_CHANNELS,         fmt.nChannels);</span>\r\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_NUM_CHANNELS, wfOutput.Channels);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_SAMPLES_PER_SECOND,   fmt.sampleRate);</span>\r\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_SAMPLES_PER_SECOND, wfOutput.SampleRate);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_BLOCK_ALIGNMENT,      fmt.FrameBytes());</span>\r\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_BLOCK_ALIGNMENT, wfOutput.BlockAlign);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_AVG_BYTES_PER_SECOND, fmt.BytesPerSec());</span>\r\nmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_AVG_BYTES_PER_SECOND, wfOutput.AverageBytesPerSecond);\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_BITS_PER_SAMPLE,      fmt.bits);</span>\r\n<span style=\"color:green\">//mediaType.SetUINT32(MediaFoundationInterop.MF_MT_AUDIO_BITS_PER_SAMPLE, wfOutput.BitsPerSample);</span>\r\n\r\n<span style=\"color:green\">// hr = pMediaType-&gt;SetUINT32(MF_MT_ALL_SAMPLES_INDEPENDENT,    TRUE);</span>\r\nmediaType.SetUINT32(MF_MT_ALL_SAMPLES_INDEPENDENT, -1);\r\n<span style=\"color:green\"><br></span></pre>\r\n<pre><span style=\"color:green\">/* \r\n* if (0 != fmt.dwChannelMask) {\r\n* hr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_CHANNEL_MASK, fmt.dwChannelMask);\r\n* }\r\n*/</span>\r\n\r\n<span style=\"color:blue\">if</span> (wfOutput.Encoding == WaveFormatEncoding.Pcm)\r\n{\r\n\t<span style=\"color:green\">/*\tif (fmt.bits != fmt.validBitsPerSample) {\r\n\t\thr = pMediaType-&gt;SetUINT32(MF_MT_AUDIO_VALID_BITS_PER_SAMPLE, fmt.validBitsPerSample);\r\n\t\t}\r\n\t */</span>\r\n\tmediaType.SetUINT32(MediaFoundationAttributes.MF_MT_AUDIO_BITS_PER_SAMPLE, wfOutput.BitsPerSample);\r\n\r\n}\r\n\r\n<span style=\"color:green\">// pTransform-&gt;SetInputType(0, spOutputType, 0);</span>\r\npTransform.SetInputType(0, mediaType, 0);\r\n\r\n\t\t\r\n\r\n\t<span style=\"color:green\">/* 4. Send stream start message to Resampler MFT */</span>\r\n\r\n<span style=\"color:green\">//\thr = pTransform-&gt;ProcessMessage(MFT_MESSAGE_COMMAND_FLUSH, NULL);</span>\r\npTransform.ProcessMessage(MFT_MESSAGE_TYPE.MFT_MESSAGE_COMMAND_FLUSH, IntPtr.Zero);\r\n\r\n<span style=\"color:green\">//\thr = pTransform-&gt;ProcessMessage(MFT_MESSAGE_NOTIFY_BEGIN_STREAMING, NULL);</span>\r\n<span style=\"color:green\">// Erreur ????????????</span>\r\n<span style=\"color:green\">//pTransform.ProcessMessage(MFT_MESSAGE_TYPE.MFT_MESSAGE_NOTIFY_BEGIN_STREAMING, IntPtr.Zero);</span>\r\n\r\n<span style=\"color:green\">//\thr = pTransform-&gt;ProcessMessage(MFT_MESSAGE_NOTIFY_START_OF_STREAM, NULL);</span>\r\npTransform.ProcessMessage(MFT_MESSAGE_TYPE.MFT_MESSAGE_NOTIFY_START_OF_STREAM, IntPtr.Zero);\r\n\r\n\t<span style=\"color:green\">/* 5. Create IMFSample from uncompressed PCM input data */</span>\r\n\r\n<span style=\"color:green\">/*\r\nBYTE  *data = ...; //&lt; input PCM data \r\nDWORD bytes = ...; //&lt; bytes need to be smaller than approx. 1Mbytes\r\n\r\nIMFMediaBuffer *pBuffer = NULL;\r\nhr = MFCreateMemoryBuffer(bytes , &pBuffer);\r\n*/</span>\r\n\t\t\t\r\n<span style=\"color:green\">// IMFMediaBuffer *pBuffer = NULL;</span>\r\nIMFMediaBuffer pBuffer = <span style=\"color:blue\">null</span>;\r\n\r\n<span style=\"color:green\">// hr = MFCreateMemoryBuffer(bytes , &pBuffer); </span>\r\nMFCreateMemoryBuffer(wfOutput.AverageBytesPerSecond*4, <span style=\"color:blue\">out</span> pBuffer);\r\n\r\n<span style=\"color:green\">// BYTE  *pByteBufferTo = NULL;</span>\r\n<span style=\"color:green\">// hr = pBuffer-&gt;Lock(&pByteBufferTo, NULL, NULL);</span>\r\nIntPtr pByteBufferTo;\r\n<span style=\"color:blue\">int</span> maxLength;\r\n<span style=\"color:blue\">int</span> currentLength;\r\npBuffer.Lock(<span style=\"color:blue\">out</span> pByteBufferTo, <span style=\"color:blue\">out</span> maxLength, <span style=\"color:blue\">out</span> currentLength);\r\n\r\n<span style=\"color:green\">//memcpy(pByteBufferTo, data, bytes);</span>\r\n<span style=\"color:blue\">byte</span>[] data = <span style=\"color:blue\">new</span> <span style=\"color:blue\">byte</span>[maxLength];\r\n\r\n\r\nMarshal.Copy(pByteBufferTo,data,0,  maxLength);\r\n\r\n<span style=\"color:green\">//\tpBuffer-&gt;Unlock();</span>\r\npBuffer.Unlock();\r\n\r\n<span style=\"color:green\">// pByteBufferTo = NULL;</span>\r\npByteBufferTo = IntPtr.Zero;\r\n\t\t\t\t\t\t\r\n<span style=\"color:green\">//hr = pBuffer-&gt;SetCurrentLength(bytes);</span>\r\npBuffer.SetCurrentLength(maxLength);\t\t\t\t\t\r\n\r\n<span style=\"color:green\">//IMFSample *pSample = NULL;</span>\r\nIMFSample pSample = <span style=\"color:blue\">null</span>;\r\n\r\n<span style=\"color:green\">//hr = MFCreateSample(&pSample);</span>\r\nMediaFoundationInterop.MFCreateSample(<span style=\"color:blue\">out</span> pSample);\r\n\t\t\t\r\n<span style=\"color:green\">//hr = pSample-&gt;AddBuffer(pBuffer);</span>\r\npSample.AddBuffer(pBuffer);\r\n\r\n<span style=\"color:green\">// SafeRelease(&pBuffer);</span>\r\nMarshal.ReleaseComObject(pBuffer);\r\n\t\t\t\r\n\r\n\t<span style=\"color:green\">/* 6. Set input data to Resampler MFT */</span>\r\n\r\n<span style=\"color:green\">// hr = pTransform-&gt;ProcessInput(0, pSample, 0);</span>\r\n\t</pre>\r\n<pre>hr = pTransform.ProcessInput(0, pSample, 0);     // &lt;- ERREUR !!!!!\r\nMFError.ThrowExceptionForHR(hr);\r\n\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p></p>\r\n</div>\r\n<div>\r\n<div>\r\n<p>Read the <a href=\"http://naudio.codeplex.com/discussions/405124#post949534\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:naudio@discussions.codeplex.com?subject=[naudio:405124]\" target=\"_blank\">naudio@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:naudio@discussions.codeplex.com\" target=\"_blank\">\r\nnaudio@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://naudio.codeplex.com/subscriptions/thread/project/edit\" target=\"_blank\">\r\nunsubscribe or change your settings</a> on codePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at\r\n<a href=\"http://codeplex.com\" target=\"_blank\">codeplex.com</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n",
    "PostedDate": "2012-11-30T07:00:29.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949542",
    "ThreadId": "405124",
    "Html": "\r\n<p>&nbsp;</p>\r\n<p>I deleted the Marshal.ReleaseComObject (pBuffer) but it is always the same</p>\r\n",
    "PostedDate": "2012-11-30T07:03:09.023-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949549",
    "ThreadId": "405124",
    "Html": "\r\n<p>the message MFT_MESSAGE_START_OF_STREAM is&nbsp;already performing. (see Part 4)</p>\r\n",
    "PostedDate": "2012-11-30T07:10:21.267-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949554",
    "ThreadId": "405124",
    "Html": "I think you need to work out why it isn't accepting the <span>MFT_MESSAGE_NOTIFY_BEGIN_STREAMING message<br>\r\n<br>\r\n</span>\r\n<div><br>\r\n<br>\r\n<div>On 30 November 2012 15:10, ManuN <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\" target=\"_blank\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>\r\n<p>From: ManuN</p>\r\n<div>\r\n<p>the message MFT_MESSAGE_START_OF_STREAM is already performing. (see Part 4)</p>\r\n</div>\r\n<div>\r\n<div>\r\n<p>Read the <a href=\"http://naudio.codeplex.com/discussions/405124#post949549\" target=\"_blank\">\r\nfull discussion online</a>.</p>\r\n<p>To add a post to this discussion, reply to this email (<a href=\"mailto:naudio@discussions.codeplex.com?subject=[naudio:405124]\" target=\"_blank\">naudio@discussions.codeplex.com</a>)</p>\r\n<p>To start a new discussion for this project, email <a href=\"mailto:naudio@discussions.codeplex.com\" target=\"_blank\">\r\nnaudio@discussions.codeplex.com</a></p>\r\n<p>You are receiving this email because you subscribed to this discussion on CodePlex. You can\r\n<a href=\"https://naudio.codeplex.com/subscriptions/thread/project/edit\" target=\"_blank\">\r\nunsubscribe or change your settings</a> on codePlex.com.</p>\r\n<p>Please note: Images and attachments will be removed from emails. Any posts to this discussion will also be available online at\r\n<a href=\"http://codeplex.com\" target=\"_blank\">codeplex.com</a></p>\r\n</div>\r\n</div>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n",
    "PostedDate": "2012-11-30T07:24:09.507-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949559",
    "ThreadId": "405124",
    "Html": "\r\n<p><span>MFT_MESSAGE_NOTIFY_BEGIN_STREAMING</span></p>\r\n<p>Error :: A valid type was not specified for this data stream or stream on which it depends</p>\r\n",
    "PostedDate": "2012-11-30T07:28:53.6-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949562",
    "ThreadId": "405124",
    "Html": "\r\n<div>probably it doesn't like your input type. I've been doing WMA encoding today and it is very fussy about the exact input type as well.<br>\r\n<br>\r\n<div>On 30 November 2012 15:28, ManuN <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\" target=\"_blank\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<p>m: ManuN</p>\r\n<div>\r\n<p><span>MFT_MESSAGE_NOTIFY_BEGIN_STREAMING</span></p>\r\n<p>Error :: A valid type was not specified for this data stream or stream on which it depends</p>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n",
    "PostedDate": "2012-11-30T07:33:29.387-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949563",
    "ThreadId": "405124",
    "Html": "\r\n<h4><strong>I probably need to follow this procedure</strong></h4>\r\n<h4>Get Stream Identifiers</h4>\r\n<p>An MFT has one or more&nbsp;<em>streams</em>. Input streams receive input data, and output streams generate output data. Streams are not represented as distinct objects. Instead, various MFT methods take stream identifiers as parameters.</p>\r\n<p>Some MFTs allow the client to add or remove input streams. During streaming, an MFT can add or remove output streams. (The client cannot add or remove output streams.)</p>\r\n<ol>\r\n<li>(Optional.) Call&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms697040(v=vs.85).aspx\"><strong>IMFTransform::GetStreamLimits</strong></a>&nbsp;to get the minimum and maximum number of streams that the MFT can support. If the minimum and maximum\r\n are the same, the MFT has a fixed number of streams. </li><li><span style=\"color:#ff0000\">Call&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms697018(v=vs.85).aspx\"><strong>IMFTransform::GetStreamCount</strong></a>&nbsp;to get the initial number of streams.</span>\r\n</li><li><span style=\"color:#ff0000\">Call&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms693988(v=vs.85).aspx\"><strong>IMFTransform::GetStreamIDs</strong></a>&nbsp;to get the stream identifiers. If this method returns E_NOTIMPL, it means the MFT has\r\n a fixed number of streams, and the stream identifiers are consecutive starting from zero.</span>\r\n</li><li>(Optional.) If the MFT does not have a fixed number of streams, call&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms696211(v=vs.85).aspx\"><strong>IMFTransform::AddInputStreams</strong></a>&nbsp;to add more input streams, or&nbsp;<a href=\"http://msdn.microsoft.com/en-us/library/windows/desktop/ms703159(v=vs.85).aspx\"><strong>IMFTransform::DeleteInputStream</strong></a>&nbsp;to\r\n remove input streams. (You cannot add or remove output streams.) </li></ol>\r\n<p>&nbsp;</p>\r\n<p>reference :&nbsp;http://msdn.microsoft.com/en-us/library/windows/desktop/aa965264(v=vs.85).aspx</p>\r\n",
    "PostedDate": "2012-11-30T07:34:11.98-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949574",
    "ThreadId": "405124",
    "Html": "\r\n<p>yes obviously</p>\r\n<p>After searching the label of the error</p>\r\n<pre>hr = pTransform.ProcessInput(0, pSample, 0);     // &lt;- ERREUR == MF_E_NOTACCEPTING</pre>\r\n<pre><br></pre>\r\n<pre>Not accepting, not accepting , pffffff :-(</pre>\r\n",
    "PostedDate": "2012-11-30T07:56:51.707-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949831",
    "ThreadId": "405124",
    "Html": "\r\n<p>Hello,I continue my investigations.</p>\r\n<p>But obviously there are some errors in interface Transform</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre> <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Gets the buffer requirements and other information for an input stream on this Media Foundation transform (MFT). </span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;remarks&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> virtual HRESULT STDMETHODCALLTYPE GetInputStreamInfo( </span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\">     DWORD dwInputStreamID,</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\">     /* [out] */ __RPC__out MFT_INPUT_STREAM_INFO *pStreamInfo) = 0;</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/remarks&gt;</span>\n        <span style=\"color:blue\">void</span> GetInputStreamInfo([In] <span style=\"color:blue\">int</span> dwInputStreamID, [In, Out] MFT_INPUT_STREAM_INFO pStreamInfo);\n\nModify to \n<span style=\"color:blue\">void</span> GetInputStreamInfo([In] <span style=\"color:blue\">int</span> dwInputStreamID, <span style=\"color:blue\">out</span> MFT_INPUT_STREAM_INFO pStreamInfo);\n\n</pre>\r\n<pre>Same erreur in GetOutputStreamInfo</pre>\r\n<pre><br></pre>\r\n<pre>Exact ?????</pre>\r\n</div>\r\n",
    "PostedDate": "2012-12-01T00:03:06.783-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949833",
    "ThreadId": "405124",
    "Html": "\r\n<div>that is a strange one. The MSDN documentation says [out] but it is only a single level of indirection. I would expect a **ppStreamInfo for a genuine out parameter, which is why I made it [In,Out] (I assumed the caller creates the struct and it is filled\r\n in by the user). I'll see what is in the header file<br>\r\n<br>\r\n<div>On 1 December 2012 08:03, ManuN <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\" target=\"_blank\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nGetInputStreamInfo</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n",
    "PostedDate": "2012-12-01T00:09:29.383-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949837",
    "ThreadId": "405124",
    "Html": "From what I can see, the user is supposed to allocate the memory. To use the out keyword, I would need to turn MFT_INPUT_STREAM_INFO into a struct instead of a class (I use class normally as it allows us to pass nulls if needed). Have you tried it with\r\n your alternative method signature?<br>\r\n<div><br>\r\n<br>\r\n<div>On 1 December 2012 08:09, Mark Heath <span dir=\"ltr\">&lt;<a href=\"mailto:mark.heath@gmail.com\" target=\"_blank\">mark.heath@gmail.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\n<div>that is a strange one. The MSDN documentation says [out] but it is only a single level of indirection. I would expect a **ppStreamInfo for a genuine out parameter, which is why I made it [In,Out] (I assumed the caller creates the struct and it is filled\r\n in by the user). I'll see what is in the header file<br>\r\n<br>\r\n<div>On 1 December 2012 08:03, ManuN <span dir=\"ltr\">&lt;<a href=\"mailto:notifications@codeplex.com\" target=\"_blank\">notifications@codeplex.com</a>&gt;</span> wrote:<br>\r\n<blockquote style=\"margin:0 0 0 .8ex; border-left:1px #ccc solid; padding-left:1ex\">\r\nGetInputStreamInfo</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n</blockquote>\r\n</div>\r\n<br>\r\n</div>\r\n",
    "PostedDate": "2012-12-01T00:17:39.417-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949840",
    "ThreadId": "405124",
    "Html": "\r\n<p>Not yet, but I have a piece of code that retrieves the StreamInfo, so I think rather in Out (I checked also in my own library)</p>\r\n<p>But I must get to that level of code (Run) to check.</p>\r\n",
    "PostedDate": "2012-12-01T00:27:22.623-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949841",
    "ThreadId": "405124",
    "Html": "\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:green\">//\tHRG(pTransform-&gt;GetOutputStreamInfo(0, &StreamInfo));</span>\r\n\t\t\tpTransform.GetInputStreamInfo(0,<span style=\"color:blue\">out</span> StreamInfo);\r\n\r\n\t\t\t<span style=\"color:green\">//\tif (cbOutBytes &lt; StreamInfo.cbSize) {</span>\r\n\t\t\t<span style=\"color:green\">//\t\tcbOutBytes = StreamInfo.cbSize;</span>\r\n\t\t\t<span style=\"color:green\">//\t}</span>\r\n\t\t\t<span style=\"color:blue\">if</span> (cbOutBytes &lt; StreamInfo.cbSize)\r\n\t\t\t{\r\n\t\t\t\tcbOutBytes = StreamInfo.cbSize;\r\n\t\t\t}\r\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-12-01T00:27:47.217-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949842",
    "ThreadId": "405124",
    "Html": "\r\n<p>I watched a doc &nbsp; http://msdn.microsoft.com/en-us/library/windows/desktop/ms693880 (v = VS.85). aspx<br>\r\nAnd apparently it is out<br>\r\nTo be continued ....</p>\r\n",
    "PostedDate": "2012-12-01T00:29:53.597-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949867",
    "ThreadId": "405124",
    "Html": "\r\n<p>Change class MFT_INPUT_STREAM_INFO &nbsp;to struct</p>\r\n<p>Ok</p>\r\n",
    "PostedDate": "2012-12-01T02:02:43.053-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949870",
    "ThreadId": "405124",
    "Html": "\r\n<p>Well I overcome my initial problem of this discussion. :-)</p>\r\n<p>Obviously must be in this order ::</p>\r\n<p><br>\r\n1) Create MediaType</p>\r\n<p>2) SetInputType, SetOutputType</p>\r\n<p>3) SampleIn -&gt; MediaBuffer &#43; Edit&nbsp;SetSampleDuration &amp;&nbsp;SetSampleTime</p>\r\n<p>4) ProcessMessage</p>\r\n<p>5) ProcessInput</p>\r\n<p>6) ProcessOuput</p>\r\n<p>7) Read SampleOut</p>\r\n<p><br>\r\nI have a routine that works (well there is no error)I need to check a few points.</p>\r\n",
    "PostedDate": "2012-12-01T02:17:26.413-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "949891",
    "ThreadId": "405124",
    "Html": "\r\n<p>OuffffffI managed to make a routine that works IMFTransform</p>\r\n<p>Remains to the integrated</p>\r\n<p>(For the moment the routine generates a 1KHz sine 1Second and save to a file Resampler)</p>\r\n",
    "PostedDate": "2012-12-01T03:46:48.88-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]