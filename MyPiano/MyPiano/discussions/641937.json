[
  {
    "Id": "1436006",
    "ThreadId": "641937",
    "Html": "Hi, I'm having a little trouble understanding the setup for this documentation. I was expecting an MSDN type of thing where each class has it's own uses explained and then demonstrated. Instead it seems like a bunch of links to different end products. I.e. here's how you play a WAV file. Or links to pluralsight... Which is very useful, but doesn't help me understand what everything does. Searching through the documentation seems to further hint at this kind of setup. I searched for: NAudio.Wave.WaveFileReader and got 0 results. \r<br />\n<br />\nPlease tell me I'm wrong about this...<br />\n",
    "PostedDate": "2015-07-26T09:19:15.44-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1436082",
    "ThreadId": "641937",
    "Html": "hi Forgility,\r<br />\n<br />\nUnfortunately, there is no MSDN style documentation for NAudio. There are around 70 articles, plus the demo projects which show how to use most of the features of NAudio. And the Pluralsight course will be helpful if you are a subscriber. But yes I agree that NAudio could do with more comprehensive documentation than we currently have. It is something we are always looking to improve and I welcome any contributions to the project in this area. <br />\n",
    "PostedDate": "2015-07-27T02:53:28.607-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1436316",
    "ThreadId": "641937",
    "Html": "Is there any way at all for me to find out what individual classes/methods do? I just don't understand... with no proper documentation how do you expect people to pick this up with any kind of ease? For example, I'm currently looking into what WaveInCapabilities does - all I'm getting is that it's a struct. And after googling for a bit I can maybe make the guess that it gives you device names etc. Names of classes can often be deceiving, but it's pretty much the only quick and easy way I have to read the code. I mean what use is the sample code you've given us if we have to make assumptions about what its components do based on context, instead of having a dictionary definition on-hand. I really want to use the library, but it's unnecessarily hard at the moment. Still gonna fucking try though... I am grateful that you've provided this tool, it seems super powerful and I'm sure it's really comprehensive once you get used to it. I just think for people who are just getting acquainted with audio programming - it's needlessly difficult.  <br />\n",
    "PostedDate": "2015-07-28T08:48:23.933-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1436320",
    "ThreadId": "641937",
    "Html": "NAudio contains managed wrappers for hundreds of methods, interfaces and structures from the Windows SDK. So the documentation for things like <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/dd743839(v=vs.85).aspx\" rel=\"nofollow\">WaveInCapabilities is on MSDN</a>. It wouldn't make sense for me to copy the MSDN documentation for the entirety of WinMM, WASAPI, ACM, MediaFoundation, DMO, DirectSound, WindowsMedia, MIDI etc and even if I wanted to, it would take years to do. \r<br />\n<br />\nNAudio does attempt to hide some of the complexities of the Windows API methods, but unfortunately it has not all been abstracted away, so there are concepts from the various Windows APIs that you need to understand in order to work effectively. None of this is to deny that the NAudio documentation could be a lot better than it currently is. But you need to understand there are no full time developers on NAudio. It's all volunteer effort in spare time, and a most of the contributions I have received over the years have come with no documentation whatsoever. <br />\n",
    "PostedDate": "2015-07-28T09:01:20.43-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]