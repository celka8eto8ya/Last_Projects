[
  {
    "Id": "1340315",
    "ThreadId": "577268",
    "Html": "I have been able to capture the data from the mic and send it over to the network.I captured the data at the event :\r<br />\nvoid waveIn_DataAvailable(object sender, WaveInEventArgs e)<br />\n<pre><code>    {\n       IPEndPoint sending_end_point = new IPEndPoint(send_to_address, 12345);\n        try\n        {\n            sending_socket.SendTo(e.Buffer, sending_end_point);\n        }\n        catch (Exception send_exception)\n        {\n            Console.WriteLine(&quot; Exception {0}&quot;, send_exception.Message);\n        }\n    }</code></pre>\n\nAlso i was able to receive the the same data at the receiving end.At the receiving end i have the following code:<br />\n<pre><code>    private WaveOut waveOut = null;\n\n    private WaveFormat waveFormat = new WaveFormat(8000, 16, 1);\n    private BufferedWaveProvider waveProvider;\n\n\n    private const int listenPort = 12345;\n    UdpClient listener;\n\n    string received_data;\n    byte[] receive_byte_array;\n    public Form1()\n    {\n        InitializeComponent();\n\n        listener = new UdpClient(listenPort);\n\n        waveProvider=new BufferedWaveProvider(waveFormat);\n        waveOut = new WaveOut();\n        waveOut.DesiredLatency = 100;\n        waveOut.Init(waveProvider);\n        waveOut.PlaybackStopped += wavePlayer_PlaybackStopped;\n\n        waveOut.Play();\n    }\n</code></pre>\n\nprivate void button1_Click(object sender, EventArgs e)<br />\n<pre><code>    {\n\n        richTextBox1.Text = &quot;Listining to port.....&quot;;\n        bool done = false;\n        IPEndPoint groupEP = new IPEndPoint(IPAddress.Any, listenPort);\n            try\n            {\n                while (true)\n                {\n                    receive_byte_array = listener.Receive(ref groupEP);\n                    if (waveProvider != null)\n                        waveProvider.AddSamples(receive_byte_array, 0, receive_byte_array.Length);\n\n                }\n            }\n            catch (Exception ex)\n            {\n               MessageBox.Show(ex.ToString());\n            }\n        }\n    }\n</code></pre>\n\nnow what the problem is, when i start both the sender and the receiver, the sender sends the data the receiver buffers the data in the waveProvider but doesnot play it as soon as it receive (Instead it play after buffer full exception occurs) This results in buffer overflow and i receive the buffer full exception.\r<br />\nI even tried to place \r<br />\nwaveOut.Play();\r<br />\njust beneath as \r<br />\nif (waveProvider != null)<br />\n<pre><code>                        waveProvider.AddSamples(receive_byte_array, 0, receive_byte_array.Length);\n                    waveOut.Play();\n</code></pre>\n\nand also clear the waveProvider.ClearBuffer() as:\r<br />\nif (waveProvider != null)<br />\n<pre><code>                        waveProvider.AddSamples(receive_byte_array, 0, receive_byte_array.Length);\n                    waveOut.Play();\n                    waveProvider.ClearBuffer();</code></pre>\n\nstill no luck.\r<br />\nwhat i want is, as soon as the data is received in the receiver end, play it and the free the buffer.\r<br />\n<br />\nThanks in advance.<br />\n",
    "PostedDate": "2015-01-09T03:11:06.7-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1340520",
    "ThreadId": "577268",
    "Html": "The right way is to start playing once from the buffered waveprovider and fill it as soon as you receive audio. If the buffer is overflowing, maybe the block size of audio you are sending is too large, or maybe you are sending faster than realtime. You can increase the size of the buffer behind BufferedWaveProvider\r<br />\n<br />\nMark<br />\n",
    "PostedDate": "2015-01-09T14:06:46.523-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1340993",
    "ThreadId": "577268",
    "Html": "Thanks Mark,\r<br />\nI want the same thing you stated above.The problem with me is, i receive the byte array from socket as shown here\r<br />\ntry<br />\n<pre><code>        {\n            while (true)\n            {\n                __receive_byte_array = listener.Receive(ref groupEP);__\n                if (waveProvider != null)\n                    waveProvider.AddSamples(receive_byte_array, 0, receive_byte_array.Length);\n\n            }\n        }\n        catch (Exception ex)\n        {\n           MessageBox.Show(ex.ToString());\n        }\n</code></pre>\n\nbut in my case then the buffer is full it start playing the sound but next time it says buffer full.I have once worked in project of taking the input from the mic and then playing it at once.\r<br />\n// create wave input from mic<br />\n<pre><code>        waveIn = new WaveIn(this.Handle);\n        waveIn.BufferMilliseconds = 25;\n        waveIn.RecordingStopped += waveIn_RecordingStopped;\n        waveIn.DataAvailable += waveIn_DataAvailable;\n\n        // create wave provider\n        waveProvider = new BufferedWaveProvider(waveIn.WaveFormat);\n\n        // create wave output to speakers\n        waveOut = new WaveOut();\n        waveOut.DesiredLatency = 100;\n        waveOut.Init(waveProvider);\n        waveOut.PlaybackStopped += wavePlayer_PlaybackStopped;\n\n        // start recording and playback\n        waveIn.StartRecording();\n        waveOut.Play();\n</code></pre>\n\nand\r<br />\nvoid waveIn_DataAvailable(object sender, WaveInEventArgs e)<br />\n<pre><code>    {\n        // add received data to waveProvider buffer\n        if (waveProvider != null)\n            waveProvider.AddSamples(e.Buffer, 0, e.BytesRecorded);\n    }</code></pre>\n\nhere as soon as data is available it is filled in waveProvider same thing i want with my code.As soon as the byte array is arrived at the socket fill it in the wave provider and then plat it.\r<br />\nIn my case instead of &quot;void waveIn_DataAvailable(object sender, WaveInEventArgs e)&quot; event i have used \r<br />\nwhile (true)<br />\n<pre><code>            {\n                receive_byte_array = listener.Receive(ref groupEP);\n                if (waveProvider != null)\n                    waveProvider.AddSamples(receive_byte_array, 0, receive_byte_array.Length);\n\n            } </code></pre>\n\nwhat should i do to get the behavior similar as &quot;&quot;void waveIn_DataAvailable(object sender, WaveInEventArgs e)&quot;&quot; event in my end.\r<br />\nThanks,\r<br />\nGanesh<br />\n",
    "PostedDate": "2015-01-12T01:48:00.453-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]