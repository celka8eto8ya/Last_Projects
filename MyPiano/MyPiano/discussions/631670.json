[
  {
    "Id": "1415760",
    "ThreadId": "631670",
    "Html": "Hi!\r<br />\n<br />\nI am trying to embed the wave files into the DLL by embedding them.\r<br />\n<br />\nEverything works fine and I get the UnmanagedMemoryStream. But then it all goes bad.\r<br />\n<br />\nI was trying to follow your example for fire and forget game sounds. This is version 137325 of my tries:<br />\n<pre><code>        public CachedSound(UnmanagedMemoryStream audioFileStream)\n        {\n            using (var audioFileReader = new WaveFileReader(audioFileStream))\n            {\n                WaveFormat = audioFileReader.WaveFormat;\n\n                var wholeFile = new List&lt;float&gt;((int)(audioFileReader.Length / 4));\n                var readBuffer = new byte[4];\n                int samplesRead;\n\n                while ((samplesRead = audioFileReader.Read(readBuffer, 0, readBuffer.Length)) &gt; 0)\n                {\n                    wholeFile.Add(BitConverter.ToSingle(readBuffer, 0));\n                }\n\n                AudioData = wholeFile.ToArray();\n            }\n        }</code></pre>\n\nThe ISampleProvider uses float arrays, but the WaveFileReader can only read byte[]. So what I need is a function that can read an UnmanagedMemoryStream and put the correct sample data into a float[] for the ISampleProvider to read it and supply it to the mixer.\r<br />\n<br />\nAgain, this above is my latest version, which as you can see is already very desperate as it reads float by float. Thats because I tried to see if the problem is with endianess, but it isnt.\r<br />\n<br />\nThe float array I get out of this has lots of NaNs, and if I go the other endian its the same. So the data is corrupt the way I read it.\r<br />\n<br />\nI also tried lots of other ways to read the data (including RawWaveStream), and the exact same wave files work perfectly fine if I use this below routine (from the blog) and place the file into the directory:<br />\n<pre><code>        public CachedSound(string audioFileName)\n        {\n            using (var audioFileReader = new AudioFileReader(audioFileName))\n            {\n                WaveFormat = audioFileReader.WaveFormat;\n                var wholeFile = new List&lt;float&gt;((int)(audioFileReader.Length / 4));\n                var readBuffer = new float[audioFileReader.WaveFormat.SampleRate * audioFileReader.WaveFormat.Channels];\n                int samplesRead;\n\n                while ((samplesRead = audioFileReader.Read(readBuffer, 0, readBuffer.Length)) &gt; 0)\n                {\n                    wholeFile.AddRange(readBuffer.Take(samplesRead));\n                }\n\n                AudioData = wholeFile.ToArray();\n            }\n        }</code></pre>\n\nSo why can I read the file from the harddisk but not embed it into the DLL?\r<br />\n<br />\nAny ideas welcome... ;)\r<br />\n<br />\nThx!<br />\n",
    "PostedDate": "2015-04-19T12:20:55.193-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1422014",
    "ThreadId": "631670",
    "Html": "Try WaveFileReader.toSampleProvider<br />\n",
    "PostedDate": "2015-05-01T08:34:01.997-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]