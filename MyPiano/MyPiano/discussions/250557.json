[
  {
    "Id": "583843",
    "ThreadId": "250557",
    "Html": "\r\n<p>I have programmed a webradio but there is still on problem.</p>\r\n<p>I am writing every second to to my blockedalginstream. It is working perfectly everything, but if the programm runs 4 a few houres it gets laggy because the stream gets a length about 233.000.000bytes and more.</p>\r\n<p>&nbsp;</p>\r\n<p>So how can i delete a part of my stream?</p>\r\n<p>&nbsp;</p>\r\n<p>Please help me :(</p>\r\n",
    "PostedDate": "2011-03-21T10:06:38.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "583844",
    "ThreadId": "250557",
    "Html": "<p>have a look at the suggestion in this post:</p>\r\n<p>http://naudio.codeplex.com/discussions/250432#post583357</p>\r\n<p>Mark</p>",
    "PostedDate": "2011-03-21T10:08:34.413-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "584830",
    "ThreadId": "250557",
    "Html": "<p>thanks a lot i had a look on that and looks nice but i can t find BufferedWaveProvider.</p>\n<p>you may help me :)</p>\n<p>EDIT: @ markheath ist es m&ouml;glich, dass du deutsch kannst dann k&ouml;nnte ich n&auml;hmlich besser erkl&auml;ren was mein problem ist... weil hier: http://msdn.microsoft.com/de-de/magazine/ee309883.aspx steht dein name bei autor :)</p>\n<p>&nbsp;</p>\n<p>EDIT2: found it i had an old version of naudio &gt;.&lt;</p>",
    "PostedDate": "2011-03-23T00:41:05.613-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "586490",
    "ThreadId": "250557",
    "Html": "<p>ok i tried but it doesn t help me... now here is my basic code ( it is a lot more but i cut out the important things )</p>\n<p>&nbsp;</p>\n<pre class=\"lang-cs prettyprint\"><code><span class=\"pln\">&nbsp; </span><span class=\"kwd\">private</span><span class=\"pln\"> </span><span class=\"typ\">Stream</span><span class=\"pln\"> ms </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">MemoryStream</span><span class=\"pun\">();</span><span class=\"pln\"><br />&nbsp; &nbsp; </span><span class=\"kwd\">public</span><span class=\"pln\"> </span><span class=\"kwd\">void</span><span class=\"pln\"> </span><span class=\"typ\">PlayMp3FromUrl</span><span class=\"pun\">(</span><span class=\"kwd\">string</span><span class=\"pln\"> url</span><span class=\"pun\">)</span><span class=\"pln\"><br />&nbsp; &nbsp; </span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Thread</span><span class=\"pun\">(</span><span class=\"kwd\">delegate</span><span class=\"pun\">(</span><span class=\"kwd\">object</span><span class=\"pln\"> o</span><span class=\"pun\">)</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">var</span><span class=\"pln\"> response </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"typ\">WebRequest</span><span class=\"pun\">.</span><span class=\"typ\">Create</span><span class=\"pun\">(</span><span class=\"pln\">url</span><span class=\"pun\">).</span><span class=\"typ\">GetResponse</span><span class=\"pun\">();</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; using </span><span class=\"pun\">(</span><span class=\"kwd\">var</span><span class=\"pln\"> stream </span><span class=\"pun\">=</span><span class=\"pln\"> response</span><span class=\"pun\">.</span><span class=\"typ\">GetResponseStream</span><span class=\"pun\">())</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">byte</span><span class=\"pun\">[]</span><span class=\"pln\"> buffer </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"kwd\">byte</span><span class=\"pun\">[</span><span class=\"lit\">65536</span><span class=\"pun\">];</span><span class=\"pln\"> </span><span class=\"com\">// 64KB chunks</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">int</span><span class=\"pln\"> read</span><span class=\"pun\">;</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">((</span><span class=\"pln\">read </span><span class=\"pun\">=</span><span class=\"pln\"> stream</span><span class=\"pun\">.</span><span class=\"typ\">Read</span><span class=\"pun\">(</span><span class=\"pln\">buffer</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> buffer</span><span class=\"pun\">.</span><span class=\"typ\">Length</span><span class=\"pun\">))</span><span class=\"pln\"> </span><span class=\"pun\">&gt;</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">)</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">var</span><span class=\"pln\"> pos </span><span class=\"pun\">=</span><span class=\"pln\"> ms</span><span class=\"pun\">.</span><span class=\"typ\">Position</span><span class=\"pun\">;</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ms</span><span class=\"pun\">.</span><span class=\"typ\">Position</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> ms</span><span class=\"pun\">.</span><span class=\"typ\">Length</span><span class=\"pun\">;</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ms</span><span class=\"pun\">.</span><span class=\"typ\">Write</span><span class=\"pun\">(</span><span class=\"pln\">buffer</span><span class=\"pun\">,</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">,</span><span class=\"pln\"> read</span><span class=\"pun\">);</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ms</span><span class=\"pun\">.</span><span class=\"typ\">Position</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> pos</span><span class=\"pun\">;</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">}</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">}</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"pun\">}).</span><span class=\"typ\">Start</span><span class=\"pun\">();</span><span class=\"pln\"><br /><br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"com\">// Pre-buffering some data to allow NAudio to start playing</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">ms</span><span class=\"pun\">.</span><span class=\"typ\">Length</span><span class=\"pln\"> </span><span class=\"pun\">&lt;</span><span class=\"pln\"> </span><span class=\"lit\">65536</span><span class=\"pun\">*</span><span class=\"lit\">10</span><span class=\"pun\">)</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"typ\">Thread</span><span class=\"pun\">.</span><span class=\"typ\">Sleep</span><span class=\"pun\">(</span><span class=\"lit\">1000</span><span class=\"pun\">);</span><span class=\"pln\"><br /><br />&nbsp; &nbsp; &nbsp; &nbsp; ms</span><span class=\"pun\">.</span><span class=\"typ\">Position</span><span class=\"pln\"> </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"lit\">0</span><span class=\"pun\">;</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; using </span><span class=\"pun\">(</span><span class=\"typ\">WaveStream</span><span class=\"pln\"> blockAlignedStream </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">BlockAlignReductionStream</span><span class=\"pun\">(</span><span class=\"typ\">WaveFormatConversionStream</span><span class=\"pun\">.</span><span class=\"typ\">CreatePcmStream</span><span class=\"pun\">(</span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">Mp3FileReader</span><span class=\"pun\">(</span><span class=\"pln\">ms</span><span class=\"pun\">))))</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; using </span><span class=\"pun\">(</span><span class=\"typ\">WaveOut</span><span class=\"pln\"> waveOut </span><span class=\"pun\">=</span><span class=\"pln\"> </span><span class=\"kwd\">new</span><span class=\"pln\"> </span><span class=\"typ\">WaveOut</span><span class=\"pun\">(</span><span class=\"typ\">WaveCallbackInfo</span><span class=\"pun\">.</span><span class=\"typ\">FunctionCallback</span><span class=\"pun\">()))</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; waveOut</span><span class=\"pun\">.</span><span class=\"typ\">Init</span><span class=\"pun\">(</span><span class=\"pln\">blockAlignedStream</span><span class=\"pun\">);</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; waveOut</span><span class=\"pun\">.</span><span class=\"typ\">Play</span><span class=\"pun\">();</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"kwd\">while</span><span class=\"pln\"> </span><span class=\"pun\">(</span><span class=\"pln\">waveOut</span><span class=\"pun\">.</span><span class=\"typ\">PlaybackState</span><span class=\"pln\"> </span><span class=\"pun\">==</span><span class=\"pln\"> </span><span class=\"typ\">PlaybackState</span><span class=\"pun\">.</span><span class=\"typ\">Playing</span><span class=\"pun\">)</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">{</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"typ\">System</span><span class=\"pun\">.</span><span class=\"typ\">Threading</span><span class=\"pun\">.</span><span class=\"typ\">Thread</span><span class=\"pun\">.</span><span class=\"typ\">Sleep</span><span class=\"pun\">(</span><span class=\"lit\">100</span><span class=\"pun\">);</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">}</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">}</span><span class=\"pln\"><br />&nbsp; &nbsp; &nbsp; &nbsp; </span><span class=\"pun\">}</span><span class=\"pln\"><br />&nbsp; &nbsp; </span><span class=\"pun\">}</span><span class=\"pln\"><br /><br />now my problem is the blockAlignedStream gets 2 big<br />also the the io.stream ms<br /><br />so is there a posibility to free the played bytes?<br /><br />here is a screen of the problem:<br /><br /></span></code>http://s7.directupload.net/images/110326/fw9yb4op.png this 9.240 k getting bigger up to 250k and more :(<br /><br /><br />because the problem is a need to decode the mp3 stream and this bufferedwaveprovider doesn t support so i have to decode with a mp3filereader but this would be also big<br /><br />because of the mp3filereader<br /><br />here is an example:<br /><br />OpenFileDialog ofn = new OpenFileDialog();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ofn.ShowDialog();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WaveOut OutPut;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Mp3FileReader mp3read = new Mp3FileReader(ofn.FileName);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int read = 0;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[] buffer = new byte[65536];<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BufferedWaveProvider wp = new BufferedWaveProvider(new WaveFormat());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wp.DiscardOverrunedBuffers = true;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; while((read = WaveFormatConversionStream.CreatePcmStream(mp3read).Read(buffer,0,buffer.Length)) &gt; 0){<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; wp.AddSamples(buffer, 0, buffer.Length);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutPut = new WaveOut(WaveCallbackInfo.FunctionCallback());<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutPut.Init(wp);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; OutPut.Play();<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(mp3read.Length);<br /><br />and the last line: Console.WriteLine(mp3read.Length); Says that it is tooo long :( so what to do with this?<br /></pre>",
    "PostedDate": "2011-03-25T08:29:55.187-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "588686",
    "ThreadId": "250557",
    "Html": "<p>you would need to decompress the MP3 file frame by frame, and add each decompressed frame to the buffered wave provider</p>\r\n<p>Mark</p>",
    "PostedDate": "2011-03-30T02:35:03.123-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "589039",
    "ThreadId": "250557",
    "Html": "<p>thanks i will try</p>",
    "PostedDate": "2011-03-30T12:49:49.333-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]