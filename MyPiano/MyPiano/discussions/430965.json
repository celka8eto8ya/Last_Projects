[
  {
    "Id": "992498",
    "ThreadId": "430965",
    "Html": "\r\n<p>In a mix of trying to alter code fom this tutorial:&nbsp; https://www.youtube.com/watch?v=ZnFoVuOVrUQ</p>\r\n<p>&nbsp;- and trying to get the peak values of a recorded wave I ended up with this:</p>\r\n<p>while (wave.Position &lt; wave.Length )<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; read = wave.Read(buffer, 0, 16384);<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; for (int i = 0; i &lt; read / 4; i&#43;&#43;)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (i &lt; 5000){&nbsp;&nbsp;&nbsp;\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; chart1.Series[&quot;wave&quot;].Points.Add(BitConverter.ToSingle(buffer, i * 4));<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; liste.Add(chart1.Series[&quot;wave&quot;].Points[Convert.ToInt32(wave.Position/4096)].YValues[0]);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if (wave.Position % 16384 == 0 && i % 4096 == 0)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;Values!!: &quot;&#43; liste[i]);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Console.WriteLine(&quot;values: &quot; &#43; chart1.Series[&quot;wave&quot;].Points[Convert.ToInt32(BitConverter.ToDouble(buffer,\r\n i / 4))].YValues[0]);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox1.Text = Convert.ToString(optaelPeaks);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; textBox2.Text = Convert.ToString(wp);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>\r\n<p>-&nbsp; but the output of this code doesn't really makes sense in the console as all the values lays between 0.027 and 0.089 (in a very looping-like pattern, that doesn't resembles the .wav I am analyzing/loading), as opposed to the chart1 that shows values\r\n from -1.0 to 1.0.</p>\r\n<p>I have also been checking up on Voicerecorder and this link: http://stackoverflow.com/questions/14350790/naudio-peak-volume-meter</p>\r\n<p>- without getting further (as a Dane I have trouble with more in depth math English terms like: &quot;take the log base 10 of the maximum value&quot;) ... Hope you can help me /on before hand thx /Thomas</p>\r\n",
    "PostedDate": "2013-01-26T13:22:49.293-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "993085",
    "ThreadId": "430965",
    "Html": "\r\n<p>what format are you recording in? ToSingle assumes you are capturing as IEEE float.</p>\r\n",
    "PostedDate": "2013-01-28T07:44:37.54-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "993691",
    "ThreadId": "430965",
    "Html": "\r\n<p>Hi - thx for replying.</p>\r\n<p><br>\r\nI tried Google/Wiki 'IEEE float' -&gt;&gt; I guess it is a general data-format rather than an audio format. Thereafter I went to my recording software to meet that recording standard. It turned out that the line:</p>\r\n<p><br>\r\n&nbsp; NAudio.Wave.WaveChannel32 wave = new NAudio.Wave.WaveChannel32(new NAudio.Wave.WaveFileReader(open.FileName));</p>\r\n<p><br>\r\n- only can open 'Windows PCM 16-bit'.<br>\r\n<br>\r\nIn this process (my own and early learning process of C#) I have also (- found a way to -) tried to export the data stream of the y-values, from above, into an .csv-file, which rendered (in Excel) the values into this graph: http://www.preforce.dk/DIV/NAudio_codeplex.htm<br>\r\nThis doesn't fit with the asymmetric output of my 'Windows PCM 16-bit' wav-file in chart1.\r\n<br>\r\n<br>\r\nSo instead of;<br>\r\n<br>\r\n&nbsp; NAudio.Wave.WaveChannel32 wave = new NAudio.Wave.WaveChannel32(new NAudio.Wave.WaveFileReader(open.FileName));<br>\r\n<br>\r\n- should I then be using a different way to open the wavefile? (the goal is to make the y-values fits the peaks at the waveposittion (x-values/time) in the recorded file, of course)<br>\r\nAll though Giawa, who made this tutorial that I am merging from, could plot out to the chart, I am having big trouble understanding whats going on value-wise. I mean; on the chart it displays very different y-values (making peaks) -&gt;&gt; so how to access those\r\n peak-making y-values?<br>\r\n<br>\r\nLastly; I also tried to alter the way the files ya-values are being read/gets converted in the tutorial from:<br>\r\n<br>\r\nchart1.Series[&quot;wave&quot;].Points.Add(BitConverter.ToSingle(buffer, i * 4)); <br>\r\n<br>\r\nto:<br>\r\n<br>\r\nchart1.Series[&quot;wave&quot;].Points.Add(BitConverter.ToDouble(buffer, i * 4));</p>\r\n<p><br>\r\n(actually this action, was just to try something, as you wrote about the 'ToSingle'-approach being wrong ('IEEE float'))<br>\r\n<br>\r\n'ToDouble' results in an exception, but then again, this was a wild shot from my side :-/</p>\r\n",
    "PostedDate": "2013-01-29T07:42:36.783-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "994072",
    "ThreadId": "430965",
    "Html": "\r\n<p>your WAV file is 16 bit, but WaveChannel32 converts 16 bit into 32 bit IEEE float. So you either keep WaveChannel32. ToSingle is right if your audio is IEEE float at that point. I'm not really clear on what you are trying to graph. Do you want to draw a\r\n waveform?</p>\r\n",
    "PostedDate": "2013-01-30T03:24:52.62-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "998963",
    "ThreadId": "430965",
    "Html": "I got it to work with this:\r<br />\n<br />\nwhile (wave.Position &lt; wave.Length)<br />\n<pre><code>        {\n            wPosTilSecs = Convert.ToInt32(Math.Round(Convert.ToDouble(wave.Position / 88723)));\n            read = wave.Read(buffer, 0, 8192);\n            for (int i = 0; i &lt; read / 4; i++)\n            {\n                if (i &lt; 5000){\n                    chart1.Series[&quot;wave&quot;].Points.Add(BitConverter.ToSingle(buffer, Convert.ToInt32(Math.Round(secondCounter*10))));\n                    chart1.Series[&quot;wave&quot;].Points.Add(BitConverter.ToSingle(buffer, i*4));                          \n                }            \n                areal += buffer[i];       \n                if (buffer[i] &gt; 4)\n                     {\n                    if (areal &gt; 196000)\n                         {\n                             peaker +=1;\n                         }\n                     }\n                if (i % 512 == 0) { secondCounter += 0.0057305; optaellerIbyteCycles = 0; Console.WriteLine(&quot;sec: &quot; + secondCounter);\n\n                }\n                       if (i%32==0) {                              \n                           if (BitConverter.ToSingle(buffer, i * 4) &gt; 0.04 || BitConverter.ToSingle(buffer, i * 4)&lt; 0.01)\n                           {\n                               sw.Write(&quot;Y-value PEAK?: &quot; + BitConverter.ToSingle(buffer, i * 4));\n                               sw.Write(&quot;\\t\\n&quot;);\n\n                               sw.Write(&quot;sec PEAK?:: &quot; + secondCounter.ToString());\n                               sw.Write(&quot;\\t&quot;);\n                           }\n                           else {\n                               if (i % 16384 == 0)\n                               {\n                                   sw.Write(&quot;Y-value no-peak: &quot; + BitConverter.ToSingle(buffer, i * 4));\n                                   sw.Write(&quot;\\t\\n&quot;);\n\n                                   sw.Write(&quot;sec no-peak: &quot; + secondCounter.ToString());\n                                   sw.Write(&quot;\\t&quot;);\n                               }\n                           }\n                           peaker = 0;                 \n                      }                      \n               }                  \n            areal = 0;\n            textBox1.Text = Convert.ToString(countPeaks);\n            textBox2.Text = Convert.ToString(wp);               \n        }</code></pre>\n\n<hr />\nThe line:  if (BitConverter.ToSingle(buffer, i * 4) &gt; 0.04 || BitConverter.ToSingle(buffer, i * 4)&lt; 0.01)<br />\n<ul>\n<li>is the core to the solver, as the waveform I was drawing with the MS Visual Studio standard chart showed a the confusing range og -1 to 1. The 'buffer' variable outputs values from 0.003 to 0.098 (I did not see that range from buffer earlier, and I just had to amp up the detail via a txt-stream to a notepad-file in order to discover it -&gt; otherwise my small induvidual wave-inputs did not show over a time period of 5-6 secs.)</li>\n</ul>\n",
    "PostedDate": "2013-02-09T11:29:44.91-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]