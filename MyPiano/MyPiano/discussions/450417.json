[
  {
    "Id": "1069809",
    "ThreadId": "450417",
    "Html": "So... Here is very simple code:<br />\n<pre><code>using System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Windows.Forms;\nusing System.Threading;\nusing System.IO;\nusing System.Net;\nusing NAudio;\nusing NAudio.Wave;\nusing NAudio.FileFormats;\nusing NAudio.CoreAudioApi;\n\nnamespace MahStation\n{\n    delegate void Ahaha(string Text);\n    delegate void Wtf();\n    \n\n    public partial class MainForm : Form\n    {\n        Thread BgThread;\n        Server Serv = new Server();\n\n        public MainForm()\n        {\n            InitializeComponent();\n            Logging.Log = TextOut;\n            Tumbler.CheckedChanged += Manipulate;\n            Logging.Print(&quot;Система готова к работе&quot;);\n        }\n\n        private void Manipulate(object sender, EventArgs e)\n        {\n            if (Tumbler.Checked)\n            {\n                BgThread = new Thread(new ThreadStart(Serv.Begin));\n                BgThread.IsBackground = true;\n                BgThread.Name = &quot;DataSend&quot;;\n                BgThread.Start();\n                Logging.Print(&quot;Запуск фонового процесса передачи&quot;);\n            }\n            else\n            {\n                BgThread.Abort();\n                Logging.Print(&quot;Завершение фонового процесса передачи&quot;);\n            }\n        }\n    }\n\n    public static class Logging\n    {\n        public static RichTextBox Log { get; set; }\n        public static void Print(string Text)\n        {\n            if (Log.InvokeRequired)\n            {\n                Ahaha d = new Ahaha(Print);\n                Log.BeginInvoke(d, new object[] { Text });\n            }\n            else\n            {\n                Log.Text += Text + &quot;\\n&quot;;\n                Log.SelectionStart = Log.TextLength;\n                Log.ScrollToCaret();\n            }\n        }\n        public static void Clear()\n        {\n            if (Log.InvokeRequired)\n            {\n                Wtf d = new Wtf(Clear);\n                Log.BeginInvoke(d);\n            }\n            else\n            {\n                Log.Clear();\n            }\n        }\n    }\n\n    public class Server\n    {\n        WaveInEvent MicStream;\n        private HttpListener Servir = new HttpListener();\n\n        public void Begin()\n        {\n            MicStream = new WaveInEvent();\n            MicStream.DeviceNumber = 0;\n            MicStream.WaveFormat = new WaveFormat(8000, 1);\n            MicStream.DataAvailable += Sending;\n            Servir.Prefixes.Clear();\n            Servir.Prefixes.Add(&quot;http://192.168.0.68:80/&quot;);\n            MicStream.StartRecording();\n        }\n\n        public void Sending(object sender, WaveInEventArgs e)\n        {\n            Servir.Start();\n            while (true)\n            {\n                HttpListenerContext Context = Servir.GetContext();\n                HttpListenerRequest Request = Context.Request;\n                HttpListenerResponse Answer = Context.Response;\n                Stream atwet = Answer.OutputStream;\n                Logging.Print(String.Format(&quot;Method: {0}, URL: {1}&quot;, Request.HttpMethod, Request.Url));\n                Answer.StatusCode = (int)HttpStatusCode.OK;\n                Answer.ContentLength64 = e.BytesRecorded;\n                atwet.Write(e.Buffer, 0, e.BytesRecorded);\n            }\n        }\n    }\n}</code></pre>\n\nBut i can't read this stream via Winamp (Sync error). I know, error in my shit-code, but I can not figure out where exactly. Do not hit me strong, I'm still a beginner C: \r<br />\nAnd yeah, sorry for my bad language, i almost don`t know english =\\<br />\n",
    "PostedDate": "2013-07-17T19:15:15.39-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1069901",
    "ThreadId": "450417",
    "Html": "you have an infinite loop in the DataAvailable event handler. Instead, in DataAvailable you need to write to the network and return<br />\n",
    "PostedDate": "2013-07-18T01:26:29.82-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1069933",
    "ThreadId": "450417",
    "Html": "Thanks, I'll try<br />\n",
    "PostedDate": "2013-07-18T02:40:24.913-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]