[
  {
    "Id": "1470589",
    "ThreadId": "653728",
    "Html": "Hey folks,\r<br />\n<br />\nI am working on a project where I need to join several WAV files. My Code works totally fine,\r<br />\nbut you hear clearly a clicking noise between two joined WAV files. \r<br />\n<br />\nI am an audio engineer. When I work, with e.g. consecutive samples in a DAW (Digital Audio Workstation) and I want to prevent this clicking noise between two WAV samples then I have to create a crossover fade (basically this is a fadeout on the first sample and a fade in on the next sample). \r<br />\n<br />\n<strong>Therefore my question would be if I can create such a crossover fade while concatenating two WAV files.</strong>\r<br />\n<br />\nI provide my C# code below how I concatenate WAV files. This works for WAV files which are in the same &quot;format&quot;. I found this piece of Code on (<a href=\"http://stackoverflow.com/questions/6777340/how-to-join-2-or-more-wav-files-together-programatically\" rel=\"nofollow\">http://stackoverflow.com/questions/6777340/how-to-join-2-or-more-wav-files-together-programatically</a>).\r<br />\n<br />\nThank you for advice and a solution.\r<br />\n<br />\nBest regards,\r<br />\nAlex<br />\n<pre><code>public static void Concatenate(string outputFile, IEnumerable&lt;string&gt; sourceFiles)\n{\n    byte[] buffer = new byte[1024];\n    WaveFileWriter waveFileWriter = null;\n\n    try\n    {\n        foreach (string sourceFile in sourceFiles)\n        {\n            using (WaveFileReader reader = new WaveFileReader(sourceFile))\n            {\n                if (waveFileWriter == null)\n                {\n                    // first time in create new Writer\n                    waveFileWriter = new WaveFileWriter(outputFile, reader.WaveFormat);\n                }\n                else\n                {\n                    if (!reader.WaveFormat.Equals(waveFileWriter.WaveFormat))\n                    {\n                        throw new InvalidOperationException(&quot;Can't concatenate WAV Files that don't share the same format&quot;);\n                    }\n                }\n\n                int read;\n                while ((read = reader.Read(buffer, 0, buffer.Length)) &gt; 0)\n                {\n                    waveFileWriter.WriteData(buffer, 0, read);\n                }\n            }\n        }\n    }\n    finally\n    {\n        if (waveFileWriter != null)\n        {\n            waveFileWriter.Dispose();\n        }\n    }\n\n}</code></pre>\n\n",
    "PostedDate": "2016-04-19T00:43:44.863-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]