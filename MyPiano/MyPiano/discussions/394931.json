[
  {
    "Id": "910246",
    "ThreadId": "394931",
    "Html": "\r\n<p>Hello, I have extended the NAudio.Gui.WaveformPainter class to support colored samples. This way you can colorize the waveform. I added an new AddMax(float,Color) function.\r\n<br>\r\n<br>\r\n<strong>AddMax(float)</strong> now has this effect when changing the foreground color</p>\r\n<p><img src=\"http://kg6ypi.ath.cx/screenshots/UpdatedWaveformPainter.png\" alt=\"WaveformPainter\"><br>\r\n<br>\r\n<strong>AddMax(float, Color)</strong>, can be used to generate colorfull displays as below...<br>\r\n<br>\r\n<img src=\"http://kg6ypi.ath.cx/screenshots/UpdatedWaveformPainter2.png\" alt=\"WaveformPainter\"><img src=\"http://kg6ypi.ath.cx/screenshots/UpdatedWaveformPainter3.png\" alt=\"WaveformPainter\"><br>\r\n<br>\r\n<strong>Edit 9/10/2012,&nbsp;</strong> updated code to consume minimal resources.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\n<span style=\"color:blue\">using</span> System.Collections.Generic;\n<span style=\"color:blue\">using</span> System.ComponentModel;\n<span style=\"color:blue\">using</span> System.Data;\n<span style=\"color:blue\">using</span> System.Drawing;\n<span style=\"color:blue\">using</span> System.Text;\n<span style=\"color:blue\">using</span> System.Windows.Forms;\n\n<span style=\"color:blue\">namespace</span> NAudio.Gui\n{\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n    <span style=\"color:gray\">///</span><span style=\"color:green\"> Windows Forms control for painting audio waveforms, coloring support added by Brandon Hansen, KG6YPI</span>\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> WaveformPainter : Control\n    {\n        Pen foregroundPen;\n        Pen coloredPen = <span style=\"color:blue\">new</span> Pen(Color.Black);\n\n        List&lt;<span style=\"color:blue\">float</span>&gt; samples = <span style=\"color:blue\">new</span> List&lt;<span style=\"color:blue\">float</span>&gt;(1000);\n        List&lt;Color&gt; colours = <span style=\"color:blue\">new</span> List&lt;Color&gt;(1000);\n\n        <span style=\"color:blue\">int</span> maxSamples;\n        <span style=\"color:blue\">int</span> insertPos;\n\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Constructs a new instance of the WaveFormPainter class</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:blue\">public</span> WaveformPainter()\n        {\n            <span style=\"color:blue\">this</span>.SetStyle(ControlStyles.AllPaintingInWmPaint | ControlStyles.UserPaint |\n                ControlStyles.OptimizedDoubleBuffer, <span style=\"color:blue\">true</span>);\n            InitializeComponent();\n            OnForeColorChanged(EventArgs.Empty);\n            OnResize(EventArgs.Empty);\n        }\n\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> On Resize</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnResize(EventArgs e)\n        {\n            maxSamples = <span style=\"color:blue\">this</span>.Width;\n            <span style=\"color:blue\">base</span>.OnResize(e);\n        }\n\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> On ForeColor Changed</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;e&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnForeColorChanged(EventArgs e)\n        {\n            foregroundPen = <span style=\"color:blue\">new</span> Pen(ForeColor);\n            <span style=\"color:blue\">base</span>.OnForeColorChanged(e);\n        }\n\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Add Max Value.</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;maxSample&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> AddMax(<span style=\"color:blue\">float</span> maxSample)\n        {\n            <span style=\"color:blue\">if</span> (maxSamples == 0)\n            {\n                <span style=\"color:green\">// sometimes when you minimise, max samples can be set to 0</span>\n                <span style=\"color:blue\">return</span>;\n            }\n            <span style=\"color:blue\">if</span> (samples.Count &lt;= maxSamples)\n            {\n                samples.Add(maxSample);\n                colours.Add(foregroundPen.Color);\n            }\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (insertPos &lt; maxSamples)\n            {\n                samples[insertPos] = maxSample;\n                colours[insertPos] = foregroundPen.Color;\n            }\n            insertPos&#43;&#43;;\n            insertPos %= maxSamples;\n\n            <span style=\"color:blue\">this</span>.Invalidate();\n        }\n\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> Add Max Value with specified Color.</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;maxSample&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;param name=&quot;color&quot;&gt;</span><span style=\"color:gray\">&lt;/param&gt;</span>\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> AddMax(<span style=\"color:blue\">float</span> maxSample, Color color)\n        {\n            <span style=\"color:blue\">if</span> (maxSamples == 0)\n            {\n                <span style=\"color:green\">// sometimes when you minimise, max samples can be set to 0</span>\n                <span style=\"color:blue\">return</span>;\n            }\n            <span style=\"color:blue\">if</span> (samples.Count &lt;= maxSamples)\n            {\n                samples.Add(maxSample);\n                colours.Add(color);\n            }\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (insertPos &lt; maxSamples)\n            {\n                samples[insertPos] = maxSample;\n                colours[insertPos] = color;\n            }\n\n            insertPos&#43;&#43;;\n            insertPos %= maxSamples;\n\n            <span style=\"color:blue\">this</span>.Invalidate();\n        }\n\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\n        <span style=\"color:gray\">///</span><span style=\"color:green\"> On Paint</span>\n        <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\n        <span style=\"color:blue\">protected</span> <span style=\"color:blue\">override</span> <span style=\"color:blue\">void</span> OnPaint(PaintEventArgs pe)\n        {\n            <span style=\"color:blue\">base</span>.OnPaint(pe);\n\n            <span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> x = 0; x &lt; <span style=\"color:blue\">this</span>.Width; x&#43;&#43;)\n            {\n                coloredPen.Color = GetColor(x - <span style=\"color:blue\">this</span>.Width &#43; insertPos);\n                <span style=\"color:blue\">float</span> lineHeight = <span style=\"color:blue\">this</span>.Height * GetSample(x - <span style=\"color:blue\">this</span>.Width &#43; insertPos);\n                <span style=\"color:blue\">float</span> y1 = (<span style=\"color:blue\">this</span>.Height - lineHeight) / 2;\n                pe.Graphics.DrawLine(coloredPen, x, y1, x, y1 &#43; lineHeight);\n            }\n        }\n\n        <span style=\"color:blue\">float</span> GetSample(<span style=\"color:blue\">int</span> index)\n        {\n            <span style=\"color:blue\">if</span> (index &lt; 0)\n                index &#43;= maxSamples;\n            <span style=\"color:blue\">if</span> (index &gt;= 0 &amp; index &lt; samples.Count)\n                <span style=\"color:blue\">return</span> samples[index];\n\n            <span style=\"color:blue\">return</span> 0;\n        }\n        Color GetColor(<span style=\"color:blue\">int</span> index)\n        {\n            <span style=\"color:blue\">if</span> (index &lt; 0)\n                index &#43;= maxSamples;\n            <span style=\"color:blue\">if</span> (index &gt;= 0 &amp; index &lt; samples.Count)\n                <span style=\"color:blue\">return</span> colours[index];\n\n            <span style=\"color:blue\">return</span> Color.Black;\n        }\n    }\n}\n\n</pre>\r\n</div>\r\n",
    "PostedDate": "2012-09-09T16:14:27.77-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "911025",
    "ThreadId": "394931",
    "Html": "<p>hi <span class=\"UserProfileLink\">kg6ypi, thanks for sharing this, it looks very cool. I probably won't replace the standard waveform painter as this will increase memory consumption and reduce performance for those who are happy to use a single color. However, I'm sure your version could prove useful to some people. WaveFormPainter was only ever intended to be a very simple example of how you could do waveform drawing, with the idea that people would take the code and customise it for their own use. That is why my WPF waveform drawing controls are not part of the NAudio assembly.</span></p>\r\n<p><span class=\"UserProfileLink\"><br /></span></p>",
    "PostedDate": "2012-09-11T09:17:04.657-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "911042",
    "ThreadId": "394931",
    "Html": "\r\n<p>OK, what I will do is make another class that extends WaveformPainter, and call it ColoredWaveformPainter&nbsp;&nbsp; or something, and re-post the code.&nbsp; If you want to add it in, that would be great; if not, no worries.<br>\r\n<br>\r\nI have really been wanting a &quot;WaterfallPainter&quot; type control. I figured doing this was some baby steps, hihi.</p>\r\n",
    "PostedDate": "2012-09-11T09:45:08.16-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]