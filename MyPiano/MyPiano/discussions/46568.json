[
  {
    "Id": "155607",
    "ThreadId": "46568",
    "Html": "<div>Hello,</div><div><br></div><div>i'm using NAudio SVN version, and i must say that this is an excellent .NET Audio library and that ih has a lot of potential.</div><div>So, thank you Mark for doing all this!</div><div><br></div><div>In view of my experience, i'm not sure when this should be Vista (+) specific, or not, but i noticed some glitches where i must use sepparated code for XP.</div><div>(CoreAudioApi.MMDevice -&gt; WaveLibMixer @http://www.codeproject.com/KB/audio-video/AudioLib.aspx)</div><div>I know, XP is going off from the market, but there are still lot's of users using it.</div><div><br></div><div>Okay, now something about the problem:</div><div>In most cases the library is working fine, but on some MP3's there is an <span style=\"font-weight:bold\">exception</span>: &quot;<span style=\"font-weight:bold\">Not a recognised MP3 block</span>&quot; (NAudio.Wave.Mp3Frame.<span style=\"font-weight:bold\">Mp3Frame</span>).</div><div>I don't know if this is a bug or not, but i do know that FMOD and BASS24 solved that problem (and that kind of MP3 can be played well on Winamp, Windows Media Player etc.).</div><div><br></div><div>P.S.:Of course, i could use BASS24 (or FMOD) for my application as they offer using the library for non-commercial use, but in that case they also obligate user to watch the splash screen (bass24) for a second - and this is why i like your library - open source. :)</div>",
    "PostedDate": "2009-02-08T14:37:14.353-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "155741",
    "ThreadId": "46568",
    "Html": "hi there,<br>\r\n<br>\r\nthe MP3 frame parsing code was knocked up pretty quickly and I'm not surprised it doesn't cover everything. If perhaps you could upload a sample MP3 file somewhere (preferably not something copyrighted) I will see if I can investigate what the unrecognised data is.<br>\r\n<br>\r\nMark<br>\r\n",
    "PostedDate": "2009-02-09T04:24:18.667-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "155752",
    "ThreadId": "46568",
    "Html": "I uploaded 2 songs.<div><br></div><div>The first is copyrighted and will be removed within 24 hours.</div><div>The second one shouldn't be copyrighted but will be removed too.</div><div><br></div><div>The links are:</div><div>for: mp3 block not recognised:Â <a href=\"http://www.4shared.com/file/85223003/6c93ba58/mp3blocknotrecognised.html\">http://www.4shared.com/file/85223003/6c93ba58/mp3blocknotrecognised.html</a></div><div>for: acm not possible calling acm streamconvert mp3 (one fresh 'bug'): <a href=\"http://www.4shared.com/file/85223049/e82a9642/acmnotpossiblecallingacmstreamconvert.html\">http://www.4shared.com/file/85223049/e82a9642/acmnotpossiblecallingacmstreamconvert.html</a></div><div><br></div><div>Thanks</div>",
    "PostedDate": "2009-02-09T05:07:03.97-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "156827",
    "ThreadId": "46568",
    "Html": "thanks, I've downloaded them. I'll use them to test next time I get the time to work on the MP3 frame reader<br>\r\n",
    "PostedDate": "2009-02-11T14:31:34.137-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200509",
    "ThreadId": "46568",
    "Html": "<p>I had the same problem, mp3 can wrap a RIFF file, so the header block is 'RIFF', if one just skips to the data it is a valid mp3 block and can be played out. To fix this I add the following code to Mp3Frame</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">public</span></span><span style=\"font-size:x-small\"> Mp3Frame(</span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">Stream</span></span><span style=\"font-size:x-small\"> input)</span></p>\r\n<p><span style=\"font-size:x-small\">{&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">BinaryReader</span></span><span style=\"font-size:x-small\"> reader = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">BinaryReader</span></span><span style=\"font-size:x-small\">(input);&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small;color:#008000\">// try for a header</span></span></p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">long </span></span><span style=\"font-size:x-small\">headerStartPosition = input.Position;&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">byte</span></span><span style=\"font-size:x-small\">[] headerBytes = reader.ReadBytes(4);&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small;color:#008000\">// Added -jam to play wrapped mp3 files via RIFF</span></span></p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">if</span></span><span style=\"font-size:x-small\"> ((headerBytes[0] == </span><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">'R'</span></span><span style=\"font-size:x-small\">) &amp;&amp;&lt;font size=&quot;2&quot;&gt;\r\n<p>(headerBytes[1] ==</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">'I'</span></span><span style=\"font-size:x-small\">) &amp;&amp;&lt;font size=&quot;2&quot;&gt;\r\n<p>(headerBytes[2] ==</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">'F'</span></span><span style=\"font-size:x-small\">) &amp;&amp;&lt;font size=&quot;2&quot;&gt;\r\n<p>(headerBytes[3] ==</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"font-size:x-small;color:#a31515\"><span style=\"font-size:x-small;color:#a31515\">'F'</span></span><span style=\"font-size:x-small\">))\r\n<p>{</p>\r\n&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small;color:#008000\">// Backup 4 bytes</span></span></p>\r\n<p><span style=\"font-size:x-small\">\r\n<p>input.Position -= 4;</p>\r\n&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small;color:#008000\">// Now start parsing WAVE file</span></span></p>\r\n<p><span style=\"font-size:x-small\">&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span>\r\n<p>&nbsp;</p>\r\n</p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">WaveFormat</span></span><span style=\"font-size:x-small\"> format;&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">long </span></span><span style=\"font-size:x-small\">dataChunkPosition;&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">int</span></span><span style=\"font-size:x-small\"> dataChunkLenght;&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">var</span></span><span style=\"font-size:x-small\"> chunks = </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">new</span></span><span style=\"font-size:x-small\"> </span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">List</span></span><span style=\"font-size:x-small\">&lt;</span><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">RiffChunk</span></span><span style=\"font-size:x-small\">&gt;();&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#2b91af\"><span style=\"font-size:x-small;color:#2b91af\">WaveFileReader</span></span><span style=\"font-size:x-small\">.ReadWaveHeader(input, </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">out</span></span><span style=\"font-size:x-small\"> format, </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">out</span></span><span style=\"font-size:x-small\"> dataChunkPosition, </span><span style=\"font-size:x-small;color:#0000ff\"><span style=\"font-size:x-small;color:#0000ff\">out</span></span><span style=\"font-size:x-small\"> dataChunkLenght, chunks);\r\n<p>&nbsp;</p>\r\n&lt;font size=&quot;2&quot;&gt;\r\n<p>&nbsp;</p>\r\n&lt;/font&gt;</span></p>\r\n<p>&nbsp;</p>\r\n<p><span style=\"font-size:x-small;color:#008000\"><span style=\"font-size:x-small;color:#008000\">// Now read the actual mp3 header</span></span></p>\r\n<p><span style=\"font-size:x-small\">\r\n<p>input.Position = dataChunkPosition;</p>\r\n<p style=\"padding-left:30px\">headerBytes = reader.ReadBytes(4);</p>\r\n<p>}</p>\r\n<p>&nbsp;</p>\r\n<p>.... continue with code</p>\r\n</span></p>",
    "PostedDate": "2009-06-11T11:17:38.59-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "200511",
    "ThreadId": "46568",
    "Html": "<p>Sorry, didn't realize html didn't work</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; public Mp3Frame(Stream input)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; BinaryReader reader = new BinaryReader(input);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // try for a header<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long headerStartPosition = input.Position;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; byte[] headerBytes = reader.ReadBytes(4);</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Added -jam to play wrapped mp3 files via RIFF<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; if ((headerBytes[0] == 'R') &amp;&amp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (headerBytes[1] == 'I') &amp;&amp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (headerBytes[2] == 'F') &amp;&amp;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; (headerBytes[3] == 'F'))<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Backup 4 bytes<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input.Position -= 4;</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Now start parsing<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WaveFormat format;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; long dataChunkPosition;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; int dataChunkLenght;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var chunks = new List&lt;RiffChunk&gt;();</p>\r\n<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; WaveFileReader.ReadWaveHeader(input, out format, out dataChunkPosition, out dataChunkLenght, chunks);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // Now read the actual mp3 header<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; input.Position = dataChunkPosition;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; headerBytes = reader.ReadBytes(4);<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }</p>",
    "PostedDate": "2009-06-11T11:18:42.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "208099",
    "ThreadId": "46568",
    "Html": "<p>thanks for this. your fix will go into a version of NAudio soon</p>\r\n<p>Mark</p>",
    "PostedDate": "2009-07-02T12:23:07.24-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "246750",
    "ThreadId": "46568",
    "Html": "<p>Hi all,</p>\r\n<p>Just wanted to mention that (upper) problems are still present, so&nbsp;anybody who are&nbsp;willing to help are welcome!</p>\r\n<p>Test song (for the second, &quot;acm&quot; problem) can be downloaded here: <a title=\"http://www.4shared.com/file/141403711/3d44bb7/testmp3_banshee_dummy_song.html\" href=\"http://www.4shared.com/file/141403711/3d44bb7/testmp3_banshee_dummy_song.html\">http://www.4shared.com/file/141403711/3d44bb7/testmp3_banshee_dummy_song.html</a><br><br>Cheers</p>",
    "PostedDate": "2009-10-16T17:06:44.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "495551",
    "ThreadId": "46568",
    "Html": "<p>The problems are still present. Noboby has worked on it ?</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2010-09-19T01:02:34.04-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]