[
  {
    "Id": "1482165",
    "ThreadId": "657459",
    "Html": "Hello, the first I'm working with NAudio, so need your help \r<br />\n<br />\nSame way as I got here real-time from default audio source, how can I get two audio wav or mp3 files, in this case must be direct inputs I guess, to play it both simultaneously with real-time value, same way as it shown below, but at the same time, to get current peaks value from each. What and how I have  to use for this goal in my C# Windows Form Application. I was looking for in the sources here, but I found nothing, some examples does not works for me, seems need some setups, so to check everything, better get practical and direct advice <br />\n<pre><code>\nusing NAudio.CoreAudioApi;\nusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Data;\nusing System.Drawing;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing System.Windows.Forms;\n\nnamespace XX_9_REAL_TIME_AUDIO\n{\n    public partial class Form1 : Form\n    {\n        public Form1()\n        {\n            InitializeComponent();\n            MMDeviceEnumerator enumerator = new MMDeviceEnumerator();\n            var devices = enumerator.EnumerateAudioEndPoints(DataFlow.All, DeviceState.Active);\n            comboBox1.Items.AddRange(devices.ToArray());\n        }\n\n        private void timer_Tick(object sender, EventArgs e)\n        {\n            if (comboBox1.SelectedItem != null)\n            {\n                var device = (MMDevice)comboBox1.SelectedItem;\n                progressBar1.Value = (int) (Math.Round(device.AudioMeterInformation.MasterPeakValue * 100 + 0.5));\n\n\n            }\n        }\n    }\n}\n</code></pre>\n\nHere I got wav file, but have no idea how to get real time value for analysis  and how to play another one  at the same time:<br />\n<pre><code>\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing NAudio.Wave;\n\nnamespace NAudioTest\n{\n    class Program\n    {\n        static IWavePlayer waveout;\n        static WaveStream outputStream;\n        static string filename = null;\n\n        static void Main(string[] args)\n        {\n            waveout = new WaveOutEvent();\n\n            filename =&quot;C:\\\\folder\\\\track.wav&quot;;\n\n            outputStream = CreateInputStream(filename);\n\n            try\n            {\n                waveout.Init(outputStream);\n            }\n            catch (Exception ex)\n            {\n                Console.WriteLine(&quot;Error while loading output&quot;);\n                Console.WriteLine(&quot;Details: &quot; + ex.Message);\n                Console.ReadLine();\n                return;\n            }\n\n            Console.WriteLine(&quot;Press [Enter] to start playback&quot;);\n            Console.ReadLine();\n\n            waveout.Play(); //this stops after 1 sec. should it play until i hit enter cause of the next line?\n\n            Console.WriteLine(&quot;Press [Enter] to abort&quot;);\n            Console.ReadLine();\n            waveout.Dispose();\n            Console.ReadLine();\n        }\n\n\n        static WaveStream CreateInputStream(string name)\n        {\n            WaveChannel32 inputStream;\n            if (name.EndsWith(&quot;.wav&quot;))\n            {\n                WaveStream readerStream = new WaveFileReader(name);\n                if (readerStream.WaveFormat.Encoding != WaveFormatEncoding.Pcm)\n                {\n                    readerStream = WaveFormatConversionStream.CreatePcmStream(readerStream);\n                    readerStream = new BlockAlignReductionStream(readerStream);\n                }\n\n                if (readerStream.WaveFormat.BitsPerSample != 16)\n                {\n                    var format = new WaveFormat(readerStream.WaveFormat.SampleRate, 16, readerStream.WaveFormat.Channels);\n                    readerStream = new WaveFormatConversionStream(format, readerStream);\n                }\n                inputStream = new WaveChannel32(readerStream);\n            }\n            else\n            {\n                throw new InvalidOperationException(&quot;Invalid extension&quot;);\n            }\n            return inputStream;\n        }\n    }\n}</code></pre>\n\n",
    "PostedDate": "2016-08-26T15:35:50.883-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1482180",
    "ThreadId": "657459",
    "Html": "&quot;Console.ReadLine&quot; doesnÂ´t block execution, so you almost instantly dispose the WaveOutEvent instance.\r<br />\n<br />\nTo analyze the samples simply extent &quot;outputStream.ToSampleProvider&quot; and pass it withevents to a &quot;NotifyingSampleProvider&quot;. Then Init and play the NotifyingSampleProvider. NotifyingSampleProvider will then raise an event on each sample (pair).<br />\n",
    "PostedDate": "2016-08-27T02:55:51.137-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1482184",
    "ThreadId": "657459",
    "Html": "Hello, thank you for your feedback, as I've said I'm new, and it would be very helpful, if you can show me with given example how to do it following your instructions just for two file inputs real time for example, because I have tried as you said, but seems I'm doing something  wrong.<br />\n",
    "PostedDate": "2016-08-27T07:41:31.043-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]