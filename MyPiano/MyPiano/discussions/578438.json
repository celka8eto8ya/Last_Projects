[
  {
    "Id": "1345362",
    "ThreadId": "578438",
    "Html": "Hi, \r<br />\n<br />\nTrying unsuccessfully to pass audio data collected using the AsioOut object, to an audio out channel on the same device.\r<br />\n<br />\nusing NAudio 1.7.2.19, source code brought into project and re-compiled.\r<br />\n<br />\nWe get data in, from a USB Audio 2.0 interface, six channels in and six channels out, all OK, great, awesome, low latency as expected, etc. \r<br />\n<br />\nProblem is, we need to be able to pass this input stream to an audio out, just as in comes in, and with as small latency as possible, in this platform, which is why we are employing Asio, instead of WaveIn/WaveOut or Wasapi.\r<br />\n<br />\nWe can't seem to get signal out any of the audio output channels.\r<br />\n<br />\nWe set up the AsioOut object as follows:\r<br />\n//source - ASIO\r<br />\nprivate static NAudio.Wave.AsioOut asioSourceStream = null;\r<br />\n<br />\nWe get a list of Asio drivers as follows:\r<br />\n//fill our collection\r<br />\nforeach(var device in AsioOut.GetDriverNames())\r<br />\n{\r<br />\n  latestASIO_Source = device;\r<br />\n  _ASIO_Devices.Add(latestASIO_Source);\r<br />\n  listboxAudioSources.Items.Add(latestASIO_Source);\r<br />\n}\r<br />\n<br />\nThe chosen Asio driver gets assigned to \r<br />\npublic static string AsioInputName = null;\r<br />\n<br />\nWhen the user clicks the button in the GUI to start &quot;listening&quot;, we instantiate the object and set up the event handler as follows:\r<br />\n//instantiate\r<br />\nasioSourceStream = new NAudio.Wave.AsioOut(AsioInputName);\r<br />\n<br />\nWe want to sample at 48kHz, 24bit, and have been collecting data successfully in this format using Asio, but since we were encountering problems with Asio audio out in the same object, I dropped back the sampling to the more standard 44.1kHz, 16bit, which is what we assign the WaveFormat as (note UserChannels = 6)\r<br />\n<br />\n// try 16\r<br />\nNAudio.Wave.WaveFormat format = new NAudio.Wave.WaveFormat(44100, 16, UserChannels);\r<br />\n<br />\nWe then pass this format to \r<br />\nasioSourceStream.InitRecordAndPlayback(MyBuffer, UserChannels, 44100);\r<br />\n<br />\nThen:\r<br />\n//specify the event handler\r<br />\nasioSourceStream.AudioAvailable += asioSourceStream_AudioAvailable;\r<br />\n<br />\n//start recording and playback\r<br />\nasioSourceStream.Play();\r<br />\n<br />\nIn the event handler, we can extract the data in e.OutputBuffers and present to the application, but we want to send this data out the audio output channel(s)\r<br />\n<br />\nI can copy the data over to e.OutputBuffers as follows\r<br />\nfor (int outer_loop = 0; outer_loop &lt; e.InputBuffers.Length; outer_loop++)\r<br />\n{\r<br />\n  Array.Copy(e.InputBuffers, e.OutputBuffers, UserChannels);\r<br />\n}\r<br />\n<br />\nand then raise the flag (or not raise it, same result, no audio output....)\r<br />\ne.WrittenToOutputBuffers = true; \r<br />\n<br />\nTried to copy data over to the output buffers this way also, did not work, syntax problem?\r<br />\nMarshal.Copy(e.InputBuffers[outer_loop], e.OutputBuffers[outer_loop], 0, e.SamplesPerBuffer);\r<br />\n<br />\nIf I step through the code down into \r<br />\ndriver_BufferUpdate(..) in class AsioOut in file AsioOut.c\r<br />\nor\r<br />\nBufferSwitchCallBack(...) in class BufferSwitchCallBack in file ASIODriverExt.cs \r<br />\n<br />\nNothing really jumps out yet\r<br />\n<br />\nAnyone see the missing piece of the puzzle? <br />\n",
    "PostedDate": "2015-01-23T07:37:05.517-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1354990",
    "ThreadId": "578438",
    "Html": "you are not copying over the output buffers. You are copying the array of output buffer pointers, which will have no effect.\r<br />\nThis option is only advised for people who are comfortable for working with pointers. You need to go through each InputBuffer pointer, and copy the number of bytes available from that pointer to the pointer in the corresponding output buffer pointer.<br />\n",
    "PostedDate": "2015-02-23T12:03:40.357-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]