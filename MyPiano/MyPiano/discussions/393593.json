[
  {
    "Id": "905831",
    "ThreadId": "393593",
    "Html": "\r\n<p>I'm having an issue with playing audio that is being captured live from the microphone port.&nbsp; The issue is popping and clicking and skipping when&nbsp;I do certain tasks outside of the application.&nbsp; I am using WaveIn for capturing audio from the\r\n microphone port and DirectSoundOut to play the audio back out to the speakers.</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System; \r\n<span style=\"color:blue\">using</span> System.ComponentModel; \r\n<span style=\"color:blue\">using</span> NAudio.Wave; \r\n \r\n<span style=\"color:blue\">namespace</span> Spectrum.Media \r\n{ \r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> AudioToolbox : Component \r\n    { \r\n        <span style=\"color:blue\">private</span> WaveIn waveIn = <span style=\"color:blue\">null</span>; \r\n        <span style=\"color:blue\">private</span> DirectSoundOut dsOut = <span style=\"color:blue\">null</span>; \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> SampleRate { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; } \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> BitsPerSample { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; } \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">int</span> Channels { <span style=\"color:blue\">get</span>; <span style=\"color:blue\">set</span>; } \r\n \r\n        <span style=\"color:blue\">public</span> AudioToolbox() \r\n        { \r\n            InitializeComponent(); \r\n \r\n            SampleRate = 22050; \r\n            BitsPerSample = 16; \r\n            Channels = 1; \r\n        } \r\n \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> BeginReading(<span style=\"color:blue\">int</span> deviceNumber) \r\n        { \r\n            <span style=\"color:blue\">if</span> (waveIn == <span style=\"color:blue\">null</span>) \r\n            { \r\n                waveIn = <span style=\"color:blue\">new</span> WaveIn(); \r\n                waveIn.DeviceNumber = deviceNumber; \r\n                waveIn.WaveFormat = <span style=\"color:blue\">new</span> NAudio.Wave.WaveFormat(SampleRate, BitsPerSample, Channels); \r\n                waveIn.StartRecording(); \r\n            } \r\n        } \r\n \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> BeginLoopback() \r\n        { \r\n            <span style=\"color:blue\">if</span> (waveIn != <span style=\"color:blue\">null</span> &amp;&amp; dsOut == <span style=\"color:blue\">null</span>) \r\n            { \r\n                WaveInProvider waveInProvider = <span style=\"color:blue\">new</span> WaveInProvider(waveIn); \r\n                dsOut = <span style=\"color:blue\">new</span> DirectSoundOut(DirectSoundOut.DSDEVID_DefaultPlayback, 300); \r\n                dsOut.Init(waveInProvider); \r\n                dsOut.Play(); \r\n            } \r\n        } \r\n \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> EndReading() \r\n        { \r\n            <span style=\"color:blue\">if</span> (waveIn != <span style=\"color:blue\">null</span>) \r\n            { \r\n                waveIn.StopRecording(); \r\n                waveIn.Dispose(); \r\n                waveIn = <span style=\"color:blue\">null</span>; \r\n            } \r\n        } \r\n \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> EndLoopback() \r\n        { \r\n            <span style=\"color:blue\">if</span> (dsOut != <span style=\"color:blue\">null</span>) \r\n            { \r\n                dsOut.Stop(); \r\n                dsOut.Dispose(); \r\n                dsOut = <span style=\"color:blue\">null</span>; \r\n            } \r\n        } \r\n    } \r\n} \r\n\r\n</pre>\r\n</div>\r\n<p>After building this small audio toolbox, I created a simple test application in .NET Framework 4 winforms that simply had a single button on it with a callback:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">void</span> button_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n{\r\n    Spectrum.Media.AudioToolbox atr = <span style=\"color:blue\">new</span> Spectrum.Media.AudioToolbox();\r\n    atr.BeginReading(0);\r\n    atr.BeginLoopback();\r\n}\r\n</pre>\r\n</div>\r\n<p>I ran this application and clicked the button.&nbsp; I could hear audio looping back out to me from the microphone jack just fine.&nbsp; Then I opened the windows file exporer and I quickly minimized/maximized it and the audio began skipping and popping.&nbsp;\r\n Hrmm....&nbsp;</p>\r\n<p>Experimented with the NAudio audio playback demo and it DOESN'T have that issue.&nbsp; So I thought maybe the issue is because the demo is playing from a file and not live data from the microphone.&nbsp; So I modified my code like this to play from a file\r\n instead:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System; \r\n<span style=\"color:blue\">using</span> System.ComponentModel; \r\n<span style=\"color:blue\">using</span> NAudio.Wave; \r\n<span style=\"color:blue\">using</span> NAudio.Wave.SampleProviders;\r\n \r\n<span style=\"color:blue\">namespace</span> Spectrum.Media \r\n{ \r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> AudioToolbox : Component \r\n    { \r\n        <span style=\"color:blue\">private</span> DirectSoundOut dsOut = <span style=\"color:blue\">null</span>;\r\n\r\n        <span style=\"color:blue\">public</span> AudioToolbox() \r\n        { \r\n            InitializeComponent(); \r\n        } \r\n \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> BeginLoopback() \r\n        {\r\n            <span style=\"color:blue\">if</span> (dsOut == <span style=\"color:blue\">null</span>)\r\n            {\r\n                dsOut = <span style=\"color:blue\">new</span> DirectSoundOut(DirectSoundOut.DSDEVID_DefaultPlayback, 300);\r\n                WaveStream fileWaveStream = <span style=\"color:blue\">new</span> Mp3FileReader(<span style=\"color:#a31515\">&quot;C:\\\\Users\\\\Mankus\\\\Music\\\\TestFile.mp3&quot;</span>);\r\n                <span style=\"color:blue\">var</span> waveChannel = <span style=\"color:blue\">new</span> SampleChannel(fileWaveStream);\r\n                dsOut.Init(<span style=\"color:blue\">new</span> SampleToWaveProvider(<span style=\"color:blue\">new</span> MeteringSampleProvider(waveChannel)));\r\n                dsOut.Play();\r\n            } \r\n        } \r\n \r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> EndLoopback() \r\n        {\r\n            <span style=\"color:blue\">if</span> (dsOut != <span style=\"color:blue\">null</span>)\r\n            {\r\n                dsOut.Stop();\r\n                dsOut.Dispose();\r\n                dsOut = <span style=\"color:blue\">null</span>;\r\n            } \r\n        } \r\n    } \r\n} \r\n</pre>\r\n</div>\r\n<p>Low and behold, I don't have the same skipping or popping when I quickly minimize/maximize a window.</p>\r\n<p>So My question is this: how can I avoid this annoying issue of popping and skipping when looping audio through to the speakers from a live microphone jack?</p>\r\n<p>It seems as though NAudio has no problem playing audio out from a file but from the microphone it has this skipping upon doing other tasks on the system.</p>\r\n<p>By the way, I also tested this using WaveOut and WaveOutEvents with the same issue.&nbsp; The NAudio demo also suffers from the same downfall when using the playback demo on any driver type besides DirectSoundOut.</p>\r\n",
    "PostedDate": "2012-08-29T10:30:27.827-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "908753",
    "ThreadId": "393593",
    "Html": "<p>WaveInProvider fills a buffer with audio as it is received. If there is nothing in the buffer, you'll hear a gap in playback. You will probably need to tweak your buffer sizes for input and output latency to get this working smoothly.</p>",
    "PostedDate": "2012-09-05T09:23:17.213-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]