[
  {
    "Id": "161155",
    "ThreadId": "48293",
    "Html": "Using the latest NAudio code base, and using the body of code below to convert a wav file... inside an NUnit Test I receive NO exceptions and the conversion is successful, however inside a Console Application I receive the exception below:<br>\r\n<br>\r\nusing (WaveFileReader sourceStream = new WaveFileReader(location))<br>\r\n{<br>\r\nusing (WaveStream pcmStream = WaveFormatConversionStream.CreatePcmStream(sourceStream))<br>\r\n{<br>\r\n&nbsp; using (WaveFormatConversionStream stream = new WaveFormatConversionStream(new WaveFormat(8000, 8, 1), pcmStream))<br>\r\n&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp; WaveFileWriter.CreateWaveFile(&quot;somefile&quot;, stream);<br>\r\n&nbsp; }<br>\r\n}<br>\r\n}<br>\r\n<br>\r\ncalling WaveFileWriter.CreateWaveFile(...) produces:<br>\r\n<br>\r\nUnhandled Exception: NAudio.MmException: InvalidParameter calling acmStreamPrepareHeader<br>\r\n&nbsp;&nbsp; at NAudio.MmException.Try(MmResult result, String function)<br>\r\n&nbsp;&nbsp; at NAudio.Wave.Compression.AcmStreamHeader.Prepare()<br>\r\n&nbsp;&nbsp; at NAudio.Wave.Compression.AcmStreamHeader.Convert(Int32 bytesToConvert, Int32&amp; sourceBytesConverted)<br>\r\n&nbsp;&nbsp; at NAudio.Wave.Compression.AcmStream.Convert(Int32 bytesToConvert, Int32&amp; sourceBytesConverted)<br>\r\n&nbsp;&nbsp; at NAudio.Wave.WaveFormatConversionStream.Read(Byte[] array, Int32 offset, Int32 count)<br>\r\n<br>\r\nI have debugged both sets of code, but do not see anything odd. What am I missing?<br>\r\n",
    "PostedDate": "2009-02-23T14:50:36.043-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "161346",
    "ThreadId": "48293",
    "Html": "Hi,<br>\r\n<br>\r\nThat certainly is a strange problem. Is it definitely the same file you are trying to convert each time? Does it convert any of the file before raising the exception? What compression is the original WAV file using?<br>\r\n<br>\r\nMark \r\n",
    "PostedDate": "2009-02-24T02:54:57.597-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "161494",
    "ThreadId": "48293",
    "Html": "Hello Mark, This exception occurs with ANY file.<br>\r\n<br>\r\nI used a different overloaded method for waveFormatConversionStream.Read() and passed in a WaveBuffer but received the following exception:<br>\r\n<br>\r\nI set up the following Console Application code in a new project in your solution:<br>\r\n<br>\r\nusing NAudio.Wave;<br>\r\nnamespace NAudioConsole<br>\r\n{<br>\r\n&nbsp;&nbsp;&nbsp; class Program<br>\r\n&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; static void Main(string[] args)<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; {<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; IWaveBuffer buffer = new WaveBuffer(new byte[0]);<br>\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; }<br>\r\n&nbsp;&nbsp;&nbsp; }<br>\r\n}<br>\r\n<br>\r\nwhich produces the following exception:<br>\r\n<br>\r\n<br>\r\n<br>\r\n&quot;Could not load type 'NAudio.Wave.WaveBuffer' from assembly 'NAudio, Version=1.3.4.0, Culture=neutral, PublicKeyToken=null' because it contains an object field at offset 4 that is incorrectly aligned or overlapped by a non-object field.&quot;<br>\r\n<br>\r\nI am on a 64 bit OS, which may be why this exception and the prior occurs. This is currently beyond me, but I did change the FieldOffset to 8 rather than 4 and the exception about field offset disappeared. <br>\r\n<br>\r\n",
    "PostedDate": "2009-02-24T08:36:30.84-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "161535",
    "ThreadId": "48293",
    "Html": "I found these:<br>\r\n<br>\r\n&quot;Strange 64-bit error with LayoutKind.Explicit&quot;<br>\r\nhttp://anotherlab.rajapet.net/2008/10/strange-64-bit-error-with.html<br>\r\n<br>\r\n&quot;TypeLoadException on x64 but is fine on x86 with structlayouts&quot;<br>\r\nhttp://stackoverflow.com/questions/456696/typeloadexception-on-x64-but-is-fine-on-x86-with-structlayouts<br>\r\n<br>\r\nAs a work-around I set the Console Application &quot;Platform Target&quot; as x86 and the conversion was successful.<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n",
    "PostedDate": "2009-02-24T10:10:02.143-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "162091",
    "ThreadId": "48293",
    "Html": "@geiman - it's been confirmed that this change of Platform Target is required for NAudio on all x64 bit platforms. You will get odd exceptions arising based on what you do and if you debug the calls it normally occurs at the time of invoking a local platform API.<br>\r\n",
    "PostedDate": "2009-02-25T14:18:21.77-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "162381",
    "ThreadId": "48293",
    "Html": "Yes, I will try to check in a new version with x86 as the Platform Target soon which will have to do until I can properly test and address all the issues with a native x64 build. Thanks for reporting this though.<br>\r\n<br>\r\nMark<br>\r\n",
    "PostedDate": "2009-02-26T08:54:53.753-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "162549",
    "ThreadId": "48293",
    "Html": "Thanks Mark, much appreciated. <br>\r\n",
    "PostedDate": "2009-02-26T16:29:11.063-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "173038",
    "ThreadId": "48293",
    "Html": "I was able to successfully run subset of NAudio sources on Vista x64. The modification is required in declaration of <em>AcmStreamHeaderStruct</em><br>\r\n<pre>&nbsp;&nbsp;&nbsp; [StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]<br>&nbsp;&nbsp;&nbsp; internal class AcmStreamHeaderStruct {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int cbStruct;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int fdwStatus = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr userData = IntPtr.Zero;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr sourceBufferPointer;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int sourceBufferLength;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int sourceBufferLengthUsed;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr sourceUserData = IntPtr.Zero;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr destBufferPointer;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int destBufferLength;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal int destBufferLengthUsed = 0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr destUserData = IntPtr.Zero;<br><br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved0;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved1;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved2;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved3;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved4;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved5;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved6;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved7;<br> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved8;<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; internal IntPtr reserved9;<br>&nbsp;&nbsp;&nbsp; }</pre>\r\n&nbsp;and in <em>AcmStreamHeader.Prepare()</em><br>\r\n<pre>&nbsp;&nbsp;&nbsp; streamHeader.cbStruct = Marshal.SizeOf(streamHeader);</pre>\r\n",
    "PostedDate": "2009-03-28T03:02:50.407-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]