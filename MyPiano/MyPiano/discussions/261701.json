[
  {
    "Id": "628951",
    "ThreadId": "261701",
    "Html": "\r\n<p>Hello</p>\r\n<p>Ichanged the NAudio Playback function and now it plays sound in a specific device but I want to playback a sound file in two or three external sound cards at the same time and I think that using threads is the solution but I really didn't know how to use\r\n it in the playback code. This is the event makes on button play:</p>\r\n<pre><code><span><pre><div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> PlaybackForm : Form\r\n{\r\n    IWavePlayer waveOut;\r\n    <span style=\"color:blue\">string</span> fileName = <span style=\"color:blue\">null</span>;\r\n    WaveStream mainOutputStream;\r\n    WaveChannel32 volumeStream;\r\n    <span style=\"color:blue\">int</span> _deviceNum;\r\n    <span style=\"color:blue\">int</span> _deviceNum1;\r\n    Thread t1;\r\n    Thread t2;\r\n    <span style=\"color:blue\">public</span> PlaybackForm(<span style=\"color:blue\">int</span> deviceNum,<span style=\"color:blue\">int</span> deviceNum1)\r\n    {\r\n        InitializeComponent();\r\n        _deviceNum = deviceNum;\r\n        _deviceNum1 = deviceNum1;\r\n    }\r\n\r\n\r\n    <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> buttonPlay_Click(<span style=\"color:blue\">object</span> sender, EventArgs e)\r\n    {\r\n        <span style=\"color:blue\">if</span> (waveOut != <span style=\"color:blue\">null</span>)\r\n        {\r\n            <span style=\"color:blue\">if</span> (waveOut.PlaybackState == PlaybackState.Playing)\r\n            {\r\n              <span style=\"color:blue\">return</span>;\r\n            }\r\n            <span style=\"color:blue\">else</span> <span style=\"color:blue\">if</span> (waveOut.PlaybackState == PlaybackState.Paused)\r\n            {\r\n                waveOut.Play();\r\n                <span style=\"color:blue\">return</span>;\r\n            }\r\n        }\r\n\r\n        <span style=\"color:green\">// we are in a stopped state</span>\r\n        <span style=\"color:green\">// TODO: only re-initialise if necessary</span>\r\n\r\n        <span style=\"color:blue\">if</span> (String.IsNullOrEmpty(fileName))\r\n        {\r\n            toolStripButtonOpenFile_Click(sender, e);\r\n        }\r\n        <span style=\"color:blue\">if</span> (String.IsNullOrEmpty(fileName))\r\n        {\r\n            <span style=\"color:blue\">return</span>;\r\n        }\r\n\r\n        <span style=\"color:blue\">try</span>\r\n        {\r\n            CreateWaveOut();\r\n        }\r\n        <span style=\"color:blue\">catch</span> (Exception driverCreateException)\r\n        {\r\n            MessageBox.Show(String.Format(<span style=\"color:#a31515\">&quot;{0}&quot;</span>, driverCreateException.Message));\r\n            <span style=\"color:blue\">return</span>;\r\n        }\r\n\r\n        mainOutputStream = CreateInputStream(fileName);\r\n        trackBarPosition.Maximum = (<span style=\"color:blue\">int</span>)mainOutputStream.TotalTime.TotalSeconds;\r\n        labelTotalTime.Text = String.Format(<span style=\"color:#a31515\">&quot;{0:00}:{1:00}&quot;</span>, (<span style=\"color:blue\">int</span>)mainOutputStream.TotalTime.TotalMinutes,\r\n            mainOutputStream.TotalTime.Seconds);\r\n        trackBarPosition.TickFrequency = trackBarPosition.Maximum / 30;\r\n\r\n        <span style=\"color:blue\">try</span>\r\n        {\r\n            waveOut.Init(mainOutputStream);\r\n        }\r\n        <span style=\"color:blue\">catch</span> (Exception initException)\r\n        {\r\n            MessageBox.Show(String.Format(<span style=\"color:#a31515\">&quot;{0}&quot;</span>, initException.Message), <span style=\"color:#a31515\">&quot;Error Initializing Output&quot;</span>);\r\n            <span style=\"color:blue\">return</span>;\r\n        }\r\n\r\n        <span style=\"color:green\">// not doing Volume on IWavePlayer any more</span>\r\n        volumeStream.Volume = volumeSlider1.Volume;\r\n        waveOut.Play();\r\n    }\r\n\r\n</pre>\r\n</div>\r\n<br></pre>\r\n</span></code></pre>\r\n<p>And this is how to create the waveout:</p>\r\n<pre><code><span>&nbsp; <div style=\"color:black; background-color:white\"><pre><span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CreateWaveOut()\r\n    {\r\n        CloseWaveOut();\r\n        <span style=\"color:blue\">int</span> latency = (<span style=\"color:blue\">int</span>)comboBoxLatency.SelectedItem;\r\n        <span style=\"color:green\">//if (radioButtonWaveOut.Checked)</span>\r\n        {\r\n            <span style=\"color:green\">//WaveCallbackInfo callbackInfo = checkBoxWaveOutWindow.Checked ?</span>\r\n            WaveCallbackInfo callbackInfo = WaveCallbackInfo.FunctionCallback();\r\n            <span style=\"color:green\">// WaveCallbackInfo callbackInfo = WaveCallbackInfo.FunctionCallback();</span>\r\n\r\n            <span style=\"color:green\">// WaveCallbackInfo.NewWindow(): WaveCallbackInfo.FunctionCallback();</span>\r\n            WaveOut outputDevice = <span style=\"color:blue\">new</span> WaveOut(callbackInfo);\r\n            outputDevice.DesiredLatency = latency;\r\n            outputDevice.DeviceNumber = _deviceNum;\r\n            waveOut = outputDevice;\r\n        }\r\n\r\n    }\r\nPlease can you give me an idea?????? it's very important for me.</pre>\r\n<pre>Thank you in advance.</pre>\r\n<pre>Good day</pre>\r\n</div>\r\n</span></code></pre>\r\n",
    "PostedDate": "2011-06-16T14:49:00.787-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]