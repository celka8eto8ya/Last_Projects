[
  {
    "Id": "1007897",
    "ThreadId": "434766",
    "Html": "Hello,\r<br />\n<br />\nUsing 2 DirectSoundOut objects I am trying to repeatedly trigger a short wave file(100ms) clip with sinewave stream. I attempted to use a System.Timer and pass a double interval argument to trigger file play. This is all happening via UI slider control. All attempts have wreaked much havoc in terms of threading conflicts. Would it be better to dump the samples from file into a buffer and call from that? It only needs to play once and then pause apx .5 seconds, play again etc.\r<br />\n<br />\nThanks for your consideration.<br />\n",
    "PostedDate": "2013-02-27T14:40:20.967-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1008868",
    "ThreadId": "434766",
    "Html": "Yes, I usually try to open the output device and create a custom WaveProvider to feed the audio to be played into it. If you need sounds to be playing at the same time you'd need to use the MixingSampleProvider<br />\n",
    "PostedDate": "2013-03-01T07:24:38.593-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1009064",
    "ThreadId": "434766",
    "Html": "Ok, I see. Actually got around the whole timer thing by setting up a global counter that kept track of 2 second clip(as this was total interval between 100ms hit). I stored the 100ms sample integers in static utility class and wrote array of zeros(unititalized) for the difference. Then the global count would store the iteration of 2 second array when the IWaveProvider buffer[] from Read method would fill its 3520/7040 limit. Out of curiosity, are these set in stone, meaning can I alter the buffer size ever?\r<br />\n<br />\nThanks<br />\n",
    "PostedDate": "2013-03-01T14:49:00.363-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1009155",
    "ThreadId": "434766",
    "Html": "No buffer size is constant. You might find BufferedWaveProvider to be helpful here. You can just feed in audio to be played into it, and then use that to drive the DirectSoundOut<br />\n",
    "PostedDate": "2013-03-01T23:59:18.743-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1009365",
    "ThreadId": "434766",
    "Html": "BufferedWaveProvider is perfect. Much obliged. <br />\n",
    "PostedDate": "2013-03-02T17:39:22.17-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]