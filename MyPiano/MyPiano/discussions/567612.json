[
  {
    "Id": "1305335",
    "ThreadId": "567612",
    "Html": "Hello Everyone !! <strong><strong><em>Please Help !!!</em></strong></strong>\r<br />\n<br />\n I was trying to record any audio being played  on my PC and have achieved this using WasapiloopbackCapture........this is the server part.Then I try to stream the recorded audio in WaveInEventArgs buffer via sockets in real time and finally on the client side I want to playback this byte array.I want the byte array to have Stereo audio, possibly it already does.\r<br />\n<br />\nThe code does not work currently apart from recording a stereo wav file to a disk but that part is not needed and commented out. I think the AddSample function is not useful ...I just got it from net. I need to have a low latency therefore I tried to avoid writing to other buffers and then sending them but I maybe wrong in doing so.Also I wanted to utilize the current resources as much as possible. \r<br />\n<br />\nP.S I am a beginner in coding.\r<br />\n<br />\nThe problems I want to clear and understand better:\r<br />\n1)Can I pass WaveInEventArgs buffer on a socket or does it need to be altered first ?? Should I convert the array to short samples ?\r<br />\n2)On the client side how to read the incoming buffer byte array so that it can be played back as a wav or whichever format it is in ??\r<br />\nI cannot determine the format in which wasapi records wav file tried right clicking and checking properties and also used dbpowerAmp.....\r<br />\n3)\r<br />\n<br />\n<br />\n<em>Please ask me if there are any inconsistencies with problem data.......</em><br />\n<pre><code>Server Side\n\nnamespace WpfApplication1\n{\n    /// &lt;summary&gt;\n    /// Interaction logic for MainWindow.xaml\n    /// &lt;/summary&gt;\n    public partial class MainWindow : Window\n    {\n       \n        private WasapiLoopbackCapture capture;\n        private WaveFileWriter writer;\n        static Socket sck;\n        public void Start(string fileName)\n        {\n            capture = new WasapiLoopbackCapture();\n            capture.DataAvailable += CaptureOnDataAvailable;\n            capture.RecordingStopped += CaptureOnRecordingStopped;\n            writer = new WaveFileWriter(fileName, capture.WaveFormat);\n            capture.StartRecording();\n        }\n\n        public void Stop()\n        {\n            capture.StopRecording();\n\n        }\n        private void CaptureOnDataAvailable(object sender, WaveInEventArgs waveInEventArgs)\n        {\n            sck= new Socket(AddressFamily.InterNetwork,SocketType.Stream,ProtocolType.Tcp);\n            sck.Bind(new IPEndPoint(IPAddress.Any, 5554));\n            sck.Listen(10);\n            Socket accept = sck.Accept();\n            sck.Send(waveInEventArgs.Buffer);\n            sck.Close();\n\n\n           // writer.Write(waveInEventArgs.Buffer, 0, waveInEventArgs.BytesRecorded);\n          //sck.Send(waveInEventArgs.Buffer, SocketFlags)\n        }\n        private void CaptureOnRecordingStopped(object sender, StoppedEventArgs stoppedEventArgs)\n        {\n            writer.Dispose();\n            capture.Dispose();\n        }\n\n        private void Button_Click(object sender, System.Windows.RoutedEventArgs e)\n        {\n\n        }\n\n        private void Button_Click_1(object sender, RoutedEventArgs e)\n        {\n            Start(&quot;abc.wav&quot;);\n        }\n      }\n    }\n</code></pre>\n\n<pre><code>namespace Client\n{\n\n    public partial class MainWindow : Window\n    {\n         static Socket sock;\n       static byte[] buffer = null;\n        \n        static void main(string[] args) {\n            Connector();\n\n        }\n       \n\n        public static void Connector()\n        {\n            sock = new Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);\n            IPEndPoint localEndpoint = new IPEndPoint(IPAddress.Parse(&quot;127.0.0.0&quot;), 5554);\n            try\n            {\n                sock.Connect(localEndpoint);\n            }\n            catch\n            {\n                Console.Write(&quot;Unable to connect&quot;);\n\n            }\n            sock.Receive(buffer);\n           \n            sock.Close();\n\n        }\n        \n        public static void AddSamples(byte[] array)\n        {\n\n            BufferedWaveProvider PlayBuffer = new BufferedWaveProvider(new WaveFormat(441000, 16, 2));\n            PlayBuffer.AddSamples(buffer, 0, 8192);\n            WaveOut player = new WaveOut();\n            player.Init(PlayBuffer);\n            player.Play();\n\n        }\n\n        private void Button_Click(object sender, RoutedEventArgs e)\n        {\n            AddSamples(buffer);\n        }\n    }\n\n}\n</code></pre>\n\nThanks in Advance\r<br />\n<br />\nAnurag\r<br />\n<a href=\"mailto:anurag356@gmail.com\" rel=\"nofollow\">anurag356@gmail.com</a><br />\n",
    "PostedDate": "2014-09-16T13:20:55.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]