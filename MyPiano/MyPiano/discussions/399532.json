[
  {
    "Id": "927201",
    "ThreadId": "399532",
    "Html": "\r\n<p>Hi,</p>\r\n<p>I am a newbie and&nbsp; so my knoweldge on sur the language (english and C#) are not perferct, that why i need lot of explanation.</p>\r\n<p><br>\r\nHere is the problem:<br>\r\nI used the kinet service with success for transmitte the video between two PC on the network (WPF application with visual studio 2010).</p>\r\n<p>For&nbsp; audio, the server (pc where is plug the kinect) transmit byte array of sound data over the&nbsp; network.</p>\r\n<p>On the client side there is a event called &quot;Audio frame ready&quot; and really don't know what to put in there for make it working.</p>\r\n<p>I tried different code found over the discussion in Naudio with no success</p>\r\n<p>Here is the code in the client side:</p>\r\n<p></p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">using</span> System;\r\n<span style=\"color:blue\">using</span> System.Collections.Generic;\r\n<span style=\"color:blue\">using</span> System.Linq;\r\n<span style=\"color:blue\">using</span> System.Text;\r\n<span style=\"color:blue\">using</span> System.Windows;\r\n<span style=\"color:blue\">using</span> System.Windows.Controls;\r\n<span style=\"color:blue\">using</span> System.Windows.Data;\r\n<span style=\"color:blue\">using</span> System.Windows.Documents;\r\n<span style=\"color:blue\">using</span> System.Windows.Input;\r\n<span style=\"color:blue\">using</span> System.Windows.Media;\r\n<span style=\"color:blue\">using</span> System.Windows.Media.Imaging;\r\n<span style=\"color:blue\">using</span> System.Windows.Navigation;\r\n<span style=\"color:blue\">using</span> System.Windows.Shapes;\r\n<span style=\"color:blue\">using</span> NetComm;\r\n<span style=\"color:blue\">using</span> Coding4Fun.Kinect.KinectService.Common;\r\n<span style=\"color:blue\">using</span> Coding4Fun.Kinect.KinectService.WpfClient;\r\n<span style=\"color:blue\">using</span> System.IO;\r\n<span style=\"color:blue\">using</span> NAudio.Wave;\r\n<span style=\"color:blue\">using</span> NAudio.CoreAudioApi;\r\n<span style=\"color:blue\">using</span> System.Threading;\r\n<span style=\"color:blue\">using</span> System.Media;\r\n\r\n\r\n<span style=\"color:blue\">namespace</span> clientcommres\r\n{\r\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;summary&gt;</span>\r\n    <span style=\"color:gray\">///</span><span style=\"color:green\"> Logique d'interaction pour MainWindow.xaml</span>\r\n    <span style=\"color:gray\">///</span> <span style=\"color:gray\">&lt;/summary&gt;</span>\r\n    <span style=\"color:gray\">///</span><span style=\"color:green\"> </span>\r\n    <span style=\"color:blue\">public</span> <span style=\"color:blue\">partial</span> <span style=\"color:blue\">class</span> MainWindow : Window\r\n    {\r\n\r\n        WaveFormat toto;\r\n        MemoryStream memoryStream;\r\n        \r\n        <span style=\"color:blue\">string</span> ConvertBytesToString(<span style=\"color:blue\">byte</span>[] bytes)\r\n        {\r\n            <span style=\"color:blue\">return</span> ASCIIEncoding.ASCII.GetString(bytes);\r\n        }\r\n\r\n        <span style=\"color:blue\">byte</span>[] ConvertStringToBytes(<span style=\"color:blue\">string</span> str)\r\n        {\r\n            <span style=\"color:blue\">return</span> ASCIIEncoding.ASCII.GetBytes(str);\r\n        }\r\n\r\n         SoundPlayer myPlayer = <span style=\"color:blue\">new</span> SoundPlayer(<span style=\"color:#a31515\">&quot;myFile.wav&quot;</span>);\r\n        FileStream fs = File.Create(<span style=\"color:#a31515\">&quot;myfile.wav&quot;</span>);\r\n        \r\n        NetComm.Client client = <span style=\"color:blue\">new</span> NetComm.Client();\r\n\r\n\r\n        <span style=\"color:blue\">public</span> MainWindow()\r\n        {\r\n            InitializeComponent();\r\n\r\n\r\n            client.Connected &#43;= <span style=\"color:blue\">new</span> Client.ConnectedEventHandler(client_Connected);\r\n            client.Disconnected &#43;= <span style=\"color:blue\">new</span> Client.DisconnectedEventHandler(client_Disconnected);\r\n            client.DataReceived &#43;= <span style=\"color:blue\">new</span> Client.DataReceivedEventHandler(client_DataReceived);\r\n           \r\n            toto =<span style=\"color:blue\">new</span> WaveFormat(16000,4);\r\n            \r\n        }\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Window_Loaded(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n           \r\n\r\n          \r\n           <span style=\"color:green\">//connect to the host </span>\r\n            client.Connect(<span style=\"color:#a31515\">&quot;192.168.0.23&quot;</span>,2200, <span style=\"color:#a31515\">&quot;Jack&quot;</span>);\r\n            ColorClient colorClient = <span style=\"color:blue\">new</span> ColorClient();\r\n            Coding4Fun.Kinect.KinectService.WpfClient.AudioClient audioClient = <span style=\"color:blue\">new</span> Coding4Fun.Kinect.KinectService.WpfClient.AudioClient();\r\n\r\n            colorClient.ColorFrameReady &#43;= clientColorFrameReady;\r\n            audioClient.AudioFrameReady &#43;= audioClient_AudioFrameReady;\r\n            colorClient.Connect(<span style=\"color:#a31515\">&quot;192.168.0.23&quot;</span>, 4530);\r\n            audioClient.Connect(<span style=\"color:#a31515\">&quot;192.168.0.23&quot;</span>, 4533);\r\n           \r\n        }\r\n\r\n        <span style=\"color:blue\">void</span> audioClient_AudioFrameReady(<span style=\"color:blue\">object</span> sender, AudioFrameReadyEventArgs e)\r\n        {\r\n\r\n\r\n            memoryStream = <span style=\"color:blue\">new</span> MemoryStream(e.AudioFrame.AudioData);\r\n\r\n            <span style=\"color:green\">//memoryStream.Position = 0;</span>\r\n            RawSourceWaveStream waveStream = <span style=\"color:blue\">new</span> RawSourceWaveStream(memoryStream, toto);\r\n            WaveStream conversionStream = WaveFormatConversionStream.CreatePcmStream(waveStream);\r\n            <span style=\"color:blue\">using</span> (WaveStream blockAlignedStream = <span style=\"color:blue\">new</span> BlockAlignReductionStream(conversionStream))\r\n            {\r\n                <span style=\"color:blue\">using</span> (WaveOut waveOut = <span style=\"color:blue\">new</span> WaveOut(WaveCallbackInfo.FunctionCallback()))\r\n                {\r\n                    WaveChannel32 activestream = <span style=\"color:blue\">new</span> WaveChannel32(blockAlignedStream);\r\n                    waveOut.Init(activestream);\r\n                    waveOut.Play();\r\n                    <span style=\"color:blue\">while</span> (waveOut.PlaybackState == PlaybackState.Playing)\r\n                    {\r\n                        System.Threading.Thread.Sleep(100);\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        <span style=\"color:blue\">void</span> clientColorFrameReady(<span style=\"color:blue\">object</span> sender, ColorFrameReadyEventArgs e)\r\n        {\r\n            <span style=\"color:green\">// Video is a WPF or Windows Phone Image control</span>\r\n            image1.Source = e.ColorFrame.BitmapImage;\r\n        }\r\n\r\n        <span style=\"color:blue\">void</span> client_Connected()\r\n        {\r\n            Log.AppendText(<span style=\"color:#a31515\">&quot;Connected successfully!&quot;</span> &#43;\r\n            Environment.NewLine); <span style=\"color:green\">//Updates the log with the current connection state</span>\r\n        }\r\n\r\n        <span style=\"color:blue\">void</span> client_Disconnected()\r\n        {\r\n            Log.AppendText(<span style=\"color:#a31515\">&quot;Disconnected from host!&quot;</span> &#43;\r\n            Environment.NewLine); <span style=\"color:green\">//Updates the log with the current connection state</span>\r\n        }\r\n\r\n        <span style=\"color:blue\">void</span> client_DataReceived(<span style=\"color:blue\">byte</span>[] Data, <span style=\"color:blue\">string</span> ID)\r\n        {\r\n            Log.AppendText(ID &#43; <span style=\"color:#a31515\">&quot;: &quot;</span> &#43; ConvertBytesToString(Data) &#43; Environment.NewLine); <span style=\"color:green\">//Updates the log with the current connection state</span>\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> button1_Click(<span style=\"color:blue\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            client.SendData(ConvertStringToBytes(ChatMessage.Text));\r\n        }\r\n\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> Window_Closing(<span style=\"color:blue\">object</span> sender, System.ComponentModel.CancelEventArgs e)\r\n        {\r\n            <span style=\"color:blue\">if</span> (client.isConnected) client.Disconnect(); <span style=\"color:green\">//Disconnects if the </span>\r\n            <span style=\"color:green\">//client is connected, closing the communication thread</span>\r\n        }\r\n        \r\n       \r\n    }\r\n}\r\n\r\n</pre>\r\n</div>\r\n<p></p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-10-16T02:06:30.65-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "927997",
    "ThreadId": "399532",
    "Html": "<p>to play audio recieved over the network with NAudio, you create a BufferedWaveProvider, and add bytes to that as they become available. Then just pass the buffered wave provider into an instance of WaveOutEvent (please avoid using WaveOut with function callbacks)</p>",
    "PostedDate": "2012-10-17T05:40:53.527-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "932209",
    "ThreadId": "399532",
    "Html": "<p>Thank you Mark for your reponse it's working with he following code:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre>WaveOut wo = <span style=\"color: blue;\">new</span> WaveOut();\r\nWaveFormat wf = <span style=\"color: blue;\">new</span> WaveFormat(16000,1);\r\nBufferedWaveProvider mybufferwp = <span style=\"color: blue;\">null</span>;\r\n\r\n\r\n audioClient.AudioFrameReady += audioClient_AudioFrameReady;\r\n\r\n<span style=\"color: blue;\">void</span> audioClient_AudioFrameReady(<span style=\"color: blue;\">object</span> sender, AudioFrameReadyEventArgs e)\r\n        {\r\n            \r\n            <span style=\"color: blue;\">if</span> (mybufferwp != <span style=\"color: blue;\">null</span>  )\r\n            {\r\n                mybufferwp.AddSamples(e.AudioFrame.AudioData, 0, e.AudioFrame.AudioData.Length);\r\n            }\r\n        }\r\n\r\n <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> ecoute_Click(<span style=\"color: blue;\">object</span> sender, RoutedEventArgs e)\r\n        {\r\n            mybufferwp = <span style=\"color: blue;\">new</span> BufferedWaveProvider(wf);\r\n            mybufferwp.BufferDuration = TimeSpan.FromMinutes(5);\r\n            wo.Init(mybufferwp);\r\n            wo.Play();\r\n        }\r\n        <span style=\"color: blue;\">private</span> <span style=\"color: blue;\">void</span> Window_Closing(<span style=\"color: blue;\">object</span> sender, System.ComponentModel.CancelEventArgs e)\r\n        {\r\n            <span style=\"color: blue;\">if</span> (client.isConnected) client.Disconnect(); <span style=\"color: green;\">//Disconnects if the </span>\r\n            <span style=\"color: green;\">//client is connected, closing the communication thread</span>\r\n            <span style=\"color: blue;\">if</span> (wo.PlaybackState == PlaybackState.Playing)\r\n            {\r\n                wo.Stop();\r\n                wo.Dispose();\r\n                wo = <span style=\"color: blue;\">null</span>;\r\n              \r\n            }\r\n        }\r\n\r\n</pre>\r\n</div>\r\n</p>",
    "PostedDate": "2012-10-25T01:31:56.92-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "932214",
    "ThreadId": "399532",
    "Html": "<p>great! glad you got it working.</p>",
    "PostedDate": "2012-10-25T01:33:33.287-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]