[
  {
    "Id": "1288531",
    "ThreadId": "560753",
    "Html": "I'm recording segments of audio and I use two instances, alternating every few minutes, everything starts well with the recording, the problem is that after about 6 hours from recording an instance recorded larger block and hear the audio repeated parts is heard, reviewing the first segment fault seems to not work the stop that instance, but if others come but twice the normal size. use Â· Audio 1.7 appreciate any help\r<br />\nThis is my code for the instance that usually fails<br />\n<pre><code>private void record()\n        {\n            int channels = 1;//channels 2\n         int NumerDevice2 = Convert.ToInt32(idDevice);\n            waveSource2 = new WaveIn { DeviceNumber = NumerDevice2 }; ;\n            waveSource2.BufferMilliseconds = 2000;\n            waveSource2.WaveFormat = new WaveFormat(8000, 16, channels);// Bitrate WAV 16000 stereo 8000 Mono\n            waveSource2.DataAvailable += new EventHandler&lt;WaveInEventArgs&gt;(waveSource2_DataAvailable);\n            waveSource2.RecordingStopped += new EventHandler&lt;StoppedEventArgs&gt;(waveSource2_RecordingStopped);\n            waveSource2.StartRecording();\n            waveFile2 = new WaveFileWriter(outputFilename, waveSource2.WaveFormat);\n}\nvoid waveSource_DataAvailable(object sender, WaveInEventArgs e)\n       {\n           if (waveFile != null)\n           {\n               waveFile.Write(e.Buffer, 0, e.BytesRecorded);\n               waveFile.Flush();\n           }\n       }\nvoid waveSource_RecordingStopped(object sender, StoppedEventArgs e)\n       {\n             \n           if (waveSource != null)\n           {\n               waveSource.Dispose();\n               waveSource = null;\n           }\n if (waveFile != null)\n           {\n               waveFile.Dispose();\n               waveFile.Close();\n               waveFile = null;\n           }\n}\n private void stoprecording()\n       {\n            \n           if (waveSource != null)\n            {\n              waveSource.StopRecording();\n              waveSource.Dispose();\n              waveSource = null;\n            \n           }</code></pre>\n\n",
    "PostedDate": "2014-08-09T15:50:29.713-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]