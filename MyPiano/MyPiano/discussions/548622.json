[
  {
    "Id": "1256199",
    "ThreadId": "548622",
    "Html": "Hi there, I need a little help with this code, I'm capturing the audio loopback (Wasapi) into a file, but I need to be able to set or convert the audio format before writing the file, WasapiLoopbackCapture does not allow to set the WaveFormat, so I'm trying to convert the audio stream before it gets written into the file, so far the error I get is: &quot;Unable to read beyond the end of the stream.&quot;<br />\n<pre><code>    public partial class Form1 : Form\n    {\n        private IWaveIn waveIn;\n        private WaveFileWriter writer;\n        private WaveFileReader reader;\n        private string outputFilename;\n        private readonly string outputFolder;\n    \n    \n        public Form1()\n        {\n            InitializeComponent();\n    \n            outputFolder = Path.Combine(Path.GetTempPath(), &quot;AudioTempFolder&quot;);\n            Directory.CreateDirectory(outputFolder);\n        }\n    \n    \n        void OnRecordingStopped(object sender, StoppedEventArgs e)\n        {\n            if (this.InvokeRequired)\n            {\n                this.BeginInvoke(new EventHandler&lt;StoppedEventArgs&gt;(OnRecordingStopped), sender, e);\n            }\n            else\n            {\n                Cleanup();\n                if (e.Exception != null)\n                {\n                    MessageBox.Show(String.Format(&quot;A problem was encountered during recording {0}&quot;,\n                                                  e.Exception.Message));\n                }\n            }\n        }\n    \n        private void Cleanup()\n        {\n            if (waveIn != null)\n            {\n                waveIn.Dispose();\n                waveIn = null;\n            }\n            if (writer != null)\n            {\n                writer.Close();\n                writer = null;\n            }\n        }\n    \n        void OnDataAvailable(object sender, WaveInEventArgs e)\n        {\n            if (this.InvokeRequired)\n            {\n                //Debug.WriteLine(&quot;Data Available&quot;);\n                this.BeginInvoke(new EventHandler&lt;WaveInEventArgs&gt;(OnDataAvailable), sender, e);\n            }\n            else\n            {\n                //Debug.WriteLine(&quot;Flushing Data Available&quot;);  \n                writer.Write(e.Buffer, 0, e.BytesRecorded);\n                label1.Text = e.BytesRecorded.ToString();\n                int secondsRecorded = (int)(writer.Length / writer.WaveFormat.AverageBytesPerSecond);\n                if (secondsRecorded &gt;= 30)\n                {\n                    StopRecording();\n                }\n            }\n    \n    \n        }\n    \n        void StopRecording()\n        {\n            Debug.WriteLine(&quot;StopRecording&quot;);\n            waveIn.StopRecording();\n        }\n    \n    \n        private void OnButtonStartRecording_Click(object sender, EventArgs e)\n        {\n            if (waveIn == null)\n            {\n                waveIn = new WasapiLoopbackCapture();\n    \n                MemoryStream msOut = new MemoryStream();\n                writer = new WaveFileWriter(msOut, waveIn.WaveFormat);\n    \n                waveIn.DataAvailable += OnDataAvailable;\n                waveIn.RecordingStopped += OnRecordingStopped;\n                waveIn.StartRecording();\n    \n    \n                reader = new WaveFileReader(msOut);\n                var newFormat = new WaveFormat(8000, 16, 2);   \n    \n                using (var conversionStream = new WaveFormatConversionStream(newFormat, reader))\n                {\n                    WaveFileWriter.CreateWaveFile(Path.Combine(outputFolder, outputFilename), conversionStream);\n                }               \n            }\n        }\n    \n        private void OnButtonStopRecording_Click(object sender, EventArgs e)\n        {\n            if (waveIn != null)\n            {\n                StopRecording();\n            }\n        }\n    \n    }</code></pre>\n\nPlease help!<br />\n",
    "PostedDate": "2014-06-13T15:38:31.31-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1273593",
    "ThreadId": "548622",
    "Html": "have a look at my recent blog post on <a href=\"http://www.markheath.net/post/input-driven-resampling-with-naudio-using-acm\" rel=\"nofollow\">input driven resampling</a><br />\n",
    "PostedDate": "2014-07-17T08:33:39.83-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]