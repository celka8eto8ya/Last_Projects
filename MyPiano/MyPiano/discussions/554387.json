[
  {
    "Id": "1278313",
    "ThreadId": "554387",
    "Html": "Hi Mark,\r<br />\n<br />\nI developer a Media player using naudio software.If we play single player then no problem arise but if we play multiple instances the app randomly crashing.\r<br />\n<br />\nHow to solve the problem please suggest.<br />\n",
    "PostedDate": "2014-07-28T02:14:41.207-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1278411",
    "ThreadId": "554387",
    "Html": "Well, what exception are you getting? What is the error message? Where does the stack trace point to? What output device model are you using?<br />\n",
    "PostedDate": "2014-07-28T09:02:32.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1278612",
    "ThreadId": "554387",
    "Html": "I not get any error on the my Audioplaybackpanel.cs class.The moto of my project is the player continue to play all day and night.Song start from cue in time and end in cue out time.<br />\n<br />\nhere is the crash report <br />\nFaulting application name: BMAsia Media Player.exe, version: 1.0.0.0, time stamp: 0x53ce37ae<br />\nFaulting module name: comctl32.dll, version: 6.10.7601.17514, time stamp: 0x4ce7b71c<br />\nException code: 0xc00000fd<br />\n<br />\n<br />\nWe use Gigaport HD version3 for sound device it is a multi cahnnel sound port.<br />\n<br />\n```\n private  void TimerEventProcessor(Object myObject,EventArgs myEventArgs)<br />\n<pre><code>    {\n        try\n        {\n            if (objAudioPlaybackPanel.CurrentlyActiveWaveOut1 == true)\n            {\n                if (objAudioPlaybackPanel.lstSongDetails.Items.Count &lt;= 0)\n                {\n                    return;\n                }\n                if (objAudioPlaybackPanel.waveOut != null &amp;&amp; objAudioPlaybackPanel.fileWaveStream != null &amp;&amp; objAudioPlaybackPanel.waveChannel != null)\n                {\n                    TimeSpan currentTime = (objAudioPlaybackPanel.waveOut.PlaybackState == PlaybackState.Stopped) ? TimeSpan.Zero : objAudioPlaybackPanel.fileWaveStream.CurrentTime;\n                    TimeSpan remainingTime = (objAudioPlaybackPanel.waveOut.PlaybackState == PlaybackState.Stopped) ? TimeSpan.Zero : TimeSpan.FromSeconds(objAudioPlaybackPanel.waveChannel.FadeOutSongTime) - objAudioPlaybackPanel.fileWaveStream.CurrentTime;\n                    if ((objAudioPlaybackPanel.waveChannel2 != null) &amp;&amp; ((int)Math.Round(objAudioPlaybackPanel.fileWaveStream2.CurrentTime.TotalSeconds) &gt;= (int)Math.Round(objAudioPlaybackPanel.fileWaveStream2.TotalTime.TotalSeconds))) // (int)Math.Round(waveChannel2.FadeOutSongTime)\n                    {\n                        objAudioPlaybackPanel.CloseWaveOut2();\n                        objAudioPlaybackPanel.waveChannel2 = null;\n                    }\n                    if (objAudioPlaybackPanel.waveChannel2 != null)\n                    {\n                        objAudioPlaybackPanel.waveChannel2.Volume = objAudioPlaybackPanel.waveChannel2.Volume * 0.7F; //volumeSlider1.Volume                            \n                    }\n\n                    if (objAudioPlaybackPanel.waveChannel.CurrentSongTime &gt;= (int)Math.Round(objAudioPlaybackPanel.waveChannel.FadeOutSongTime - 0.6) &amp;&amp; objAudioPlaybackPanel.ssss == false &amp;&amp; objAudioPlaybackPanel.intoLoop == false) //- 1.5\n                    {\n                        objAudioPlaybackPanel.intoLoop = true;\n\n                    }\n                    if (objAudioPlaybackPanel.waveChannel.CurrentSongTime &gt;= (int)Math.Round(objAudioPlaybackPanel.waveChannel.FadeOutSongTime - 0.6) &amp;&amp; objAudioPlaybackPanel.ssss == false) //- 1.5\n                    {\n                        if (objAudioPlaybackPanel.waveChannel.CurrentSongTime != 0.0)\n                        {\n                            objAudioPlaybackPanel.intoLoop = false;\n\n\n                            if (objAudioPlaybackPanel.lstSongDetails.Items.Count &gt; 0)//changes\n                            {\n                                //if (waveChannel.CurrentSongTime != 0.0)\n                                //{\n                                objAudioPlaybackPanel.lstSongDetails.Invoke(new System.Windows.Forms.MethodInvoker(delegate\n                                {\n                                    objAudioPlaybackPanel.lstSongDetails.Items.RemoveAt(0);\n                                }));\n                                //}\n                            }\n\n                            for (int i = 0; i &lt; 2 - objAudioPlaybackPanel.lstSongDetails.Items.Count; i++)\n                            {\n                                objAudioPlaybackPanel.AddNewSongOnListView();\n                            }\n\n                            if (objAudioPlaybackPanel.lstSongDetails.Items.Count &gt; 0)\n                            {\n                                //objAudioPlaybackPanel.fileName = objAudioPlaybackPanel.Application_StartUpPath + &quot;\\\\Current Song.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\\\\&quot; + objAudioPlaybackPanel.lstSongDetails.Items[0].SubItems[1].Text + &quot;.mp3&quot;;// listSongDetails[CurrentPlaysongIndex].Name;\n                                objAudioPlaybackPanel.lstSongDetails.Invoke(new System.Windows.Forms.MethodInvoker(delegate\n                                {\n                                    objAudioPlaybackPanel.fileName = AudioPlaybackPanel.Application_StartUpPath + &quot;\\\\Current Song.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\\\\&quot; + objAudioPlaybackPanel.lstSongDetails.Items[0].SubItems[1].Text + &quot;.mp3&quot;;// listSongDetails[CurrentPlaysongIndex].Name;\n                                }));\n                            }\n                            if (objAudioPlaybackPanel.fileName.Trim() == &quot;&quot;)\n                            {\n                                objAudioPlaybackPanel.AddNewSongOnListView();\n                                objAudioPlaybackPanel.lstSongDetails.Invoke(new System.Windows.Forms.MethodInvoker(delegate\n                                {\n                                    objAudioPlaybackPanel.fileName = AudioPlaybackPanel.Application_StartUpPath + &quot;\\\\Current Song.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\\\\&quot; + objAudioPlaybackPanel.lstSongDetails.Items[0].SubItems[1].Text + &quot;.mp3&quot;;// listSongDetails[CurrentPlaysongIndex].Name;\n                                }));\n                            }\n                            else\n                            {\n                                if (!File.Exists(objAudioPlaybackPanel.fileName))\n                                {\n                                    objAudioPlaybackPanel.lstSongDetails.Invoke(new System.Windows.Forms.MethodInvoker(delegate\n                                    {\n                                        objAudioPlaybackPanel.fileName = AudioPlaybackPanel.Application_StartUpPath + &quot;\\\\Songs.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\\\\&quot; + objAudioPlaybackPanel.lstSongDetails.Items[0].SubItems[1].Text + &quot;.mp3&quot;;\n                                    }));\n                                    objAudioPlaybackPanel.DecryptCurrentPlayFile();\n                                }\n                            }\n                            objAudioPlaybackPanel.lstSongDetails.Invoke(new System.Windows.Forms.MethodInvoker(delegate\n                            {\n                                if (objAudioPlaybackPanel.lstSongDetails.Items.Count &lt;= 0)\n                                {\n                                    return;\n                                }\n                            }));\n                            if (objAudioPlaybackPanel.RestartPlayerAfterBreak == false)\n                            {                                \n\n                                objAudioPlaybackPanel.PlayNextSong2();\n                                //objAudioPlaybackPanel.CloseWaveOut();//07-07-2014\n                                //objAudioPlaybackPanel.waveChannel = null;//07-07-2014\n                            }\n                            else\n                            {\n                                myTimer.Stop();\n                                objAudioPlaybackPanel.timer2.Start();\n                                if (objAudioPlaybackPanel.waveOut != null)\n                                {\n                                    objAudioPlaybackPanel.waveOut.Stop();\n                                }\n                                if (objAudioPlaybackPanel.waveOut2 != null)\n                                {\n                                    objAudioPlaybackPanel.waveOut2.Stop();\n                                }\n                            }\n                        }\n\n                    }\n                    else\n                    {\n                        try\n                        {\n                            objAudioPlaybackPanel.songPositionSlider1.CuttentTime = (int)((currentTime.TotalSeconds * 580) / objAudioPlaybackPanel.songPositionSlider1.SongLength);\n                        }\n                        catch (Exception ex)\n                        {\n                            objAudioPlaybackPanel.obj_Global.WriteErrorLogFile(&quot;AudioPlayBackPanel&quot;, &quot;timer1_Tick()&quot; + objAudioPlaybackPanel.objMainForm.PlayerName, ex.Message);\n                            objAudioPlaybackPanel.lstSongDetails.Invoke(new System.Windows.Forms.MethodInvoker(delegate\n                            {\n                                objAudioPlaybackPanel.fileName = AudioPlaybackPanel.Application_StartUpPath + &quot;\\\\Current Song.{2559a1f2-21d7-11d4-bdaf-00c04f60b9f0}\\\\&quot; + objAudioPlaybackPanel.lstSongDetails.Items[0].SubItems[1].Text + &quot;.mp3&quot;;\n                            }));\n                            if (!File.Exists(objAudioPlaybackPanel.fileName))\n                            {\n                                objAudioPlaybac</code></pre>\n\n",
    "PostedDate": "2014-07-28T22:53:05.78-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1278619",
    "ThreadId": "554387",
    "Html": "Here is the one error and this error come after 1 or two days not instantly so no issue found on on debugging:<br />\n<br />\nWaveOutBuffer class - WriteToWaveOut() - Attempted to read or write protected memory. This is often an indication that other memory is corrupt.<br />\n<br />\n WaveOutEvent - Init() - AlreadyAllocated calling waveOutOpen<br />\n WaveOutEvent - PlaybackThread() - Object reference not set to an instance of an object.<br />\n   InvalidParameter calling acmStreamClose<br />\n<br />\n<br />\nhere is the code to close waveout:<br />\n<pre><code>  public void CloseWaveOut2()\n        {\n            try\n            {\n                if (waveOut2 != null)\n                {\n                    waveOut2.Stop();\n                }\n                if (fileWaveStream2 != null)\n                {\n                    // this one really closes the file and ACM conversion\n                    fileWaveStream2.Dispose();\n                    wavechannel32_2.Dispose();\n                    compress2.Dispose();\n                    // this.setVolumeDelegate = null;\n                    // this.setNormalizeDelegate = null;\n                }\n                if (waveOut2 != null)\n                {\n                    waveOut2.Dispose(true);\n                    waveOut2 = null;\n                }\n            }\n            catch (Exception ex)\n            {\n                obj_Global.WriteErrorLogFile(&quot;AudioPlayBackPanel&quot;, &quot;CloseWaveOut2()&quot;, ex.Message);\n            }\n        }</code></pre>\n\nWe can't dispose wave out object because of crossover of two song.Crossover means we remove silent bit first and last of the song.Song start from (cue in(remove start silance bit)) time and end in (cue out(remove last silance bit)) time.If first song reach to cue out time then second waveout2 object create and start the second song.Then decrease the volume of first song.Then if First song Over or equal of total time then we release the first object.Then same process follow.<br />\n<br />\nNow problem is that after couple of days(Not instantly) One or multiple player stops due to this error:<br />\n<br />\n7/31/2014 11:02:15 AM - WaveOutEvent - Init() - AlreadyAllocated calling waveOutOpen<br />\n7/31/2014 11:02:15 AM - WaveOutEvent - PlaybackThread() - Object reference not set to an instance of an object.<br />\nWe  create two wave out object.<br />\n public WaveOutEvent waveOut;<br />\n  public WaveOutEvent waveOut2;<br />\n<br />\nHow to overcome this scenario please suggest me immediately.<br />\n<br />\nDo you know why this error occurred in windows?<br />\n<br />\n&quot;A problem caused this program to stop interacting with Windows.This error Hags all player.<br />\n",
    "PostedDate": "2014-07-28T23:14:29.62-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1279546",
    "ThreadId": "554387",
    "Html": "Are the two instances of WaveOutEvent both playing to the same soundcard? I would recommend just having one WaveOutEvent and creating a never-ending sampleprovider that  handles the crossover of song (eg with FadeInOutSampleProvider).\r<br />\n<br />\nAnother thing you could try is a different output model such as DirectSoundOut and see if that has the same issue.<br />\n",
    "PostedDate": "2014-07-31T05:26:34.777-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1279581",
    "ThreadId": "554387",
    "Html": "Hi Mark,<br />\n<br />\nYou recommended me &quot;creating a never-ending sampleprovider that handles the crossover of song (eg with FadeInOutSampleProvider)&quot;. I have a question that How to use Sample provider that handled crossover of song(eg with FadeInOutSampleProvider)?<br />\n<br />\nHow We can use &quot;DirectSoundOut&quot; class because we can't find out device latency and device number using this class:<br />\n<pre><code> [Export(typeof(IOutputDevicePlugin))]\n    class WaveOutPlugin : IOutputDevicePlugin\n    {\n        private WaveOutSettingsPanel waveOutSettingsPanel;\n\n        public WaveOutEvent CreateDevice(int latency, int SelectedDeviceNumber)\n        {\n            WaveOutEvent device;\n            WaveCallbackStrategy strategy = waveOutSettingsPanel.CallbackStrategy;\n            if (strategy == WaveCallbackStrategy.Event)\n            {\n                var waveOut = new WaveOutEvent();\n                waveOut.DeviceNumber = SelectedDeviceNumber;\n                waveOut.DesiredLatency = latency;\n                device = waveOut;\n            }\n            else\n            {\n                //WaveCallbackInfo callbackInfo = strategy == WaveCallbackStrategy.NewWindow ? WaveCallbackInfo.NewWindow() : WaveCallbackInfo.FunctionCallback();\n                WaveOutEvent outputDevice = new WaveOutEvent();\n                outputDevice.DeviceNumber = SelectedDeviceNumber;\n                outputDevice.DesiredLatency = latency;\n                device = outputDevice;\n                outputDevice=null;\n            }\n            // TODO: configurable number of buffers\n\n            return device;\n        }</code></pre>\n\n",
    "PostedDate": "2014-07-31T06:57:44.19-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1279724",
    "ThreadId": "554387",
    "Html": "Yes, DirectSound doesn't work with device numbers. But we are trying to narrow down your issue, so try a long-running playback with it. Also, have you tried a long-running playback with WaveOutEvent just being fed by a SignalGenerator? How long can that play for before a crash?\r<br />\n<br />\nTo handle crossover with sample providers, you can make use of MixingSampleProvider, or write your own mixer if you prefer.\r<br />\n<br />\nMark<br />\n",
    "PostedDate": "2014-07-31T13:37:58.44-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1279850",
    "ThreadId": "554387",
    "Html": "Hi mark,<br />\n<br />\nWe can't use directSounddevice class because we working on multiple channel so we need multiple sound driver.(Please suggest how to pass  Guid device from audio playbackpanel). <br />\n<br />\nYes we have tried a long-running playback with WaveOutEvent But player crash,hangs or stop after1, 2,3 or 4 days But not all player only two or three player. But we can't understand  &quot;being fed by a SignalGenerator&quot;.<br />\n<br />\nWe Implement crossover using Timer control.Have you provide any code that implement Crossover using timer control.Please help me.We are new in the sound code.<br />\n<br />\nHere is the code for waveout creation<br />\n<pre><code> public void CreateWaveOut()\n        {\n            try\n            {\n                CloseWaveOut();\n                int latency = (int)comboBoxLatency.SelectedItem;\n                this.waveOut = SelectedOutputDevicePlugin.CreateDevice(latency, objsetting.outputdevice);\n                if (listSongDetails.Count &gt; 0)\n                {\n                    this.Invoke(new MethodInvoker(delegate\n                    {\n                        if (lstSongDetails.Items.Count &gt; 0)//changes\n                        {\n                            lblCurrentPlaying.Text = lstSongDetails.Items[0].SubItems[1].Text.Replace(&quot;.mp3&quot;, &quot;&quot;);\n                        }// listSongDetails[CurrentPlaysongIndex].Name;\n                    }));\n                }\n            }\n            catch (Exception ex)\n            {\n                obj_Global.WriteErrorLogFile(&quot;AudioPlayBackPanel&quot;, &quot;CreateWaveOut()&quot; + objMainForm.PlayerName, ex.Message);\n            }\n        }</code></pre>\n\nNow my code:<br />\n<pre><code> public void CreateWaveOut()\n        {\n            try\n            {\n                CloseWaveOut();\n                int latency = (int)comboBoxLatency.SelectedItem;\n                //this.waveOut = SelectedOutputDevicePlugin.CreateDevice(latency, objsetting.outputdevice);\n                this.waveOut = new DirectSoundOut(latency);\n                if (listSongDetails.Count &gt; 0)\n                {\n                    this.Invoke(new MethodInvoker(delegate\n                    {\n                        if (lstSongDetails.Items.Count &gt; 0)//changes\n                        {\n                            lblCurrentPlaying.Text = lstSongDetails.Items[0].SubItems[1].Text.Replace(&quot;.mp3&quot;, &quot;&quot;);\n                        }// listSongDetails[CurrentPlaysongIndex].Name;\n                    }));\n                }\n            }\n            catch (Exception ex)\n            {\n                obj_Global.WriteErrorLogFile(&quot;AudioPlayBackPanel&quot;, &quot;CreateWaveOut()&quot; + objMainForm.PlayerName, ex.Message);\n            }\n        }</code></pre>\n\n",
    "PostedDate": "2014-08-01T00:18:11.697-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1279950",
    "ThreadId": "554387",
    "Html": "The NAudio demo includes demonstrations of how to use DirectSoundOut. Use DirectSoundOut.Devices to find the available devices on your system.\r<br />\n<br />\nBy signalgenerator I mean use the SignalGenerator that is part of NAudio. Something like this (pseudocode):<br />\n<pre><code>var player = new WaveOutEvent();\nvar signalGenerator = new SignalGenerator();\nplayer.Init(signalGenerator);\nplayer.Play();</code></pre>\n\nand see how long that can go for. If there is an error in the interop / pinning somewhere, then this simple code should also fail over time. Otherwise it is to do with using multiple playback devices.\r<br />\n<br />\nI'd also recommend if at all possible you invest  in a month's pluralsight subscription and watch my <a href=\"http://pluralsight.com/training/Courses/TableOfContents/digital-audio-fundamentals\" rel=\"nofollow\">digital audio fundamentals</a> and <a href=\"http://pluralsight.com/training/Courses/TableOfContents/audio-programming-naudio\" rel=\"nofollow\">Audio programming with NAudio</a> courses. It's 10 hours of material and will give you a much stronger understanding of how to develop audio applications.<br />\n",
    "PostedDate": "2014-08-01T05:08:30.937-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1280757",
    "ThreadId": "554387",
    "Html": "Hi Mark,\r<br />\nI want to know any method or event to catch abnormal stop player.Please suggest.<br />\n",
    "PostedDate": "2014-08-02T03:42:20.227-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1280773",
    "ThreadId": "554387",
    "Html": "are you subscribing to the PlaybackStopped event. That is how you detect playback stopped in NAudio<br />\n",
    "PostedDate": "2014-08-02T04:01:48.547-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1280910",
    "ThreadId": "554387",
    "Html": "<pre><code>    void Assemble_list_of_all_devices()\n    {\n        input_devices_count = 0;\n        output_devices_count = 0;\n        //---------------------wasapi---------------------\n        if (wasapi_available)\n        {\n            var enumerator = new MMDeviceEnumerator();\n            var endPoints = enumerator.EnumerateAudioEndPoints(DataFlow.Capture, DeviceState.Active);\n            foreach (MMDevice endPoint in endPoints)\n            {\n                if (input_devices_count &gt;= input_devices.Length) continue;\n                input_devices[input_devices_count].clean();\n                input_devices[input_devices_count].mode = 2;\n                input_devices[input_devices_count].wasapi_mmdevice = endPoint;\n                input_devices[input_devices_count].wasapi_id = endPoint.ID;\n                input_devices[input_devices_count].title = endPoint.FriendlyName;\n                //input_devices[input_devices_count].title += endPoint.DeviceFriendlyName;\n                input_devices_count++;\n            }\n            endPoints = null;\n            endPoints = enumerator.EnumerateAudioEndPoints(DataFlow.Render, DeviceState.Active);\n            foreach (MMDevice endPoint in endPoints)\n            {\n                if (output_devices_count &gt;= output_devices.Length) continue;\n                output_devices[output_devices_count].clean();\n                output_devices[output_devices_count].mode = 2;\n                output_devices[output_devices_count].wasapi_mmdevice = endPoint;\n                output_devices[output_devices_count].wasapi_id = endPoint.ID;\n                output_devices[output_devices_count].title = endPoint.FriendlyName;\n                //output_devices[output_devices_count].title += endPoint.DeviceFriendlyName;\n                output_devices_count++;\n            }\n\n        }\n\n        //------------------directsound-------------------\n        if (true)//if ds_avaiable\n        {\n            int _dso_count = DirectSoundOut.Devices.Count();\n            foreach (DirectSoundDeviceInfo di in DirectSoundOut.Devices)\n            {\n                if (output_devices_count &gt;= output_devices.Length) continue;\n                output_devices[output_devices_count].clean();\n                output_devices[output_devices_count].mode = 1;\n                output_devices[output_devices_count].dsguid = di.Guid;\n                output_devices[output_devices_count].title = di.Description;\n                output_devices_count++;\n            }\n        }\n\n        //--------------------wave in---------------------\n        if (true)//if wave_in_avaiable\n        {\n            for (int i = 0; i &lt; WaveInEvent.DeviceCount; i++)\n            {\n                if (input_devices_count &gt;= input_devices.Length) continue;\n                WaveInCapabilities capabilities_i = WaveInEvent.GetCapabilities(i);\n                input_devices[input_devices_count].clean();\n                input_devices[input_devices_count].mode = 0;\n                input_devices[input_devices_count].wave_device_ind = i;\n                input_devices[input_devices_count].dsguid = capabilities_i.ProductGuid;\n                input_devices[input_devices_count].title = capabilities_i.ProductName;\n                input_devices_count++;\n            }\n        }\n\n    }\n\n</code></pre>\n\n////////////////////////<br />\n<pre><code>    device_item[] input_devices = null;\n    device_item[] output_devices = null;\n    int input_devices_count = 0;\n    int output_devices_count = 0;</code></pre>\n\n//---------<br />\n<pre><code>        input_devices = new device_item[129];\n        output_devices = new device_item[129];\n        for (int i = 0; i &lt; input_devices.Length; i++) { input_devices[i] = new device_item(); }\n        for (int i = 0; i &lt; output_devices.Length; i++) { output_devices[i] = new device_item(); }\n\n\n    public class device_item\n    {\n        public device_item()\n        {\n            //init_device_item();\n        }\n        public int mode;  //0 wave, 1 directsound, 2 wasapi\n        public int wave_device_ind;\n        public Guid dsguid;\n        public string title;\n        public string wasapi_id;\n        public MMDevice wasapi_mmdevice;\n\n        public void clean()\n        {\n            mode = -1;\n            wave_device_ind = 0;\n            dsguid = Guid.Empty;\n            //isdefault = false;\n            title = &quot;&quot;;\n            wasapi_id = &quot;&quot;;\n            wasapi_mmdevice = null;\n        }\n        public void copy_from(device_item source_item)\n        {\n            this.mode = source_item.mode;\n            this.wave_device_ind = source_item.wave_device_ind;\n            this.dsguid = source_item.dsguid;\n            //isdefault = ;\n            this.title = source_item.title;\n            this.wasapi_id = source_item.wasapi_id;\n            this.wasapi_mmdevice = source_item.wasapi_mmdevice;\n        }\n    }\n\n            //---------on show selection combobox\n\n            int o_found_ind = -1;\n            int i_found_ind = -1;\n\n            f2.output_device_comboBox.Items.Clear();\n\n            for (int i = 0; i &lt; output_devices_count; i++)\n            {\n\n                if (output_devices[i].mode == 1)\n                {\n                    f2.output_device_comboBox.Items.Add(&quot;[DirectSound] &quot; + output_devices[i].title);\n                    if (current_output_device_data.mode == output_devices[i].mode) if (current_output_device_data.dsguid == output_devices[i].dsguid) o_found_ind = i;\n                }\n                else if (output_devices[i].mode == 2)\n                {\n                    f2.output_device_comboBox.Items.Add(&quot;[WasApi] &quot; + output_devices[i].title);\n                    if (current_output_device_data.mode == output_devices[i].mode) if (current_output_device_data.wasapi_id == output_devices[i].wasapi_id) o_found_ind = i;\n                }\n                else\n                {\n                    //f2.output_device_comboBox.Items.Add(output_devices[i].title);\n                }\n            }\n\n            //find index in list of all devices\n            if (o_found_ind &gt;= 0) f2.output_device_comboBox.SelectedIndex = o_found_ind;\n\n\n            f2.input_device_comboBox.Items.Clear();\n            for (int i = 0; i &lt; input_devices_count; i++)\n            {\n                if (input_devices[i].mode == 0)\n                {\n                    f2.input_device_comboBox.Items.Add(&quot;[WaveIn] &quot; + input_devices[i].title);\n                    if (current_input_device_data.mode == input_devices[i].mode)\n                    {\n                        if (current_input_device_data.wave_device_ind == input_devices[i].wave_device_ind) i_found_ind = i;\n                    }\n                }\n                else if (input_devices[i].mode == 2)\n                {\n                    f2.input_device_comboBox.Items.Add(&quot;[WasApi] &quot; + input_devices[i].title);\n                    if (current_input_device_data.mode == input_devices[i].mode) if (current_input_device_data.wasapi_id == input_devices[i].wasapi_id) i_found_ind = i;\n                }\n                else\n                {\n                    //f2.input_device_comboBox.Items.Add(input_devices[i].title);\n                }\n            }\n            if ((current_input_mode == 0) &amp;&amp; (i_found_ind == -1))   //if index and name mismatch, try just name\n            {\n                for (int i = 0; i &lt; input_devices_count; i++)\n                {\n                    if (input_devices[i].mode == 0) if (current_input_device_data.title == input_devices[i].title) i_found_ind = i;\n                }\n            }\n            if (i_found_ind &gt;= 0) f2.input_device_comboBox.SelectedIndex = i_found_ind;</code></pre>\n\n",
    "PostedDate": "2014-08-02T05:34:32.39-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1280913",
    "ThreadId": "554387",
    "Html": "<pre><code>            //on change device button click\n            if (f2.input_device_comboBox.SelectedIndex != i_found_ind) change_input_dev_parameters = true;\n            if (f2.output_device_comboBox.SelectedIndex != o_found_ind) change_output_dev_parameters = true;\n            if (f2.output_device_latency_changed) change_output_dev_parameters = true;\n\n\n            if (change_output_dev_parameters)\n            {\n                int new_ind = f2.output_device_comboBox.SelectedIndex;\n                if (output_devices[new_ind].mode == 1)\n                {\n                    Open_dso_device(output_devices[new_ind]);\n                    current_output_device_data.copy_from(output_devices[new_ind]);\n                    current_output_mode = output_devices[new_ind].mode;\n                }\n                else if (output_devices[new_ind].mode == 2)\n                {\n                    Open_wasapiout_device(output_devices[new_ind]);\n                    current_output_device_data.copy_from(output_devices[new_ind]);\n                    current_output_mode = output_devices[new_ind].mode;\n                }//else show warning?\n            }\n\n            if (change_input_dev_parameters)\n            {\n                int new_ind = f2.input_device_comboBox.SelectedIndex;\n                if (input_devices[new_ind].mode == 0)\n                {\n                    Open_wavein_device(input_devices[new_ind]);\n                    current_input_device_data.copy_from(input_devices[new_ind]);\n                    current_input_mode = input_devices[new_ind].mode;\n                }\n                else if (input_devices[new_ind].mode == 2)\n                {\n                    Open_wasapicapture_device(input_devices[new_ind]);\n                    current_input_device_data.copy_from(input_devices[new_ind]);\n                    current_input_mode = input_devices[new_ind].mode;\n                }//else show warning?\n            }</code></pre>\n\n",
    "PostedDate": "2014-08-02T05:36:07.643-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1280920",
    "ThreadId": "554387",
    "Html": "when loading id from config, if current_device is var outside _devices array, you might need to call this as well before opening wasapi<br />\n<pre><code>    void point_wasapicapture(ref device_item dev_temp)\n    {\n        if (dev_temp.mode != 2) return;\n        if (!wasapi_available) return;\n\n        for (int i = 0; i &lt; input_devices_count; i++)\n        {\n            if (input_devices[i].mode != 2) continue;\n            if (input_devices[i].wasapi_id != dev_temp.wasapi_id) continue;\n            dev_temp.copy_from(input_devices[i]);\n        }\n    }\n    void point_wasapiout(ref device_item dev_temp)\n    {\n        if (dev_temp.mode != 2) return;\n        if (!wasapi_available) return;\n\n        for (int i = 0; i &lt; output_devices_count; i++)\n        {\n            if (output_devices[i].mode != 2) continue;\n            if (output_devices[i].wasapi_id != dev_temp.wasapi_id) continue;\n            dev_temp.copy_from(output_devices[i]);\n        }\n    }</code></pre>\n\n",
    "PostedDate": "2014-08-02T05:48:41.94-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1284600",
    "ThreadId": "554387",
    "Html": "Hi Mark,<br />\n<br />\nWe have testing on all the class Waveoutevent.cs, DirectSoundout.cs class but my app creasing or hanging.I could't understand how to solve this issue. Please help me.After 5 days my application has crashed.<br />\n<br />\n<br />\n<br />\nHere is the crash report:<br />\n<pre><code>ask Category: (100)\nLevel:         Error\nKeywords:      Classic\nUser:          N/A\nComputer:      JOH-PC\nDescription:\nFaulting application name: BMAsia Media Player.exe, version: 1.0.0.0, time stamp: 0x53ce37ae\nFaulting module name: comctl32.dll, version: 6.10.7601.17514, time stamp: 0x4ce7b71c\nException code: 0xc00000fd\nFault offset: 0x00027209\nFaulting process id: 0xe74\nFaulting application start time: 0x01cfaba70f6efb4d\nFaulting application path: C:\\Windows\\SysWOW64\\BMAsia\\BMAsia Media Player.exe\nFaulting module path: C:\\Windows\\WinSxS\\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.7601.17514_none_41e6975e2bd6f2b2\\comctl32.dll\nReport Id: 07b9f6a9-1b09-11e4-b3bf-00a0c6db3a93\nEvent Xml:\n&lt;Event xmlns=&quot;http://schemas.microsoft.com/win/2004/08/events/event&quot;&gt;\n  &lt;System&gt;\n    &lt;Provider Name=&quot;Application Error&quot; /&gt;\n    &lt;EventID Qualifiers=&quot;0&quot;&gt;1000&lt;/EventID&gt;\n    &lt;Level&gt;2&lt;/Level&gt;\n    &lt;Task&gt;100&lt;/Task&gt;\n    &lt;Keywords&gt;0x80000000000000&lt;/Keywords&gt;\n    &lt;TimeCreated SystemTime=&quot;2014-08-03T12:23:53.000000000Z&quot; /&gt;\n    &lt;EventRecordID&gt;257269&lt;/EventRecordID&gt;\n    &lt;Channel&gt;Application&lt;/Channel&gt;\n    &lt;Computer&gt;JOH-PC&lt;/Computer&gt;\n    &lt;Security /&gt;\n  &lt;/System&gt;\n  &lt;EventData&gt;\n    &lt;Data&gt;BMAsia Media Player.exe&lt;/Data&gt;\n    &lt;Data&gt;1.0.0.0&lt;/Data&gt;\n    &lt;Data&gt;53ce37ae&lt;/Data&gt;\n    &lt;Data&gt;comctl32.dll&lt;/Data&gt;\n    &lt;Data&gt;6.10.7601.17514&lt;/Data&gt;\n    &lt;Data&gt;4ce7b71c&lt;/Data&gt;\n    &lt;Data&gt;c00000fd&lt;/Data&gt;\n    &lt;Data&gt;00027209&lt;/Data&gt;\n    &lt;Data&gt;e74&lt;/Data&gt;\n    &lt;Data&gt;01cfaba70f6efb4d&lt;/Data&gt;\n    &lt;Data&gt;C:\\Windows\\SysWOW64\\BMAsia\\BMAsia Media Player.exe&lt;/Data&gt;\n    &lt;Data&gt;C:\\Windows\\WinSxS\\x86_microsoft.windows.common-controls_6595b64144ccf1df_6.0.7601.17514_none_41e6975e2bd6f2b2\\comctl32.dll&lt;/Data&gt;\n    &lt;Data&gt;07b9f6a9-1b09-11e4-b3bf-00a0c6db3a93&lt;/Data&gt;\n  &lt;/EventData&gt;\n&lt;/Event&gt;</code></pre>\n\nHere is the second crash report:<br />\n<pre><code>Log Name:      Application\nSource:        Application Error\nDate:          8/3/2014 3:39:09 AM\nEvent ID:      1000\nTask Category: (100)\nLevel:         Error\nKeywords:      Classic\nUser:          N/A\nComputer:      JOH-PC\nDescription:\nFaulting application name: BMAsia Media Player.exe, version: 1.0.0.0, time stamp: 0x53ce37ae\nFaulting module name: USER32.dll, version: 6.1.7601.17514, time stamp: 0x4ce7ba59\nException code: 0xc00000fd\nFault offset: 0x0001613f\nFaulting process id: 0x80c\nFaulting application start time: 0x01cfaba71928bf82\nFaulting application path: C:\\Windows\\SysWOW64\\BMAsia\\BMAsia Media Player.exe\nFaulting module path: C:\\Windows\\syswow64\\USER32.dll\nReport Id: 0d1d4bbd-1a85-11e4-b3bf-00a0c6db3a93\nEvent Xml:\n&lt;Event xmlns=&quot;http://schemas.microsoft.com/win/2004/08/events/event&quot;&gt;\n  &lt;System&gt;\n    &lt;Provider Name=&quot;Application Error&quot; /&gt;\n    &lt;EventID Qualifiers=&quot;0&quot;&gt;1000&lt;/EventID&gt;\n    &lt;Level&gt;2&lt;/Level&gt;\n    &lt;Task&gt;100&lt;/Task&gt;\n    &lt;Keywords&gt;0x80000000000000&lt;/Keywords&gt;\n    &lt;TimeCreated SystemTime=&quot;2014-08-02T20:39:09.000000000Z&quot; /&gt;\n    &lt;EventRecordID&gt;257268&lt;/EventRecordID&gt;\n    &lt;Channel&gt;Application&lt;/Channel&gt;\n    &lt;Computer&gt;JOH-PC&lt;/Computer&gt;\n    &lt;Security /&gt;\n  &lt;/System&gt;\n  &lt;EventData&gt;\n    &lt;Data&gt;BMAsia Media Player.exe&lt;/Data&gt;\n    &lt;Data&gt;1.0.0.0&lt;/Data&gt;\n    &lt;Data&gt;53ce37ae&lt;/Data&gt;\n    &lt;Data&gt;USER32.dll&lt;/Data&gt;\n    &lt;Data&gt;6.1.7601.17514&lt;/Data&gt;\n    &lt;Data&gt;4ce7ba59&lt;/Data&gt;\n    &lt;Data&gt;c00000fd&lt;/Data&gt;\n    &lt;Data&gt;0001613f&lt;/Data&gt;\n    &lt;Data&gt;80c&lt;/Data&gt;\n    &lt;Data&gt;01cfaba71928bf82&lt;/Data&gt;\n    &lt;Data&gt;C:\\Windows\\SysWOW64\\BMAsia\\BMAsia Media Player.exe&lt;/Data&gt;\n    &lt;Data&gt;C:\\Windows\\syswow64\\USER32.dll&lt;/Data&gt;\n    &lt;Data&gt;0d1d4bbd-1a85-11e4-b3bf-00a0c6db3a93&lt;/Data&gt;\n  &lt;/EventData&gt;\n&lt;/Event&gt;</code></pre>\n\nPlease help to solve this error.<br />\n<br />\nWe can't debug Waveout and WaveoutBuffer class because muliple thread execution at a time.<br />\n",
    "PostedDate": "2014-08-04T07:05:00.557-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1286471",
    "ThreadId": "554387",
    "Html": "Hi Mark,\r<br />\n<br />\nI thing the problem might be Waveoutbuffer.cs class .But I am not sure.<br />\n<pre><code>  private void WriteToWaveOut()\n        {\n            try\n            {\n                MmResult result;\n\n                lock (waveOutLock)\n                {\n                    result = WaveInterop.waveOutWrite(hWaveOut, header, Marshal.SizeOf(header));\n                }\n              \n                if (result != MmResult.NoError)\n                {\n                    throw new MmException(result, &quot;waveOutWrite&quot;);\n                    //GC.KeepAlive(this);\n                }\n\n                GC.KeepAlive(this);\n            }\n            catch (Exception ex) { obj_Global.WriteErrorLogFile(&quot;WaveOutBuffer&quot;, &quot;WriteToWaveOut&quot;, ex.Message); }\n        }</code></pre>\n\nresult = WaveInterop.waveOutWrite(hWaveOut, header, Marshal.SizeOf(header)) here access violation occure.But it not come immediately.Please suggest why I do?<br />\n",
    "PostedDate": "2014-08-05T04:53:30.167-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "1286902",
    "ThreadId": "554387",
    "Html": "This is probably related to the garbage collector moving something that shouldn't be moved. Or a callback message getting processed after a waveOut instance has been closed. You said you got the same issue with DirectSoundOut? That doesn't involve waveOutWrite so I would expect that to be safer?<br />\n",
    "PostedDate": "2014-08-06T03:02:40.533-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]