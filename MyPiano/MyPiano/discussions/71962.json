[
  {
    "Id": "245603",
    "ThreadId": "71962",
    "Html": "<p>Hi All!<br>I am working on an application that will enable users to tag content of sound files while recording them.Therefore I&nbsp;need to be able to listen to recordings while they are being recorded. Ideally it would be possible to navigate the file and listen at random points<br>The recordings lasts for several hours<br>I see some ways of doing this:<br><br>1. Ideally&nbsp; play and listen to the&nbsp;actual file being recorded. I have tried but my mediaplayer refuses to play an open file.</p>\r\n<p>2.&nbsp;Record short temporary files&nbsp;and save them and concatenate them to a growing&nbsp;temporary file to be used only for listening.<br>&nbsp;&nbsp; If the temporay files are relatively short eg 1 minute that would be OK I think.</p>\r\n<p>I have tried to record with nAudio and the first file opens and closes OK. But when I have closed it and try to directly start a new recording I receive an error message:</p>\r\n<p>I have been unable to catch the error in my code.</p>\r\n<p>System.NullReferenceException was unhandled<br>&nbsp; Message=&quot;Objektreferensen har inte angetts till en instans av ett objekt.&quot;<br>&nbsp; Source=&quot;NAudio&quot;<br>&nbsp; StackTrace:<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid NAudio.Wave.WaveInStream.Callback(IntPtr waveInHandle, WaveInMessage message, Int32 userData, WaveHeader waveHeader, Int32 reserved)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid NAudio.Wave.WaveInStream.WaveInWindow.WndProc(Message&amp; m)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Windows.Forms.NativeWindow.DebuggableCallback(IntPtr hWnd, Int32 msg, IntPtr wparam, IntPtr lparam)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Windows.Forms.UnsafeNativeMethods.DispatchMessageW(MSG&amp; msg)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Windows.Forms.Application.ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop(Int32 dwComponentID, Int32 reason, Int32 pvLoopData)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Int32 reason, ApplicationContext context)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Int32 reason, ApplicationContext context)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Windows.Forms.Application.Run(ApplicationContext context)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.OnRun()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.DoApplicationModel()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.Run(String[] commandLine)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid Mediarecorder.My.MyApplication.Main(String[] Args) i 17d14f5c-a337-4978-8281-53493378c1071.vb:rad 81<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.AppDomain._nExecuteAssembly(Assembly assembly, String[] args)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.AppDomain.ExecuteAssembly(String assemblyFile, Evidence assemblySecurity, String[] args)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid Microsoft.VisualStudio.HostingProcess.HostProc.RunUsersAssembly()<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Threading.ThreadHelper.ThreadStart_Context(Object state)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; vid System.Threading.ThreadHelper.ThreadStart()</p>\r\n<p>&nbsp;&nbsp;&nbsp; I assume that I am missing something &nbsp;crucial but my idea was to start and stop the recording based on a timer. When the file was closed I would create a new filename for the output and start a new recording with the new name and so on until I manually stop the recording.</p>\r\n<p>Any ideas what I should think about to get this to work?</p>\r\n<p>&nbsp;</p>\r\n<p>Gunnar<br><br><br></p>",
    "PostedDate": "2009-10-14T07:37:37.443-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "246391",
    "ThreadId": "71962",
    "Html": "<p>Hi Gunnar,</p>\r\n<p>are you using the latest NAudio (1.3). WaveInStream is marked as obsolete. You should use WaveIn instead.</p>\r\n<p>Also, wait for the RecordingStopped event after calling Stop to be sure everything has finished</p>\r\n<p>Mark</p>",
    "PostedDate": "2009-10-15T23:48:29.683-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]