[
  {
    "Id": "730459",
    "ThreadId": "287350",
    "Html": "\r\n<p>Hey</p>\r\n<p>I am studing the WasapiCapture class and I got a question about the&nbsp;CaptureThread().</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>    <span style=\"color:blue\">public</span> <span style=\"color:blue\">class</span> WasapiCapture : IWaveIn\r\n    {\r\n        <span style=\"color:blue\">private</span> AudioClient audioClient;\r\n\r\n        <span style=\"color:green\">// Note the parameter</span>\r\n        <span style=\"color:blue\">public</span> <span style=\"color:blue\">void</span> StartRecording()\r\n        {\r\n            <span style=\"color:green\">// ...</span>\r\n            ThreadStart start = <span style=\"color:blue\">delegate</span> { <span style=\"color:blue\">this</span>.CaptureThread(audioClient); };\r\n            <span style=\"color:green\">// ...</span>\r\n        }\r\n\r\n        <span style=\"color:green\">// client == audioClient</span>\r\n        <span style=\"color:green\">// shouldn't the &quot;audioClient&quot; be replaced with the &quot;client&quot;</span>\r\n        <span style=\"color:blue\">private</span> <span style=\"color:blue\">void</span> CaptureThread(AudioClient client)\r\n        {\r\n            Debug.WriteLine(client.BufferSize);\r\n            <span style=\"color:blue\">int</span> bufferFrameCount = audioClient.BufferSize;\r\n            \r\n            <span style=\"color:green\">// Calculate the actual duration of the allocated buffer.</span>\r\n            <span style=\"color:blue\">long</span> actualDuration = (<span style=\"color:blue\">long</span>)((<span style=\"color:blue\">double</span>)REFTIMES_PER_SEC *\r\n                             bufferFrameCount / WaveFormat.SampleRate);\r\n            <span style=\"color:blue\">int</span> sleepMilliseconds = (<span style=\"color:blue\">int</span>)(actualDuration / REFTIMES_PER_MILLISEC / 2);\r\n            \r\n            AudioCaptureClient capture = client.AudioCaptureClient;\r\n            client.Start();\r\n\r\n            <span style=\"color:blue\">try</span>\r\n            {\r\n                Debug.WriteLine(<span style=\"color:blue\">string</span>.Format(<span style=\"color:#a31515\">&quot;sleep: {0} ms&quot;</span>, sleepMilliseconds));\r\n                <span style=\"color:blue\">while</span> (!<span style=\"color:blue\">this</span>.stop)\r\n                {\r\n                    Thread.Sleep(sleepMilliseconds);\r\n                    ReadNextPacket(capture);\r\n                }\r\n            }\r\n            <span style=\"color:blue\">finally</span>\r\n            {\r\n                client.Stop();\r\n\r\n                <span style=\"color:blue\">if</span> (RecordingStopped != <span style=\"color:blue\">null</span>)\r\n                {\r\n                    RecordingStopped(<span style=\"color:blue\">this</span>, EventArgs.Empty);\r\n                }\r\n                <span style=\"color:green\">// don't dispose - the AudioClient only gets disposed when WasapiCapture is disposed</span>\r\n            }\r\n\r\n            System.Diagnostics.Debug.WriteLine(<span style=\"color:#a31515\">&quot;stop wasapi&quot;</span>);\r\n        }\r\n    }\r\n\r\n</pre>\r\n</div>\r\n<p>As I understand the&nbsp;CaptureThread takes&nbsp;AudioClient as a parameter for encapsulation mean but once is used the class field &quot;audioClient.BufferSize&quot; instead of the local &quot;client.BufferSize&quot;. Is there any specific reason for doing this or might it\r\n be it there unnoticed? Probably this will not cause any issue right now. I decided to mention it for the sake of code readability (i.e. understanding).</p>\r\n<p>In any case I suggest to consider small change in the coding style. The class field names could use underscore prefix like &quot;_audioClient&quot;. In this case you do not have to worry to mix local variables with fields or use &quot;this&quot; keyword. The &quot;this&quot; keyword\r\n in this project is redundant and in most cases it is safe to remove it (in 512 cases to be exact).</p>\r\n<p>Just trying to be helpful for the sake of the good project.</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2012-01-25T05:52:08.257-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "730549",
    "ThreadId": "287350",
    "Html": "<p>About audioClient and client, yes, the thread function could just use its parameter, but they are always the same object so it is not a real issue.</p>\r\n<p>As for underscores, that is a coding preference, and makes no difference to the compiled IL, and I have no plans to change the NAudio codebase in this way at the moment.</p>\r\n<p>thanks for your feedback</p>\r\n<p>Mark</p>",
    "PostedDate": "2012-01-25T08:06:29.697-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]