[
  {
    "Id": "718164",
    "ThreadId": "284439",
    "Html": "<p>I have posted it on stackoverflow at: <a href=\"http://stackoverflow.com/questions/8655313/delay-approx-200-ms-in-streamed-audio-playback-c-naudio\" target=\"_blank\">http://stackoverflow.com/questions/8655313/delay-approx-200-ms-in-streamed-audio-playback-c-naudio</a></p>\n<p>Here is the same question:</p>\n<p>I have an application which plays the streamed audio data (like a chat client). The workflow involves three simple steps:<br /> <br /> &nbsp;1. &nbsp; The file header info (sample rate, bits per sample and num of channels) is sent first.<br /> &nbsp;2.&nbsp;&nbsp; Audio waveout device is initialized based on the above parameters.<br /> &nbsp;3. &nbsp; Audio (pcm) data is sent and is played on the above device.<br /> <br /> The data receiving code is native (C code). and it reads data on a socket. Then it calls the managed C# code, which uses Naudio library to initialize device and play audio.<br /> <br /> Now the problem is that, I am seeing some delay in audio playback. I have already instrumented the rest of my code (specifically: transferring data on socket and passing it back to managed code) and that seems to be okay. The whole transfer process is taking  around 600 micro seconds, but after I assign the buffer to Naudio, it seems to start playing it after some time (around 200-250 milliseconds).<br /> <br /> Here is my C# class that handles the audio playing part:</p>\n<pre><code><pre>class foo\n{\n    static  IWavePlayer     s_WaveOut;\n    static  WaveFormat      s_WaveOutFormat;\n    static  BufferedWaveProvider    s_WaveProvider;\n    static  byte[]          s_Samples       = new byte[10000];\n\n    // called from native code to init deivce with specified sample rate and num of channels\n    private static void DeviceInit(int rate, int bits, int channels)\n    {\n        s_WaveOut   = new WaveOut(WaveCallbackInfo.FunctionCallback());\n        s_WaveOutFormat = new WaveFormat(rate, bits, channels);\n        s_WaveProvider  = new BufferedWaveProvider(s_WaveOutFormat);\n\n        s_WaveProvider.DiscardOnBufferOverflow      = true;\n        s_WaveProvider.BufferLength         = 5 * 1024 * 1024;\n\n        s_WaveOut.Init(s_WaveProvider);\n        s_WaveOut.Play();\n    }\n\n    // called from native 'C' code upon receiving audio packates\n    private unsafe static void PlayDataCallback(\n        IntPtr buff,\n        Int32 size)\n    {\n        Marshal.Copy(buff, s_Samples, 0, size);\n        s_WaveProvider.AddSamples(s_Samples, 0, size);\n    }\n}</pre>\n<span><br /></span></code>any idea on what might be causing the delay or am I using it (Naudio) in some wrong way.\n<p>I tried the same Naudio library to play a wav file and that seems to  work perfect,</p>\n<p>the problem is coming only when I am adding samples after  initialing the device myself.</p>\n<p>Thank you,</p>\n<p>Vikram</p>\n<br /></pre>",
    "PostedDate": "2011-12-28T23:39:17.393-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]